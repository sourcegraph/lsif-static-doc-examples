{
  "pathID": "/internal/oserror",
  "documentation": {
    "identifier": "oserror",
    "newPage": true,
    "searchKey": "internal/oserror",
    "tags": [
      "private",
      "package"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package oserror"
  },
  "detail": {
    "kind": "markdown",
    "value": "Package oserror defines errors values used in the os package. \n\nThese types are defined here to permit the syscall package to reference them. \n\n"
  },
  "children": [
    {
      "node": {
        "pathID": "/internal/oserror#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/oserror#ErrClosed",
              "documentation": {
                "identifier": "ErrClosed",
                "newPage": false,
                "searchKey": "oserror.ErrClosed",
                "tags": [
                  "variable",
                  "interface"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var ErrClosed"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ErrClosed = errors.New(\"file already closed\")\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/oserror#ErrExist",
              "documentation": {
                "identifier": "ErrExist",
                "newPage": false,
                "searchKey": "oserror.ErrExist",
                "tags": [
                  "variable",
                  "interface"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var ErrExist"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ErrExist = errors.New(\"file already exists\")\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/oserror#ErrInvalid",
              "documentation": {
                "identifier": "ErrInvalid",
                "newPage": false,
                "searchKey": "oserror.ErrInvalid",
                "tags": [
                  "variable",
                  "interface"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var ErrInvalid"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ErrInvalid = errors.New(\"invalid argument\")\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/oserror#ErrNotExist",
              "documentation": {
                "identifier": "ErrNotExist",
                "newPage": false,
                "searchKey": "oserror.ErrNotExist",
                "tags": [
                  "variable",
                  "interface"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var ErrNotExist"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ErrNotExist = errors.New(\"file does not exist\")\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/oserror#ErrPermission",
              "documentation": {
                "identifier": "ErrPermission",
                "newPage": false,
                "searchKey": "oserror.ErrPermission",
                "tags": [
                  "variable",
                  "interface"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var ErrPermission"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ErrPermission = errors.New(\"permission denied\")\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
