{
  "pathID": "/internal/reflectlite_test",
  "documentation": {
    "identifier": "reflectlite_test",
    "newPage": true,
    "searchKey": "internal/reflectlite_test",
    "tags": [
      "package",
      "private"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package reflectlite_test"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/internal/reflectlite_test#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/reflectlite_test#appendTests",
              "documentation": {
                "identifier": "appendTests",
                "newPage": false,
                "searchKey": "reflectlite_test.appendTests",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var appendTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar appendTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#assignableTests",
              "documentation": {
                "identifier": "assignableTests",
                "newPage": false,
                "searchKey": "reflectlite_test.assignableTests",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var assignableTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar assignableTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#fn1",
              "documentation": {
                "identifier": "fn1",
                "newPage": false,
                "searchKey": "reflectlite_test.fn1",
                "tags": [
                  "variable",
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var fn1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fn1 func() // nil.\n\n```\n\nSimple functions for DeepEqual tests. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#fn2",
              "documentation": {
                "identifier": "fn2",
                "newPage": false,
                "searchKey": "reflectlite_test.fn2",
                "tags": [
                  "variable",
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var fn2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fn2 func() // nil.\n\n```\n\nSimple functions for DeepEqual tests. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#fn3",
              "documentation": {
                "identifier": "fn3",
                "newPage": false,
                "searchKey": "reflectlite_test.fn3",
                "tags": [
                  "variable",
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var fn3"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fn3 = func() { fn1() } // Not nil.\n\n```\n\nSimple functions for DeepEqual tests. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#implementsTests",
              "documentation": {
                "identifier": "implementsTests",
                "newPage": false,
                "searchKey": "reflectlite_test.implementsTests",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var implementsTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar implementsTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#loop1",
              "documentation": {
                "identifier": "loop1",
                "newPage": false,
                "searchKey": "reflectlite_test.loop1",
                "tags": [
                  "variable",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var loop1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar loop1, loop2 Loop\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#loop2",
              "documentation": {
                "identifier": "loop2",
                "newPage": false,
                "searchKey": "reflectlite_test.loop2",
                "tags": [
                  "variable",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var loop2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar loop1, loop2 Loop\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#loopy1",
              "documentation": {
                "identifier": "loopy1",
                "newPage": false,
                "searchKey": "reflectlite_test.loopy1",
                "tags": [
                  "variable",
                  "interface",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var loopy1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar loopy1, loopy2 Loopy\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#loopy2",
              "documentation": {
                "identifier": "loopy2",
                "newPage": false,
                "searchKey": "reflectlite_test.loopy2",
                "tags": [
                  "variable",
                  "interface",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var loopy2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar loopy1, loopy2 Loopy\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#nameTests",
              "documentation": {
                "identifier": "nameTests",
                "newPage": false,
                "searchKey": "reflectlite_test.nameTests",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var nameTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar nameTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#typeNames",
              "documentation": {
                "identifier": "typeNames",
                "newPage": false,
                "searchKey": "reflectlite_test.typeNames",
                "tags": [
                  "variable",
                  "array",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var typeNames"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar typeNames = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#typeOfTests",
              "documentation": {
                "identifier": "typeOfTests",
                "newPage": false,
                "searchKey": "reflectlite_test.typeOfTests",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var typeOfTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar typeOfTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#typeTests",
              "documentation": {
                "identifier": "typeTests",
                "newPage": false,
                "searchKey": "reflectlite_test.typeTests",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var typeTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar typeTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#valueTests",
              "documentation": {
                "identifier": "valueTests",
                "newPage": false,
                "searchKey": "reflectlite_test.valueTests",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var valueTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar valueTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#valueToStringTests",
              "documentation": {
                "identifier": "valueToStringTests",
                "newPage": false,
                "searchKey": "reflectlite_test.valueToStringTests",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var valueToStringTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar valueToStringTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#_i",
              "documentation": {
                "identifier": "_i",
                "newPage": false,
                "searchKey": "reflectlite_test._i",
                "tags": [
                  "variable",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _i"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _i = 7\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/internal/reflectlite_test#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Basic",
              "documentation": {
                "identifier": "Basic",
                "newPage": false,
                "searchKey": "reflectlite_test.Basic",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Basic struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Basic struct {\n\tx int\n\ty float32\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Ch",
              "documentation": {
                "identifier": "Ch",
                "newPage": false,
                "searchKey": "reflectlite_test.Ch",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Ch <-chan interface{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Ch <-chan interface{}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#D1",
              "documentation": {
                "identifier": "D1",
                "newPage": false,
                "searchKey": "reflectlite_test.D1",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type D1 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype D1 struct {\n\td int\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#D2",
              "documentation": {
                "identifier": "D2",
                "newPage": false,
                "searchKey": "reflectlite_test.D2",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type D2 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype D2 struct {\n\td int\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#DeepEqualTest",
              "documentation": {
                "identifier": "DeepEqualTest",
                "newPage": false,
                "searchKey": "reflectlite_test.DeepEqualTest",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type DeepEqualTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DeepEqualTest struct {\n\ta, b interface{}\n\teq   bool\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#IntPtr",
              "documentation": {
                "identifier": "IntPtr",
                "newPage": false,
                "searchKey": "reflectlite_test.IntPtr",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type IntPtr *int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype IntPtr *int\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#IntPtr1",
              "documentation": {
                "identifier": "IntPtr1",
                "newPage": false,
                "searchKey": "reflectlite_test.IntPtr1",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type IntPtr1 *int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype IntPtr1 *int\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Loop",
              "documentation": {
                "identifier": "Loop",
                "newPage": false,
                "searchKey": "reflectlite_test.Loop",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Loop *reflectlite_test.Loop"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Loop *Loop\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Loopy",
              "documentation": {
                "identifier": "Loopy",
                "newPage": false,
                "searchKey": "reflectlite_test.Loopy",
                "tags": [
                  "interface",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Loopy interface{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Loopy interface{}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#NotBasic",
              "documentation": {
                "identifier": "NotBasic",
                "newPage": false,
                "searchKey": "reflectlite_test.NotBasic",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type NotBasic reflectlite_test.Basic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype NotBasic Basic\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Point",
              "documentation": {
                "identifier": "Point",
                "newPage": false,
                "searchKey": "reflectlite_test.Point",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Point struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Point struct {\n\tx, y int\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#Point.AnotherMethod",
                    "documentation": {
                      "identifier": "Point.AnotherMethod",
                      "newPage": false,
                      "searchKey": "reflectlite_test.Point.AnotherMethod",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p Point) AnotherMethod(scale int) int"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p Point) AnotherMethod(scale int) int\n```\n\nThis will be index 0. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#Point.Dist",
                    "documentation": {
                      "identifier": "Point.Dist",
                      "newPage": false,
                      "searchKey": "reflectlite_test.Point.Dist",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p Point) Dist(scale int) int"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p Point) Dist(scale int) int\n```\n\nThis will be index 1. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#Point.GCMethod",
                    "documentation": {
                      "identifier": "Point.GCMethod",
                      "newPage": false,
                      "searchKey": "reflectlite_test.Point.GCMethod",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p Point) GCMethod(k int) int"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p Point) GCMethod(k int) int\n```\n\nThis will be index 2. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#Point.NoArgs",
                    "documentation": {
                      "identifier": "Point.NoArgs",
                      "newPage": false,
                      "searchKey": "reflectlite_test.Point.NoArgs",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p Point) NoArgs()"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p Point) NoArgs()\n```\n\nThis will be index 3. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#Point.TotalDist",
                    "documentation": {
                      "identifier": "Point.TotalDist",
                      "newPage": false,
                      "searchKey": "reflectlite_test.Point.TotalDist",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p Point) TotalDist(points ...Point) int"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p Point) TotalDist(points ...Point) int\n```\n\nThis will be index 4. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#S",
              "documentation": {
                "identifier": "S",
                "newPage": false,
                "searchKey": "reflectlite_test.S",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type S struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype S struct {\n\ti1 int64\n\ti2 int64\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#T",
              "documentation": {
                "identifier": "T",
                "newPage": false,
                "searchKey": "reflectlite_test.T",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type T struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype T struct {\n\ta int\n\tb float64\n\tc string\n\td *int\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Talias1",
              "documentation": {
                "identifier": "Talias1",
                "newPage": false,
                "searchKey": "reflectlite_test.Talias1",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Talias1 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Talias1 struct {\n\tbyte\n\tuint8\n\tint\n\tint32\n\trune\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Talias2",
              "documentation": {
                "identifier": "Talias2",
                "newPage": false,
                "searchKey": "reflectlite_test.Talias2",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Talias2 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Talias2 struct {\n\tTint\n\tTint2\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TheNameOfThisTypeIsExactly255BytesLongSoWhenTheCompilerPrependsTheReflectTestPackageNameAndExtraStarTheLinkerRuntimeAndReflectPackagesWillHaveToCorrectlyDecodeTheSecondLengthByte0123456789_0123456789_0123456789_0123456789_0123456789_012345678",
              "documentation": {
                "identifier": "TheNameOfThisTypeIsExactly255BytesLongSoWhenTheCompilerPrependsTheReflectTestPackageNameAndExtraStarTheLinkerRuntimeAndReflectPackagesWillHaveToCorrectlyDecodeTheSecondLengthByte0123456789_0123456789_0123456789_0123456789_0123456789_012345678",
                "newPage": false,
                "searchKey": "reflectlite_test.TheNameOfThisTypeIsExactly255BytesLongSoWhenTheCompilerPrependsTheReflectTestPackageNameAndExtraStarTheLinkerRuntimeAndReflectPackagesWillHaveToCorrectlyDecodeTheSecondLengthByte0123456789_0123456789_0123456789_0123456789_0123456789_012345678",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type TheNameOfThisTypeIsExactly255BytesLongSoWhenTheCompilerPrependsTheReflectTestPackageNameAndExtraStarTheLinkerRuntimeAndReflectPackagesWillHaveToCorrectlyDecodeTheSecondLengthByte0123456789_0123456789_0123456789_0123456789_0123456789_012345678 int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype TheNameOfThisTypeIsExactly255BytesLongSoWhenTheCompilerPrependsTheReflectTestPackageNameAndExtraStarTheLinkerRuntimeAndReflectPackagesWillHaveToCorrectlyDecodeTheSecondLengthByte0123456789_0123456789_0123456789_0123456789_0123456789_012345678 int\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Tint",
              "documentation": {
                "identifier": "Tint",
                "newPage": false,
                "searchKey": "reflectlite_test.Tint",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Tint int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Tint int\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Tint2",
              "documentation": {
                "identifier": "Tint2",
                "newPage": false,
                "searchKey": "reflectlite_test.Tint2",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Tint2 reflectlite_test.Tint"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Tint2 = Tint\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#big",
              "documentation": {
                "identifier": "big",
                "newPage": false,
                "searchKey": "reflectlite_test.big",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type big struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype big struct {\n\ta, b, c, d, e int64\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#integer",
              "documentation": {
                "identifier": "integer",
                "newPage": false,
                "searchKey": "reflectlite_test.integer",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type integer int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype integer int\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#mapError",
              "documentation": {
                "identifier": "mapError",
                "newPage": false,
                "searchKey": "reflectlite_test.mapError",
                "tags": [
                  "object",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type mapError map[string]string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype mapError map[string]string\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#mapError.Error",
                    "documentation": {
                      "identifier": "mapError.Error",
                      "newPage": false,
                      "searchKey": "reflectlite_test.mapError.Error",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (mapError) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (mapError) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#nameTest",
              "documentation": {
                "identifier": "nameTest",
                "newPage": false,
                "searchKey": "reflectlite_test.nameTest",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type nameTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype nameTest struct {\n\tv    interface{}\n\twant string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#notASTExpr",
              "documentation": {
                "identifier": "notASTExpr",
                "newPage": false,
                "searchKey": "reflectlite_test.notASTExpr",
                "tags": [
                  "interface",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type notASTExpr interface"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype notASTExpr interface {\n\tPos() token.Pos\n\tEnd() token.Pos\n\texprNode()\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#notAnExpr",
              "documentation": {
                "identifier": "notAnExpr",
                "newPage": false,
                "searchKey": "reflectlite_test.notAnExpr",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type notAnExpr struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype notAnExpr struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#notAnExpr.End",
                    "documentation": {
                      "identifier": "notAnExpr.End",
                      "newPage": false,
                      "searchKey": "reflectlite_test.notAnExpr.End",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (notAnExpr) End() token.Pos"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (notAnExpr) End() token.Pos\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#notAnExpr.Pos",
                    "documentation": {
                      "identifier": "notAnExpr.Pos",
                      "newPage": false,
                      "searchKey": "reflectlite_test.notAnExpr.Pos",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (notAnExpr) Pos() token.Pos"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (notAnExpr) Pos() token.Pos\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#notAnExpr.exprNode",
                    "documentation": {
                      "identifier": "notAnExpr.exprNode",
                      "newPage": false,
                      "searchKey": "reflectlite_test.notAnExpr.exprNode",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (notAnExpr) exprNode()"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (notAnExpr) exprNode()\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#pair",
              "documentation": {
                "identifier": "pair",
                "newPage": false,
                "searchKey": "reflectlite_test.pair",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type pair struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype pair struct {\n\ti interface{}\n\ts string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#self",
              "documentation": {
                "identifier": "self",
                "newPage": false,
                "searchKey": "reflectlite_test.self",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type self struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype self struct{}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#visitor",
              "documentation": {
                "identifier": "visitor",
                "newPage": false,
                "searchKey": "reflectlite_test.visitor",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type visitor struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype visitor struct {\n\tm map[string]map[string]bool\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#newVisitor",
                    "documentation": {
                      "identifier": "newVisitor",
                      "newPage": false,
                      "searchKey": "reflectlite_test.newVisitor",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func newVisitor() visitor"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc newVisitor() visitor\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#visitor.Visit",
                    "documentation": {
                      "identifier": "visitor.Visit",
                      "newPage": false,
                      "searchKey": "reflectlite_test.visitor.Visit",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (v visitor) Visit(n ast.Node) ast.Visitor"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (v visitor) Visit(n ast.Node) ast.Visitor\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/reflectlite_test#visitor.filter",
                    "documentation": {
                      "identifier": "visitor.filter",
                      "newPage": false,
                      "searchKey": "reflectlite_test.visitor.filter",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (v visitor) filter(name string) bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (v visitor) filter(name string) bool\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/internal/reflectlite_test#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Indirect",
              "documentation": {
                "identifier": "Indirect",
                "newPage": false,
                "searchKey": "reflectlite_test.Indirect",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func Indirect(v Value) Value"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Indirect(v Value) Value\n```\n\nIndirect returns the value that v points to. If v is a nil pointer, Indirect returns a zero Value. If v is not a pointer, Indirect returns v. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#Nil",
              "documentation": {
                "identifier": "Nil",
                "newPage": false,
                "searchKey": "reflectlite_test.Nil",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func Nil(a interface{}, t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Nil(a interface{}, t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#NotNil",
              "documentation": {
                "identifier": "NotNil",
                "newPage": false,
                "searchKey": "reflectlite_test.NotNil",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func NotNil(a interface{}, t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc NotNil(a interface{}, t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestAliasNames",
              "documentation": {
                "identifier": "TestAliasNames",
                "newPage": false,
                "searchKey": "reflectlite_test.TestAliasNames",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAliasNames(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAliasNames(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestAll",
              "documentation": {
                "identifier": "TestAll",
                "newPage": false,
                "searchKey": "reflectlite_test.TestAll",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAll(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAll(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestAllocations",
              "documentation": {
                "identifier": "TestAllocations",
                "newPage": false,
                "searchKey": "reflectlite_test.TestAllocations",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAllocations(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAllocations(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestAssignableTo",
              "documentation": {
                "identifier": "TestAssignableTo",
                "newPage": false,
                "searchKey": "reflectlite_test.TestAssignableTo",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAssignableTo(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAssignableTo(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestBigStruct",
              "documentation": {
                "identifier": "TestBigStruct",
                "newPage": false,
                "searchKey": "reflectlite_test.TestBigStruct",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBigStruct(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBigStruct(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestBigUnnamedStruct",
              "documentation": {
                "identifier": "TestBigUnnamedStruct",
                "newPage": false,
                "searchKey": "reflectlite_test.TestBigUnnamedStruct",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBigUnnamedStruct(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBigUnnamedStruct(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestBigZero",
              "documentation": {
                "identifier": "TestBigZero",
                "newPage": false,
                "searchKey": "reflectlite_test.TestBigZero",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBigZero(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBigZero(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestCanSetField",
              "documentation": {
                "identifier": "TestCanSetField",
                "newPage": false,
                "searchKey": "reflectlite_test.TestCanSetField",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCanSetField(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCanSetField(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestFunctionValue",
              "documentation": {
                "identifier": "TestFunctionValue",
                "newPage": false,
                "searchKey": "reflectlite_test.TestFunctionValue",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFunctionValue(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFunctionValue(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestImplements",
              "documentation": {
                "identifier": "TestImplements",
                "newPage": false,
                "searchKey": "reflectlite_test.TestImplements",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestImplements(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestImplements(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestImplicitSetConversion",
              "documentation": {
                "identifier": "TestImplicitSetConversion",
                "newPage": false,
                "searchKey": "reflectlite_test.TestImplicitSetConversion",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestImplicitSetConversion(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestImplicitSetConversion(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestImportPath",
              "documentation": {
                "identifier": "TestImportPath",
                "newPage": false,
                "searchKey": "reflectlite_test.TestImportPath",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestImportPath(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestImportPath(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestInterfaceValue",
              "documentation": {
                "identifier": "TestInterfaceValue",
                "newPage": false,
                "searchKey": "reflectlite_test.TestInterfaceValue",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestInterfaceValue(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestInterfaceValue(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestInvalid",
              "documentation": {
                "identifier": "TestInvalid",
                "newPage": false,
                "searchKey": "reflectlite_test.TestInvalid",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestInvalid(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestInvalid(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestIsNil",
              "documentation": {
                "identifier": "TestIsNil",
                "newPage": false,
                "searchKey": "reflectlite_test.TestIsNil",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestIsNil(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestIsNil(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestMapSetNil",
              "documentation": {
                "identifier": "TestMapSetNil",
                "newPage": false,
                "searchKey": "reflectlite_test.TestMapSetNil",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMapSetNil(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMapSetNil(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestMirrorWithReflect",
              "documentation": {
                "identifier": "TestMirrorWithReflect",
                "newPage": false,
                "searchKey": "reflectlite_test.TestMirrorWithReflect",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMirrorWithReflect(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMirrorWithReflect(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestNames",
              "documentation": {
                "identifier": "TestNames",
                "newPage": false,
                "searchKey": "reflectlite_test.TestNames",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNames(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNames(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestNilPtrValueSub",
              "documentation": {
                "identifier": "TestNilPtrValueSub",
                "newPage": false,
                "searchKey": "reflectlite_test.TestNilPtrValueSub",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNilPtrValueSub(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNilPtrValueSub(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestPtrSetNil",
              "documentation": {
                "identifier": "TestPtrSetNil",
                "newPage": false,
                "searchKey": "reflectlite_test.TestPtrSetNil",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestPtrSetNil(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestPtrSetNil(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestSetPanic",
              "documentation": {
                "identifier": "TestSetPanic",
                "newPage": false,
                "searchKey": "reflectlite_test.TestSetPanic",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSetPanic(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSetPanic(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestSetValue",
              "documentation": {
                "identifier": "TestSetValue",
                "newPage": false,
                "searchKey": "reflectlite_test.TestSetValue",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSetValue(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSetValue(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestTypeOf",
              "documentation": {
                "identifier": "TestTypeOf",
                "newPage": false,
                "searchKey": "reflectlite_test.TestTypeOf",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTypeOf(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTypeOf(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestTypes",
              "documentation": {
                "identifier": "TestTypes",
                "newPage": false,
                "searchKey": "reflectlite_test.TestTypes",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTypes(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTypes(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestUnaddressableField",
              "documentation": {
                "identifier": "TestUnaddressableField",
                "newPage": false,
                "searchKey": "reflectlite_test.TestUnaddressableField",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestUnaddressableField(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestUnaddressableField(t *testing.T)\n```\n\nTestUnaddressableField tests that the reflect package will not allow a type from another package to be used as a named type with an unexported field. \n\nThis ensures that unexported fields cannot be modified by other packages. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TestValueToString",
              "documentation": {
                "identifier": "TestValueToString",
                "newPage": false,
                "searchKey": "reflectlite_test.TestValueToString",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestValueToString(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestValueToString(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#ToValue",
              "documentation": {
                "identifier": "ToValue",
                "newPage": false,
                "searchKey": "reflectlite_test.ToValue",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ToValue(v Value) reflect.Value"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ToValue(v Value) reflect.Value\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#TypeString",
              "documentation": {
                "identifier": "TypeString",
                "newPage": false,
                "searchKey": "reflectlite_test.TypeString",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TypeString(t Type) string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TypeString(t Type) string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#assert",
              "documentation": {
                "identifier": "assert",
                "newPage": false,
                "searchKey": "reflectlite_test.assert",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func assert(t *testing.T, s, want string)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc assert(t *testing.T, s, want string)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#init.all_test.go",
              "documentation": {
                "identifier": "init.all_test.go",
                "newPage": false,
                "searchKey": "reflectlite_test.init",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func init()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc init()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#loadTypes",
              "documentation": {
                "identifier": "loadTypes",
                "newPage": false,
                "searchKey": "reflectlite_test.loadTypes",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func loadTypes(path, pkgName string, v visitor)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc loadTypes(path, pkgName string, v visitor)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#noAlloc",
              "documentation": {
                "identifier": "noAlloc",
                "newPage": false,
                "searchKey": "reflectlite_test.noAlloc",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func noAlloc(t *testing.T, n int, f func(int))"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc noAlloc(t *testing.T, n int, f func(int))\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#sameInts",
              "documentation": {
                "identifier": "sameInts",
                "newPage": false,
                "searchKey": "reflectlite_test.sameInts",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func sameInts(x, y []int) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc sameInts(x, y []int) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#shouldPanic",
              "documentation": {
                "identifier": "shouldPanic",
                "newPage": false,
                "searchKey": "reflectlite_test.shouldPanic",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func shouldPanic(f func())"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc shouldPanic(f func())\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#testReflectType",
              "documentation": {
                "identifier": "testReflectType",
                "newPage": false,
                "searchKey": "reflectlite_test.testReflectType",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testReflectType(t *testing.T, i int, typ Type, want string)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testReflectType(t *testing.T, i int, typ Type, want string)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#testType",
              "documentation": {
                "identifier": "testType",
                "newPage": false,
                "searchKey": "reflectlite_test.testType",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testType(t *testing.T, i int, typ Type, want string)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testType(t *testing.T, i int, typ Type, want string)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#valueToString",
              "documentation": {
                "identifier": "valueToString",
                "newPage": false,
                "searchKey": "reflectlite_test.valueToString",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func valueToString(v Value) string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc valueToString(v Value) string\n```\n\nvalueToString returns a textual representation of the reflection value val. For debugging only. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/reflectlite_test#valueToStringImpl",
              "documentation": {
                "identifier": "valueToStringImpl",
                "newPage": false,
                "searchKey": "reflectlite_test.valueToStringImpl",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func valueToStringImpl(val reflect.Value) string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc valueToStringImpl(val reflect.Value) string\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
