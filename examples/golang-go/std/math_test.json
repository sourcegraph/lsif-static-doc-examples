{
  "pathID": "/std/math_test",
  "documentation": {
    "identifier": "math_test",
    "newPage": true,
    "searchKey": "std/math_test",
    "tags": []
  },
  "label": {
    "kind": "plaintext",
    "value": "Package math_test"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/std/math_test#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/math_test#SmallestNormalFloat64",
              "documentation": {
                "identifier": "SmallestNormalFloat64",
                "newPage": false,
                "searchKey": "math_test.SmallestNormalFloat64",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "const SmallestNormalFloat64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SmallestNormalFloat64 = 2.2250738585072014e-308 // 2**-1022\n\n```\n\narguments and expected results for boundary cases \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#LargestSubnormalFloat64",
              "documentation": {
                "identifier": "LargestSubnormalFloat64",
                "newPage": false,
                "searchKey": "math_test.LargestSubnormalFloat64",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "const LargestSubnormalFloat64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst LargestSubnormalFloat64 = SmallestNormalFloat64 - SmallestNonzeroFloat64\n```\n\narguments and expected results for boundary cases \n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/std/math_test#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/math_test#vf",
              "documentation": {
                "identifier": "vf",
                "newPage": false,
                "searchKey": "math_test.vf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vf = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#acos",
              "documentation": {
                "identifier": "acos",
                "newPage": false,
                "searchKey": "math_test.acos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var acos"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar acos = ...\n```\n\nThe expected results below were computed by the high precision calculators at [https://keisan.casio.com/](https://keisan.casio.com/).  More exact input values (array vf[], above) were obtained by printing them with \"%.26f\".  The answers were calculated to 26 digits (by using the \"Digit number\" drop-down control of each calculator). \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#acosh",
              "documentation": {
                "identifier": "acosh",
                "newPage": false,
                "searchKey": "math_test.acosh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var acosh"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar acosh = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#asin",
              "documentation": {
                "identifier": "asin",
                "newPage": false,
                "searchKey": "math_test.asin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var asin"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar asin = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#asinh",
              "documentation": {
                "identifier": "asinh",
                "newPage": false,
                "searchKey": "math_test.asinh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var asinh"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar asinh = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#atan",
              "documentation": {
                "identifier": "atan",
                "newPage": false,
                "searchKey": "math_test.atan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atan = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#atanh",
              "documentation": {
                "identifier": "atanh",
                "newPage": false,
                "searchKey": "math_test.atanh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atanh"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atanh = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#atan2",
              "documentation": {
                "identifier": "atan2",
                "newPage": false,
                "searchKey": "math_test.atan2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atan2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atan2 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#cbrt",
              "documentation": {
                "identifier": "cbrt",
                "newPage": false,
                "searchKey": "math_test.cbrt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var cbrt"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar cbrt = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ceil",
              "documentation": {
                "identifier": "ceil",
                "newPage": false,
                "searchKey": "math_test.ceil",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ceil"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ceil = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#copysign",
              "documentation": {
                "identifier": "copysign",
                "newPage": false,
                "searchKey": "math_test.copysign",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var copysign"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar copysign = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#cos",
              "documentation": {
                "identifier": "cos",
                "newPage": false,
                "searchKey": "math_test.cos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var cos"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar cos = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#cosLarge",
              "documentation": {
                "identifier": "cosLarge",
                "newPage": false,
                "searchKey": "math_test.cosLarge",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var cosLarge"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar cosLarge = ...\n```\n\nResults for 100000 * Pi + vf[i] \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#cosh",
              "documentation": {
                "identifier": "cosh",
                "newPage": false,
                "searchKey": "math_test.cosh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var cosh"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar cosh = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#erf",
              "documentation": {
                "identifier": "erf",
                "newPage": false,
                "searchKey": "math_test.erf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var erf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar erf = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#erfc",
              "documentation": {
                "identifier": "erfc",
                "newPage": false,
                "searchKey": "math_test.erfc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var erfc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar erfc = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#erfinv",
              "documentation": {
                "identifier": "erfinv",
                "newPage": false,
                "searchKey": "math_test.erfinv",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var erfinv"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar erfinv = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#exp",
              "documentation": {
                "identifier": "exp",
                "newPage": false,
                "searchKey": "math_test.exp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var exp"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar exp = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#expm1",
              "documentation": {
                "identifier": "expm1",
                "newPage": false,
                "searchKey": "math_test.expm1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var expm1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar expm1 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#expm1Large",
              "documentation": {
                "identifier": "expm1Large",
                "newPage": false,
                "searchKey": "math_test.expm1Large",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var expm1Large"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar expm1Large = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#exp2",
              "documentation": {
                "identifier": "exp2",
                "newPage": false,
                "searchKey": "math_test.exp2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var exp2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar exp2 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#fabs",
              "documentation": {
                "identifier": "fabs",
                "newPage": false,
                "searchKey": "math_test.fabs",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fabs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fabs = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#fdim",
              "documentation": {
                "identifier": "fdim",
                "newPage": false,
                "searchKey": "math_test.fdim",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fdim"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fdim = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#floor",
              "documentation": {
                "identifier": "floor",
                "newPage": false,
                "searchKey": "math_test.floor",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var floor"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar floor = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#fmod",
              "documentation": {
                "identifier": "fmod",
                "newPage": false,
                "searchKey": "math_test.fmod",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fmod"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fmod = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#frexp",
              "documentation": {
                "identifier": "frexp",
                "newPage": false,
                "searchKey": "math_test.frexp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var frexp"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar frexp = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#gamma",
              "documentation": {
                "identifier": "gamma",
                "newPage": false,
                "searchKey": "math_test.gamma",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var gamma"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar gamma = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#j0",
              "documentation": {
                "identifier": "j0",
                "newPage": false,
                "searchKey": "math_test.j0",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var j0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar j0 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#j1",
              "documentation": {
                "identifier": "j1",
                "newPage": false,
                "searchKey": "math_test.j1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var j1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar j1 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#j2",
              "documentation": {
                "identifier": "j2",
                "newPage": false,
                "searchKey": "math_test.j2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var j2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar j2 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#jM3",
              "documentation": {
                "identifier": "jM3",
                "newPage": false,
                "searchKey": "math_test.jM3",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var jM3"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar jM3 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#lgamma",
              "documentation": {
                "identifier": "lgamma",
                "newPage": false,
                "searchKey": "math_test.lgamma",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var lgamma"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar lgamma = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#log",
              "documentation": {
                "identifier": "log",
                "newPage": false,
                "searchKey": "math_test.log",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var log"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar log = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#logb",
              "documentation": {
                "identifier": "logb",
                "newPage": false,
                "searchKey": "math_test.logb",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var logb"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar logb = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#log10",
              "documentation": {
                "identifier": "log10",
                "newPage": false,
                "searchKey": "math_test.log10",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var log10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar log10 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#log1p",
              "documentation": {
                "identifier": "log1p",
                "newPage": false,
                "searchKey": "math_test.log1p",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var log1p"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar log1p = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#log2",
              "documentation": {
                "identifier": "log2",
                "newPage": false,
                "searchKey": "math_test.log2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var log2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar log2 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#modf",
              "documentation": {
                "identifier": "modf",
                "newPage": false,
                "searchKey": "math_test.modf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var modf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar modf = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#nextafter32",
              "documentation": {
                "identifier": "nextafter32",
                "newPage": false,
                "searchKey": "math_test.nextafter32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var nextafter32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar nextafter32 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#nextafter64",
              "documentation": {
                "identifier": "nextafter64",
                "newPage": false,
                "searchKey": "math_test.nextafter64",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var nextafter64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar nextafter64 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#pow",
              "documentation": {
                "identifier": "pow",
                "newPage": false,
                "searchKey": "math_test.pow",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var pow"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar pow = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#remainder",
              "documentation": {
                "identifier": "remainder",
                "newPage": false,
                "searchKey": "math_test.remainder",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var remainder"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar remainder = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#round",
              "documentation": {
                "identifier": "round",
                "newPage": false,
                "searchKey": "math_test.round",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var round"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar round = []float64{\n\t5,\n\t8,\n\tCopysign(0, -1),\n\t-5,\n\t10,\n\t3,\n\t5,\n\t3,\n\t2,\n\t-9,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#signbit",
              "documentation": {
                "identifier": "signbit",
                "newPage": false,
                "searchKey": "math_test.signbit",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var signbit"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar signbit = []bool{\n\tfalse,\n\tfalse,\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\tfalse,\n\ttrue,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#sin",
              "documentation": {
                "identifier": "sin",
                "newPage": false,
                "searchKey": "math_test.sin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sin"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sin = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#sinLarge",
              "documentation": {
                "identifier": "sinLarge",
                "newPage": false,
                "searchKey": "math_test.sinLarge",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sinLarge"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sinLarge = ...\n```\n\nResults for 100000 * Pi + vf[i] \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#sinh",
              "documentation": {
                "identifier": "sinh",
                "newPage": false,
                "searchKey": "math_test.sinh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sinh"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sinh = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#sqrt",
              "documentation": {
                "identifier": "sqrt",
                "newPage": false,
                "searchKey": "math_test.sqrt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sqrt"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sqrt = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#tan",
              "documentation": {
                "identifier": "tan",
                "newPage": false,
                "searchKey": "math_test.tan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var tan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar tan = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#tanLarge",
              "documentation": {
                "identifier": "tanLarge",
                "newPage": false,
                "searchKey": "math_test.tanLarge",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var tanLarge"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar tanLarge = ...\n```\n\nResults for 100000 * Pi + vf[i] \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#tanh",
              "documentation": {
                "identifier": "tanh",
                "newPage": false,
                "searchKey": "math_test.tanh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var tanh"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar tanh = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#trunc",
              "documentation": {
                "identifier": "trunc",
                "newPage": false,
                "searchKey": "math_test.trunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var trunc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar trunc = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#y0",
              "documentation": {
                "identifier": "y0",
                "newPage": false,
                "searchKey": "math_test.y0",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var y0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar y0 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#y1",
              "documentation": {
                "identifier": "y1",
                "newPage": false,
                "searchKey": "math_test.y1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var y1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar y1 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#y2",
              "documentation": {
                "identifier": "y2",
                "newPage": false,
                "searchKey": "math_test.y2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var y2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar y2 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#yM3",
              "documentation": {
                "identifier": "yM3",
                "newPage": false,
                "searchKey": "math_test.yM3",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var yM3"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar yM3 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfacosSC",
              "documentation": {
                "identifier": "vfacosSC",
                "newPage": false,
                "searchKey": "math_test.vfacosSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfacosSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfacosSC = []float64{\n\t-Pi,\n\t1,\n\tPi,\n\tNaN(),\n}\n```\n\narguments and expected results for special cases \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#acosSC",
              "documentation": {
                "identifier": "acosSC",
                "newPage": false,
                "searchKey": "math_test.acosSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var acosSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar acosSC = []float64{\n\tNaN(),\n\t0,\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfacoshSC",
              "documentation": {
                "identifier": "vfacoshSC",
                "newPage": false,
                "searchKey": "math_test.vfacoshSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfacoshSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfacoshSC = []float64{\n\tInf(-1),\n\t0.5,\n\t1,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#acoshSC",
              "documentation": {
                "identifier": "acoshSC",
                "newPage": false,
                "searchKey": "math_test.acoshSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var acoshSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar acoshSC = []float64{\n\tNaN(),\n\tNaN(),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfasinSC",
              "documentation": {
                "identifier": "vfasinSC",
                "newPage": false,
                "searchKey": "math_test.vfasinSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfasinSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfasinSC = []float64{\n\t-Pi,\n\tCopysign(0, -1),\n\t0,\n\tPi,\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#asinSC",
              "documentation": {
                "identifier": "asinSC",
                "newPage": false,
                "searchKey": "math_test.asinSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var asinSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar asinSC = []float64{\n\tNaN(),\n\tCopysign(0, -1),\n\t0,\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfasinhSC",
              "documentation": {
                "identifier": "vfasinhSC",
                "newPage": false,
                "searchKey": "math_test.vfasinhSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfasinhSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfasinhSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#asinhSC",
              "documentation": {
                "identifier": "asinhSC",
                "newPage": false,
                "searchKey": "math_test.asinhSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var asinhSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar asinhSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfatanSC",
              "documentation": {
                "identifier": "vfatanSC",
                "newPage": false,
                "searchKey": "math_test.vfatanSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfatanSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfatanSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#atanSC",
              "documentation": {
                "identifier": "atanSC",
                "newPage": false,
                "searchKey": "math_test.atanSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atanSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atanSC = []float64{\n\t-Pi / 2,\n\tCopysign(0, -1),\n\t0,\n\tPi / 2,\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfatanhSC",
              "documentation": {
                "identifier": "vfatanhSC",
                "newPage": false,
                "searchKey": "math_test.vfatanhSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfatanhSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfatanhSC = []float64{\n\tInf(-1),\n\t-Pi,\n\t-1,\n\tCopysign(0, -1),\n\t0,\n\t1,\n\tPi,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#atanhSC",
              "documentation": {
                "identifier": "atanhSC",
                "newPage": false,
                "searchKey": "math_test.atanhSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atanhSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atanhSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfatan2SC",
              "documentation": {
                "identifier": "vfatan2SC",
                "newPage": false,
                "searchKey": "math_test.vfatan2SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfatan2SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfatan2SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#atan2SC",
              "documentation": {
                "identifier": "atan2SC",
                "newPage": false,
                "searchKey": "math_test.atan2SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atan2SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atan2SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfcbrtSC",
              "documentation": {
                "identifier": "vfcbrtSC",
                "newPage": false,
                "searchKey": "math_test.vfcbrtSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfcbrtSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfcbrtSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#cbrtSC",
              "documentation": {
                "identifier": "cbrtSC",
                "newPage": false,
                "searchKey": "math_test.cbrtSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var cbrtSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar cbrtSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfceilSC",
              "documentation": {
                "identifier": "vfceilSC",
                "newPage": false,
                "searchKey": "math_test.vfceilSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfceilSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfceilSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ceilSC",
              "documentation": {
                "identifier": "ceilSC",
                "newPage": false,
                "searchKey": "math_test.ceilSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ceilSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ceilSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfcopysignSC",
              "documentation": {
                "identifier": "vfcopysignSC",
                "newPage": false,
                "searchKey": "math_test.vfcopysignSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfcopysignSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfcopysignSC = []float64{\n\tInf(-1),\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#copysignSC",
              "documentation": {
                "identifier": "copysignSC",
                "newPage": false,
                "searchKey": "math_test.copysignSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var copysignSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar copysignSC = []float64{\n\tInf(-1),\n\tInf(-1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfcosSC",
              "documentation": {
                "identifier": "vfcosSC",
                "newPage": false,
                "searchKey": "math_test.vfcosSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfcosSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfcosSC = []float64{\n\tInf(-1),\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#cosSC",
              "documentation": {
                "identifier": "cosSC",
                "newPage": false,
                "searchKey": "math_test.cosSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var cosSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar cosSC = []float64{\n\tNaN(),\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfcoshSC",
              "documentation": {
                "identifier": "vfcoshSC",
                "newPage": false,
                "searchKey": "math_test.vfcoshSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfcoshSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfcoshSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#coshSC",
              "documentation": {
                "identifier": "coshSC",
                "newPage": false,
                "searchKey": "math_test.coshSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var coshSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar coshSC = []float64{\n\tInf(1),\n\t1,\n\t1,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vferfSC",
              "documentation": {
                "identifier": "vferfSC",
                "newPage": false,
                "searchKey": "math_test.vferfSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vferfSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vferfSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n\t-1000,\n\t1000,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#erfSC",
              "documentation": {
                "identifier": "erfSC",
                "newPage": false,
                "searchKey": "math_test.erfSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var erfSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar erfSC = []float64{\n\t-1,\n\tCopysign(0, -1),\n\t0,\n\t1,\n\tNaN(),\n\t-1,\n\t1,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vferfcSC",
              "documentation": {
                "identifier": "vferfcSC",
                "newPage": false,
                "searchKey": "math_test.vferfcSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vferfcSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vferfcSC = []float64{\n\tInf(-1),\n\tInf(1),\n\tNaN(),\n\t-1000,\n\t1000,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#erfcSC",
              "documentation": {
                "identifier": "erfcSC",
                "newPage": false,
                "searchKey": "math_test.erfcSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var erfcSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar erfcSC = []float64{\n\t2,\n\t0,\n\tNaN(),\n\t2,\n\t0,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vferfinvSC",
              "documentation": {
                "identifier": "vferfinvSC",
                "newPage": false,
                "searchKey": "math_test.vferfinvSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vferfinvSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vferfinvSC = []float64{\n\t1,\n\t-1,\n\t0,\n\tInf(-1),\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#erfinvSC",
              "documentation": {
                "identifier": "erfinvSC",
                "newPage": false,
                "searchKey": "math_test.erfinvSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var erfinvSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar erfinvSC = []float64{\n\tInf(+1),\n\tInf(-1),\n\t0,\n\tNaN(),\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vferfcinvSC",
              "documentation": {
                "identifier": "vferfcinvSC",
                "newPage": false,
                "searchKey": "math_test.vferfcinvSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vferfcinvSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vferfcinvSC = []float64{\n\t0,\n\t2,\n\t1,\n\tInf(1),\n\tInf(-1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#erfcinvSC",
              "documentation": {
                "identifier": "erfcinvSC",
                "newPage": false,
                "searchKey": "math_test.erfcinvSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var erfcinvSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar erfcinvSC = []float64{\n\tInf(+1),\n\tInf(-1),\n\t0,\n\tNaN(),\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfexpSC",
              "documentation": {
                "identifier": "vfexpSC",
                "newPage": false,
                "searchKey": "math_test.vfexpSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfexpSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfexpSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#expSC",
              "documentation": {
                "identifier": "expSC",
                "newPage": false,
                "searchKey": "math_test.expSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var expSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar expSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfexp2SC",
              "documentation": {
                "identifier": "vfexp2SC",
                "newPage": false,
                "searchKey": "math_test.vfexp2SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfexp2SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfexp2SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#exp2SC",
              "documentation": {
                "identifier": "exp2SC",
                "newPage": false,
                "searchKey": "math_test.exp2SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var exp2SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar exp2SC = []float64{\n\t0,\n\t0,\n\tInf(1),\n\tInf(1),\n\tNaN(),\n\tInf(1),\n\t5e-324,\n\t1.0000000025821745,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfexpm1SC",
              "documentation": {
                "identifier": "vfexpm1SC",
                "newPage": false,
                "searchKey": "math_test.vfexpm1SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfexpm1SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfexpm1SC = []float64{\n\tInf(-1),\n\t-710,\n\tCopysign(0, -1),\n\t0,\n\t710,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#expm1SC",
              "documentation": {
                "identifier": "expm1SC",
                "newPage": false,
                "searchKey": "math_test.expm1SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var expm1SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar expm1SC = []float64{\n\t-1,\n\t-1,\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vffabsSC",
              "documentation": {
                "identifier": "vffabsSC",
                "newPage": false,
                "searchKey": "math_test.vffabsSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vffabsSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vffabsSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#fabsSC",
              "documentation": {
                "identifier": "fabsSC",
                "newPage": false,
                "searchKey": "math_test.fabsSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fabsSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fabsSC = []float64{\n\tInf(1),\n\t0,\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vffdimSC",
              "documentation": {
                "identifier": "vffdimSC",
                "newPage": false,
                "searchKey": "math_test.vffdimSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vffdimSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vffdimSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#nan",
              "documentation": {
                "identifier": "nan",
                "newPage": false,
                "searchKey": "math_test.nan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var nan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar nan = Float64frombits(0xFFF8000000000000) // SSE2 DIVSD 0/0\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vffdim2SC",
              "documentation": {
                "identifier": "vffdim2SC",
                "newPage": false,
                "searchKey": "math_test.vffdim2SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vffdim2SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vffdim2SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#fdimSC",
              "documentation": {
                "identifier": "fdimSC",
                "newPage": false,
                "searchKey": "math_test.fdimSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fdimSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fdimSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#fmaxSC",
              "documentation": {
                "identifier": "fmaxSC",
                "newPage": false,
                "searchKey": "math_test.fmaxSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fmaxSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fmaxSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#fminSC",
              "documentation": {
                "identifier": "fminSC",
                "newPage": false,
                "searchKey": "math_test.fminSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fminSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fminSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vffmodSC",
              "documentation": {
                "identifier": "vffmodSC",
                "newPage": false,
                "searchKey": "math_test.vffmodSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vffmodSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vffmodSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#fmodSC",
              "documentation": {
                "identifier": "fmodSC",
                "newPage": false,
                "searchKey": "math_test.fmodSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fmodSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fmodSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vffrexpSC",
              "documentation": {
                "identifier": "vffrexpSC",
                "newPage": false,
                "searchKey": "math_test.vffrexpSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vffrexpSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vffrexpSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#frexpSC",
              "documentation": {
                "identifier": "frexpSC",
                "newPage": false,
                "searchKey": "math_test.frexpSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var frexpSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar frexpSC = []fi{\n\t{Inf(-1), 0},\n\t{Copysign(0, -1), 0},\n\t{0, 0},\n\t{Inf(1), 0},\n\t{NaN(), 0},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfgamma",
              "documentation": {
                "identifier": "vfgamma",
                "newPage": false,
                "searchKey": "math_test.vfgamma",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfgamma"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfgamma = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfhypotSC",
              "documentation": {
                "identifier": "vfhypotSC",
                "newPage": false,
                "searchKey": "math_test.vfhypotSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfhypotSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfhypotSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#hypotSC",
              "documentation": {
                "identifier": "hypotSC",
                "newPage": false,
                "searchKey": "math_test.hypotSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var hypotSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar hypotSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ilogbSC",
              "documentation": {
                "identifier": "ilogbSC",
                "newPage": false,
                "searchKey": "math_test.ilogbSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ilogbSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ilogbSC = []int{\n\tMaxInt32,\n\tMinInt32,\n\tMaxInt32,\n\tMaxInt32,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfj0SC",
              "documentation": {
                "identifier": "vfj0SC",
                "newPage": false,
                "searchKey": "math_test.vfj0SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfj0SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfj0SC = []float64{\n\tInf(-1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#j0SC",
              "documentation": {
                "identifier": "j0SC",
                "newPage": false,
                "searchKey": "math_test.j0SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var j0SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar j0SC = []float64{\n\t0,\n\t1,\n\t0,\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#j1SC",
              "documentation": {
                "identifier": "j1SC",
                "newPage": false,
                "searchKey": "math_test.j1SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var j1SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar j1SC = []float64{\n\t0,\n\t0,\n\t0,\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#j2SC",
              "documentation": {
                "identifier": "j2SC",
                "newPage": false,
                "searchKey": "math_test.j2SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var j2SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar j2SC = []float64{\n\t0,\n\t0,\n\t0,\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#jM3SC",
              "documentation": {
                "identifier": "jM3SC",
                "newPage": false,
                "searchKey": "math_test.jM3SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var jM3SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar jM3SC = []float64{\n\t0,\n\t0,\n\t0,\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfldexpSC",
              "documentation": {
                "identifier": "vfldexpSC",
                "newPage": false,
                "searchKey": "math_test.vfldexpSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfldexpSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfldexpSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ldexpSC",
              "documentation": {
                "identifier": "ldexpSC",
                "newPage": false,
                "searchKey": "math_test.ldexpSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ldexpSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ldexpSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vflgammaSC",
              "documentation": {
                "identifier": "vflgammaSC",
                "newPage": false,
                "searchKey": "math_test.vflgammaSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vflgammaSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vflgammaSC = []float64{\n\tInf(-1),\n\t-3,\n\t0,\n\t1,\n\t2,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#lgammaSC",
              "documentation": {
                "identifier": "lgammaSC",
                "newPage": false,
                "searchKey": "math_test.lgammaSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var lgammaSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar lgammaSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vflogSC",
              "documentation": {
                "identifier": "vflogSC",
                "newPage": false,
                "searchKey": "math_test.vflogSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vflogSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vflogSC = []float64{\n\tInf(-1),\n\t-Pi,\n\tCopysign(0, -1),\n\t0,\n\t1,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#logSC",
              "documentation": {
                "identifier": "logSC",
                "newPage": false,
                "searchKey": "math_test.logSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var logSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar logSC = []float64{\n\tNaN(),\n\tNaN(),\n\tInf(-1),\n\tInf(-1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vflogbSC",
              "documentation": {
                "identifier": "vflogbSC",
                "newPage": false,
                "searchKey": "math_test.vflogbSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vflogbSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vflogbSC = []float64{\n\tInf(-1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#logbSC",
              "documentation": {
                "identifier": "logbSC",
                "newPage": false,
                "searchKey": "math_test.logbSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var logbSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar logbSC = []float64{\n\tInf(1),\n\tInf(-1),\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vflog1pSC",
              "documentation": {
                "identifier": "vflog1pSC",
                "newPage": false,
                "searchKey": "math_test.vflog1pSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vflog1pSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vflog1pSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#log1pSC",
              "documentation": {
                "identifier": "log1pSC",
                "newPage": false,
                "searchKey": "math_test.log1pSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var log1pSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar log1pSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfmodfSC",
              "documentation": {
                "identifier": "vfmodfSC",
                "newPage": false,
                "searchKey": "math_test.vfmodfSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfmodfSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfmodfSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#modfSC",
              "documentation": {
                "identifier": "modfSC",
                "newPage": false,
                "searchKey": "math_test.modfSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var modfSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar modfSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfnextafter32SC",
              "documentation": {
                "identifier": "vfnextafter32SC",
                "newPage": false,
                "searchKey": "math_test.vfnextafter32SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfnextafter32SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfnextafter32SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#nextafter32SC",
              "documentation": {
                "identifier": "nextafter32SC",
                "newPage": false,
                "searchKey": "math_test.nextafter32SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var nextafter32SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar nextafter32SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfnextafter64SC",
              "documentation": {
                "identifier": "vfnextafter64SC",
                "newPage": false,
                "searchKey": "math_test.vfnextafter64SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfnextafter64SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfnextafter64SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#nextafter64SC",
              "documentation": {
                "identifier": "nextafter64SC",
                "newPage": false,
                "searchKey": "math_test.nextafter64SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var nextafter64SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar nextafter64SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfpowSC",
              "documentation": {
                "identifier": "vfpowSC",
                "newPage": false,
                "searchKey": "math_test.vfpowSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfpowSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfpowSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#powSC",
              "documentation": {
                "identifier": "powSC",
                "newPage": false,
                "searchKey": "math_test.powSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var powSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar powSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfpow10SC",
              "documentation": {
                "identifier": "vfpow10SC",
                "newPage": false,
                "searchKey": "math_test.vfpow10SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfpow10SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfpow10SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#pow10SC",
              "documentation": {
                "identifier": "pow10SC",
                "newPage": false,
                "searchKey": "math_test.pow10SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var pow10SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar pow10SC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfroundSC",
              "documentation": {
                "identifier": "vfroundSC",
                "newPage": false,
                "searchKey": "math_test.vfroundSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfroundSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfroundSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfroundEvenSC",
              "documentation": {
                "identifier": "vfroundEvenSC",
                "newPage": false,
                "searchKey": "math_test.vfroundEvenSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfroundEvenSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfroundEvenSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfsignbitSC",
              "documentation": {
                "identifier": "vfsignbitSC",
                "newPage": false,
                "searchKey": "math_test.vfsignbitSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfsignbitSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfsignbitSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#signbitSC",
              "documentation": {
                "identifier": "signbitSC",
                "newPage": false,
                "searchKey": "math_test.signbitSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var signbitSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar signbitSC = []bool{\n\ttrue,\n\ttrue,\n\tfalse,\n\tfalse,\n\tfalse,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfsinSC",
              "documentation": {
                "identifier": "vfsinSC",
                "newPage": false,
                "searchKey": "math_test.vfsinSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfsinSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfsinSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#sinSC",
              "documentation": {
                "identifier": "sinSC",
                "newPage": false,
                "searchKey": "math_test.sinSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sinSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sinSC = []float64{\n\tNaN(),\n\tCopysign(0, -1),\n\t0,\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfsinhSC",
              "documentation": {
                "identifier": "vfsinhSC",
                "newPage": false,
                "searchKey": "math_test.vfsinhSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfsinhSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfsinhSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#sinhSC",
              "documentation": {
                "identifier": "sinhSC",
                "newPage": false,
                "searchKey": "math_test.sinhSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sinhSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sinhSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfsqrtSC",
              "documentation": {
                "identifier": "vfsqrtSC",
                "newPage": false,
                "searchKey": "math_test.vfsqrtSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfsqrtSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfsqrtSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#sqrtSC",
              "documentation": {
                "identifier": "sqrtSC",
                "newPage": false,
                "searchKey": "math_test.sqrtSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sqrtSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sqrtSC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vftanhSC",
              "documentation": {
                "identifier": "vftanhSC",
                "newPage": false,
                "searchKey": "math_test.vftanhSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vftanhSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vftanhSC = []float64{\n\tInf(-1),\n\tCopysign(0, -1),\n\t0,\n\tInf(1),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#tanhSC",
              "documentation": {
                "identifier": "tanhSC",
                "newPage": false,
                "searchKey": "math_test.tanhSC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var tanhSC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar tanhSC = []float64{\n\t-1,\n\tCopysign(0, -1),\n\t0,\n\t1,\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfy0SC",
              "documentation": {
                "identifier": "vfy0SC",
                "newPage": false,
                "searchKey": "math_test.vfy0SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfy0SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfy0SC = []float64{\n\tInf(-1),\n\t0,\n\tInf(1),\n\tNaN(),\n\t-1,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#y0SC",
              "documentation": {
                "identifier": "y0SC",
                "newPage": false,
                "searchKey": "math_test.y0SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var y0SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar y0SC = []float64{\n\tNaN(),\n\tInf(-1),\n\t0,\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#y1SC",
              "documentation": {
                "identifier": "y1SC",
                "newPage": false,
                "searchKey": "math_test.y1SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var y1SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar y1SC = []float64{\n\tNaN(),\n\tInf(-1),\n\t0,\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#y2SC",
              "documentation": {
                "identifier": "y2SC",
                "newPage": false,
                "searchKey": "math_test.y2SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var y2SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar y2SC = []float64{\n\tNaN(),\n\tInf(-1),\n\t0,\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#yM3SC",
              "documentation": {
                "identifier": "yM3SC",
                "newPage": false,
                "searchKey": "math_test.yM3SC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var yM3SC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar yM3SC = []float64{\n\tNaN(),\n\tInf(1),\n\t0,\n\tNaN(),\n\tNaN(),\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vffrexpBC",
              "documentation": {
                "identifier": "vffrexpBC",
                "newPage": false,
                "searchKey": "math_test.vffrexpBC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vffrexpBC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vffrexpBC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#frexpBC",
              "documentation": {
                "identifier": "frexpBC",
                "newPage": false,
                "searchKey": "math_test.frexpBC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var frexpBC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar frexpBC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#vfldexpBC",
              "documentation": {
                "identifier": "vfldexpBC",
                "newPage": false,
                "searchKey": "math_test.vfldexpBC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var vfldexpBC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar vfldexpBC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ldexpBC",
              "documentation": {
                "identifier": "ldexpBC",
                "newPage": false,
                "searchKey": "math_test.ldexpBC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ldexpBC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ldexpBC = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#logbBC",
              "documentation": {
                "identifier": "logbBC",
                "newPage": false,
                "searchKey": "math_test.logbBC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var logbBC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar logbBC = []float64{\n\t-1022,\n\t-1023,\n\t-1074,\n\t1023,\n\t-1022,\n\t-1023,\n\t-1074,\n\t1023,\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#fmaC",
              "documentation": {
                "identifier": "fmaC",
                "newPage": false,
                "searchKey": "math_test.fmaC",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fmaC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fmaC = ...\n```\n\nTest cases were generated with Berkeley TestFloat-3e/testfloat_gen. [http://www.jhauser.us/arithmetic/TestFloat.html](http://www.jhauser.us/arithmetic/TestFloat.html). The default rounding mode is selected (nearest/even), and exception flags are ignored. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#sqrt32",
              "documentation": {
                "identifier": "sqrt32",
                "newPage": false,
                "searchKey": "math_test.sqrt32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sqrt32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sqrt32 = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#PortableFMA",
              "documentation": {
                "identifier": "PortableFMA",
                "newPage": false,
                "searchKey": "math_test.PortableFMA",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var PortableFMA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar PortableFMA = FMA // hide call from compiler intrinsic; falls back to portable code\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#floatTests",
              "documentation": {
                "identifier": "floatTests",
                "newPage": false,
                "searchKey": "math_test.floatTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var floatTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar floatTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#indirectSqrt",
              "documentation": {
                "identifier": "indirectSqrt",
                "newPage": false,
                "searchKey": "math_test.indirectSqrt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var indirectSqrt"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar indirectSqrt = Sqrt\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#GlobalI",
              "documentation": {
                "identifier": "GlobalI",
                "newPage": false,
                "searchKey": "math_test.GlobalI",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var GlobalI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar GlobalI int\n```\n\nGlobal exported variables are used to store the return values of functions measured in the benchmarks. Storing the results in these variables prevents the compiler from completely optimizing the benchmarked functions away. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#GlobalB",
              "documentation": {
                "identifier": "GlobalB",
                "newPage": false,
                "searchKey": "math_test.GlobalB",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var GlobalB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar GlobalB bool\n```\n\nGlobal exported variables are used to store the return values of functions measured in the benchmarks. Storing the results in these variables prevents the compiler from completely optimizing the benchmarked functions away. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#GlobalF",
              "documentation": {
                "identifier": "GlobalF",
                "newPage": false,
                "searchKey": "math_test.GlobalF",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var GlobalF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar GlobalF float64\n```\n\nGlobal exported variables are used to store the return values of functions measured in the benchmarks. Storing the results in these variables prevents the compiler from completely optimizing the benchmarked functions away. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#copysignNeg",
              "documentation": {
                "identifier": "copysignNeg",
                "newPage": false,
                "searchKey": "math_test.copysignNeg",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var copysignNeg"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar copysignNeg = -1.0\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#absPos",
              "documentation": {
                "identifier": "absPos",
                "newPage": false,
                "searchKey": "math_test.absPos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var absPos"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar absPos = .5\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#pow10pos",
              "documentation": {
                "identifier": "pow10pos",
                "newPage": false,
                "searchKey": "math_test.pow10pos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var pow10pos"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar pow10pos = int(300)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#pow10neg",
              "documentation": {
                "identifier": "pow10neg",
                "newPage": false,
                "searchKey": "math_test.pow10neg",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var pow10neg"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar pow10neg = int(-300)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#roundNeg",
              "documentation": {
                "identifier": "roundNeg",
                "newPage": false,
                "searchKey": "math_test.roundNeg",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var roundNeg"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar roundNeg = float64(-2.5)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#signbitPos",
              "documentation": {
                "identifier": "signbitPos",
                "newPage": false,
                "searchKey": "math_test.signbitPos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var signbitPos"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar signbitPos = 2.5\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#roundUint64",
              "documentation": {
                "identifier": "roundUint64",
                "newPage": false,
                "searchKey": "math_test.roundUint64",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var roundUint64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar roundUint64 = uint64(5)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#roundFloat32",
              "documentation": {
                "identifier": "roundFloat32",
                "newPage": false,
                "searchKey": "math_test.roundFloat32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var roundFloat32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar roundFloat32 = float32(-2.5)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#roundUint32",
              "documentation": {
                "identifier": "roundUint32",
                "newPage": false,
                "searchKey": "math_test.roundUint32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var roundUint32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar roundUint32 = uint32(5)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#trigHuge",
              "documentation": {
                "identifier": "trigHuge",
                "newPage": false,
                "searchKey": "math_test.trigHuge",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var trigHuge"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar trigHuge = ...\n```\n\nInputs to test trig_reduce \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#cosHuge",
              "documentation": {
                "identifier": "cosHuge",
                "newPage": false,
                "searchKey": "math_test.cosHuge",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var cosHuge"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar cosHuge = ...\n```\n\nResults for trigHuge[i] calculated with [https://github.com/robpike/ivy](https://github.com/robpike/ivy) using 4096 bits of working precision.   Values requiring less than 102 decimal digits (1 << 120, 1 << 240, 1 << 480, 1234567891234567 << 180) were confirmed via [https://keisan.casio.com/](https://keisan.casio.com/) \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#sinHuge",
              "documentation": {
                "identifier": "sinHuge",
                "newPage": false,
                "searchKey": "math_test.sinHuge",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sinHuge"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sinHuge = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#tanHuge",
              "documentation": {
                "identifier": "tanHuge",
                "newPage": false,
                "searchKey": "math_test.tanHuge",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var tanHuge"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar tanHuge = ...\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/std/math_test#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/math_test#fi",
              "documentation": {
                "identifier": "fi",
                "newPage": false,
                "searchKey": "math_test.fi",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type fi struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype fi struct {\n\tf float64\n\ti int\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#floatTest",
              "documentation": {
                "identifier": "floatTest",
                "newPage": false,
                "searchKey": "math_test.floatTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type floatTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype floatTest struct {\n\tval  interface{}\n\tname string\n\tstr  string\n}\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/std/math_test#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/math_test#tolerance",
              "documentation": {
                "identifier": "tolerance",
                "newPage": false,
                "searchKey": "math_test.tolerance",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func tolerance(a, b, e float64) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc tolerance(a, b, e float64) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#close",
              "documentation": {
                "identifier": "close",
                "newPage": false,
                "searchKey": "math_test.close",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func close(a, b float64) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc close(a, b float64) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#veryclose",
              "documentation": {
                "identifier": "veryclose",
                "newPage": false,
                "searchKey": "math_test.veryclose",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func veryclose(a, b float64) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc veryclose(a, b float64) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#soclose",
              "documentation": {
                "identifier": "soclose",
                "newPage": false,
                "searchKey": "math_test.soclose",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func soclose(a, b, e float64) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc soclose(a, b, e float64) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#alike",
              "documentation": {
                "identifier": "alike",
                "newPage": false,
                "searchKey": "math_test.alike",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func alike(a, b float64) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc alike(a, b float64) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestNaN",
              "documentation": {
                "identifier": "TestNaN",
                "newPage": false,
                "searchKey": "math_test.TestNaN",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNaN(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNaN(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestAcos",
              "documentation": {
                "identifier": "TestAcos",
                "newPage": false,
                "searchKey": "math_test.TestAcos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAcos(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAcos(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestAcosh",
              "documentation": {
                "identifier": "TestAcosh",
                "newPage": false,
                "searchKey": "math_test.TestAcosh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAcosh(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAcosh(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestAsin",
              "documentation": {
                "identifier": "TestAsin",
                "newPage": false,
                "searchKey": "math_test.TestAsin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAsin(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAsin(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestAsinh",
              "documentation": {
                "identifier": "TestAsinh",
                "newPage": false,
                "searchKey": "math_test.TestAsinh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAsinh(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAsinh(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestAtan",
              "documentation": {
                "identifier": "TestAtan",
                "newPage": false,
                "searchKey": "math_test.TestAtan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAtan(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAtan(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestAtanh",
              "documentation": {
                "identifier": "TestAtanh",
                "newPage": false,
                "searchKey": "math_test.TestAtanh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAtanh(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAtanh(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestAtan2",
              "documentation": {
                "identifier": "TestAtan2",
                "newPage": false,
                "searchKey": "math_test.TestAtan2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAtan2(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAtan2(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestCbrt",
              "documentation": {
                "identifier": "TestCbrt",
                "newPage": false,
                "searchKey": "math_test.TestCbrt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCbrt(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCbrt(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestCeil",
              "documentation": {
                "identifier": "TestCeil",
                "newPage": false,
                "searchKey": "math_test.TestCeil",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCeil(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCeil(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestCopysign",
              "documentation": {
                "identifier": "TestCopysign",
                "newPage": false,
                "searchKey": "math_test.TestCopysign",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCopysign(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCopysign(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestCos",
              "documentation": {
                "identifier": "TestCos",
                "newPage": false,
                "searchKey": "math_test.TestCos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCos(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCos(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestCosh",
              "documentation": {
                "identifier": "TestCosh",
                "newPage": false,
                "searchKey": "math_test.TestCosh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCosh(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCosh(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestErf",
              "documentation": {
                "identifier": "TestErf",
                "newPage": false,
                "searchKey": "math_test.TestErf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestErf(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestErf(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestErfc",
              "documentation": {
                "identifier": "TestErfc",
                "newPage": false,
                "searchKey": "math_test.TestErfc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestErfc(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestErfc(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestErfinv",
              "documentation": {
                "identifier": "TestErfinv",
                "newPage": false,
                "searchKey": "math_test.TestErfinv",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestErfinv(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestErfinv(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestErfcinv",
              "documentation": {
                "identifier": "TestErfcinv",
                "newPage": false,
                "searchKey": "math_test.TestErfcinv",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestErfcinv(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestErfcinv(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestExp",
              "documentation": {
                "identifier": "TestExp",
                "newPage": false,
                "searchKey": "math_test.TestExp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestExp(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestExp(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#testExp",
              "documentation": {
                "identifier": "testExp",
                "newPage": false,
                "searchKey": "math_test.testExp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func testExp(t *testing.T, Exp func(float64) float64, name string)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testExp(t *testing.T, Exp func(float64) float64, name string)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestExpm1",
              "documentation": {
                "identifier": "TestExpm1",
                "newPage": false,
                "searchKey": "math_test.TestExpm1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestExpm1(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestExpm1(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestExp2",
              "documentation": {
                "identifier": "TestExp2",
                "newPage": false,
                "searchKey": "math_test.TestExp2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestExp2(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestExp2(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#testExp2",
              "documentation": {
                "identifier": "testExp2",
                "newPage": false,
                "searchKey": "math_test.testExp2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func testExp2(t *testing.T, Exp2 func(float64) float64, name string)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testExp2(t *testing.T, Exp2 func(float64) float64, name string)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestAbs",
              "documentation": {
                "identifier": "TestAbs",
                "newPage": false,
                "searchKey": "math_test.TestAbs",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAbs(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAbs(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestDim",
              "documentation": {
                "identifier": "TestDim",
                "newPage": false,
                "searchKey": "math_test.TestDim",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDim(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDim(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestFloor",
              "documentation": {
                "identifier": "TestFloor",
                "newPage": false,
                "searchKey": "math_test.TestFloor",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFloor(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFloor(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestMax",
              "documentation": {
                "identifier": "TestMax",
                "newPage": false,
                "searchKey": "math_test.TestMax",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMax(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMax(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestMin",
              "documentation": {
                "identifier": "TestMin",
                "newPage": false,
                "searchKey": "math_test.TestMin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMin(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMin(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestMod",
              "documentation": {
                "identifier": "TestMod",
                "newPage": false,
                "searchKey": "math_test.TestMod",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMod(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMod(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestFrexp",
              "documentation": {
                "identifier": "TestFrexp",
                "newPage": false,
                "searchKey": "math_test.TestFrexp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFrexp(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFrexp(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestGamma",
              "documentation": {
                "identifier": "TestGamma",
                "newPage": false,
                "searchKey": "math_test.TestGamma",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestGamma(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestGamma(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestHypot",
              "documentation": {
                "identifier": "TestHypot",
                "newPage": false,
                "searchKey": "math_test.TestHypot",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestHypot(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestHypot(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestHypotGo",
              "documentation": {
                "identifier": "TestHypotGo",
                "newPage": false,
                "searchKey": "math_test.TestHypotGo",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestHypotGo(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestHypotGo(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestIlogb",
              "documentation": {
                "identifier": "TestIlogb",
                "newPage": false,
                "searchKey": "math_test.TestIlogb",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestIlogb(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestIlogb(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestJ0",
              "documentation": {
                "identifier": "TestJ0",
                "newPage": false,
                "searchKey": "math_test.TestJ0",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestJ0(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestJ0(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestJ1",
              "documentation": {
                "identifier": "TestJ1",
                "newPage": false,
                "searchKey": "math_test.TestJ1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestJ1(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestJ1(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestJn",
              "documentation": {
                "identifier": "TestJn",
                "newPage": false,
                "searchKey": "math_test.TestJn",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestJn(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestJn(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLdexp",
              "documentation": {
                "identifier": "TestLdexp",
                "newPage": false,
                "searchKey": "math_test.TestLdexp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLdexp(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLdexp(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLgamma",
              "documentation": {
                "identifier": "TestLgamma",
                "newPage": false,
                "searchKey": "math_test.TestLgamma",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLgamma(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLgamma(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLog",
              "documentation": {
                "identifier": "TestLog",
                "newPage": false,
                "searchKey": "math_test.TestLog",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLog(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLog(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLogb",
              "documentation": {
                "identifier": "TestLogb",
                "newPage": false,
                "searchKey": "math_test.TestLogb",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLogb(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLogb(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLog10",
              "documentation": {
                "identifier": "TestLog10",
                "newPage": false,
                "searchKey": "math_test.TestLog10",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLog10(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLog10(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLog1p",
              "documentation": {
                "identifier": "TestLog1p",
                "newPage": false,
                "searchKey": "math_test.TestLog1p",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLog1p(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLog1p(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLog2",
              "documentation": {
                "identifier": "TestLog2",
                "newPage": false,
                "searchKey": "math_test.TestLog2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLog2(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLog2(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestModf",
              "documentation": {
                "identifier": "TestModf",
                "newPage": false,
                "searchKey": "math_test.TestModf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestModf(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestModf(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestNextafter32",
              "documentation": {
                "identifier": "TestNextafter32",
                "newPage": false,
                "searchKey": "math_test.TestNextafter32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNextafter32(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNextafter32(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestNextafter64",
              "documentation": {
                "identifier": "TestNextafter64",
                "newPage": false,
                "searchKey": "math_test.TestNextafter64",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNextafter64(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNextafter64(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestPow",
              "documentation": {
                "identifier": "TestPow",
                "newPage": false,
                "searchKey": "math_test.TestPow",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestPow(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestPow(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestPow10",
              "documentation": {
                "identifier": "TestPow10",
                "newPage": false,
                "searchKey": "math_test.TestPow10",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestPow10(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestPow10(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestRemainder",
              "documentation": {
                "identifier": "TestRemainder",
                "newPage": false,
                "searchKey": "math_test.TestRemainder",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestRemainder(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestRemainder(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestRound",
              "documentation": {
                "identifier": "TestRound",
                "newPage": false,
                "searchKey": "math_test.TestRound",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestRound(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestRound(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestRoundToEven",
              "documentation": {
                "identifier": "TestRoundToEven",
                "newPage": false,
                "searchKey": "math_test.TestRoundToEven",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestRoundToEven(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestRoundToEven(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestSignbit",
              "documentation": {
                "identifier": "TestSignbit",
                "newPage": false,
                "searchKey": "math_test.TestSignbit",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSignbit(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSignbit(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestSin",
              "documentation": {
                "identifier": "TestSin",
                "newPage": false,
                "searchKey": "math_test.TestSin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSin(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSin(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestSincos",
              "documentation": {
                "identifier": "TestSincos",
                "newPage": false,
                "searchKey": "math_test.TestSincos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSincos(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSincos(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestSinh",
              "documentation": {
                "identifier": "TestSinh",
                "newPage": false,
                "searchKey": "math_test.TestSinh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSinh(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSinh(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestSqrt",
              "documentation": {
                "identifier": "TestSqrt",
                "newPage": false,
                "searchKey": "math_test.TestSqrt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSqrt(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSqrt(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestTan",
              "documentation": {
                "identifier": "TestTan",
                "newPage": false,
                "searchKey": "math_test.TestTan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTan(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTan(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestTanh",
              "documentation": {
                "identifier": "TestTanh",
                "newPage": false,
                "searchKey": "math_test.TestTanh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTanh(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTanh(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestTrunc",
              "documentation": {
                "identifier": "TestTrunc",
                "newPage": false,
                "searchKey": "math_test.TestTrunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTrunc(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTrunc(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestY0",
              "documentation": {
                "identifier": "TestY0",
                "newPage": false,
                "searchKey": "math_test.TestY0",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestY0(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestY0(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestY1",
              "documentation": {
                "identifier": "TestY1",
                "newPage": false,
                "searchKey": "math_test.TestY1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestY1(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestY1(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestYn",
              "documentation": {
                "identifier": "TestYn",
                "newPage": false,
                "searchKey": "math_test.TestYn",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestYn(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestYn(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestFMA",
              "documentation": {
                "identifier": "TestFMA",
                "newPage": false,
                "searchKey": "math_test.TestFMA",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFMA(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFMA(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLargeCos",
              "documentation": {
                "identifier": "TestLargeCos",
                "newPage": false,
                "searchKey": "math_test.TestLargeCos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLargeCos(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLargeCos(t *testing.T)\n```\n\nCheck that math functions of high angle values return accurate results. [Since (vf[i] + large) - large != vf[i], testing for Trig(vf[i] + large) == Trig(vf[i]), where large is a multiple of 2*Pi, is misleading.] \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLargeSin",
              "documentation": {
                "identifier": "TestLargeSin",
                "newPage": false,
                "searchKey": "math_test.TestLargeSin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLargeSin(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLargeSin(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLargeSincos",
              "documentation": {
                "identifier": "TestLargeSincos",
                "newPage": false,
                "searchKey": "math_test.TestLargeSincos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLargeSincos(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLargeSincos(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestLargeTan",
              "documentation": {
                "identifier": "TestLargeTan",
                "newPage": false,
                "searchKey": "math_test.TestLargeTan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLargeTan(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLargeTan(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestTrigReduce",
              "documentation": {
                "identifier": "TestTrigReduce",
                "newPage": false,
                "searchKey": "math_test.TestTrigReduce",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTrigReduce(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTrigReduce(t *testing.T)\n```\n\nCheck that trigReduce matches the standard reduction results for input values below reduceThreshold. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestFloatMinMax",
              "documentation": {
                "identifier": "TestFloatMinMax",
                "newPage": false,
                "searchKey": "math_test.TestFloatMinMax",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFloatMinMax(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFloatMinMax(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestFloatMinima",
              "documentation": {
                "identifier": "TestFloatMinima",
                "newPage": false,
                "searchKey": "math_test.TestFloatMinima",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFloatMinima(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFloatMinima(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestFloat32Sqrt",
              "documentation": {
                "identifier": "TestFloat32Sqrt",
                "newPage": false,
                "searchKey": "math_test.TestFloat32Sqrt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFloat32Sqrt(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFloat32Sqrt(t *testing.T)\n```\n\nTestFloat32Sqrt checks the correctness of the float32 square root optimization result. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkAcos",
              "documentation": {
                "identifier": "BenchmarkAcos",
                "newPage": false,
                "searchKey": "math_test.BenchmarkAcos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAcos(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAcos(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkAcosh",
              "documentation": {
                "identifier": "BenchmarkAcosh",
                "newPage": false,
                "searchKey": "math_test.BenchmarkAcosh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAcosh(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAcosh(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkAsin",
              "documentation": {
                "identifier": "BenchmarkAsin",
                "newPage": false,
                "searchKey": "math_test.BenchmarkAsin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAsin(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAsin(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkAsinh",
              "documentation": {
                "identifier": "BenchmarkAsinh",
                "newPage": false,
                "searchKey": "math_test.BenchmarkAsinh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAsinh(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAsinh(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkAtan",
              "documentation": {
                "identifier": "BenchmarkAtan",
                "newPage": false,
                "searchKey": "math_test.BenchmarkAtan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtan(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtan(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkAtanh",
              "documentation": {
                "identifier": "BenchmarkAtanh",
                "newPage": false,
                "searchKey": "math_test.BenchmarkAtanh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtanh(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtanh(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkAtan2",
              "documentation": {
                "identifier": "BenchmarkAtan2",
                "newPage": false,
                "searchKey": "math_test.BenchmarkAtan2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtan2(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtan2(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkCbrt",
              "documentation": {
                "identifier": "BenchmarkCbrt",
                "newPage": false,
                "searchKey": "math_test.BenchmarkCbrt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkCbrt(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkCbrt(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkCeil",
              "documentation": {
                "identifier": "BenchmarkCeil",
                "newPage": false,
                "searchKey": "math_test.BenchmarkCeil",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkCeil(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkCeil(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkCopysign",
              "documentation": {
                "identifier": "BenchmarkCopysign",
                "newPage": false,
                "searchKey": "math_test.BenchmarkCopysign",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkCopysign(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkCopysign(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkCos",
              "documentation": {
                "identifier": "BenchmarkCos",
                "newPage": false,
                "searchKey": "math_test.BenchmarkCos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkCos(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkCos(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkCosh",
              "documentation": {
                "identifier": "BenchmarkCosh",
                "newPage": false,
                "searchKey": "math_test.BenchmarkCosh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkCosh(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkCosh(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkErf",
              "documentation": {
                "identifier": "BenchmarkErf",
                "newPage": false,
                "searchKey": "math_test.BenchmarkErf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkErf(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkErf(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkErfc",
              "documentation": {
                "identifier": "BenchmarkErfc",
                "newPage": false,
                "searchKey": "math_test.BenchmarkErfc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkErfc(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkErfc(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkErfinv",
              "documentation": {
                "identifier": "BenchmarkErfinv",
                "newPage": false,
                "searchKey": "math_test.BenchmarkErfinv",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkErfinv(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkErfinv(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkErfcinv",
              "documentation": {
                "identifier": "BenchmarkErfcinv",
                "newPage": false,
                "searchKey": "math_test.BenchmarkErfcinv",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkErfcinv(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkErfcinv(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkExp",
              "documentation": {
                "identifier": "BenchmarkExp",
                "newPage": false,
                "searchKey": "math_test.BenchmarkExp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkExp(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkExp(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkExpGo",
              "documentation": {
                "identifier": "BenchmarkExpGo",
                "newPage": false,
                "searchKey": "math_test.BenchmarkExpGo",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkExpGo(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkExpGo(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkExpm1",
              "documentation": {
                "identifier": "BenchmarkExpm1",
                "newPage": false,
                "searchKey": "math_test.BenchmarkExpm1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkExpm1(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkExpm1(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkExp2",
              "documentation": {
                "identifier": "BenchmarkExp2",
                "newPage": false,
                "searchKey": "math_test.BenchmarkExp2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkExp2(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkExp2(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkExp2Go",
              "documentation": {
                "identifier": "BenchmarkExp2Go",
                "newPage": false,
                "searchKey": "math_test.BenchmarkExp2Go",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkExp2Go(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkExp2Go(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkAbs",
              "documentation": {
                "identifier": "BenchmarkAbs",
                "newPage": false,
                "searchKey": "math_test.BenchmarkAbs",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAbs(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAbs(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkDim",
              "documentation": {
                "identifier": "BenchmarkDim",
                "newPage": false,
                "searchKey": "math_test.BenchmarkDim",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkDim(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkDim(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkFloor",
              "documentation": {
                "identifier": "BenchmarkFloor",
                "newPage": false,
                "searchKey": "math_test.BenchmarkFloor",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFloor(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFloor(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkMax",
              "documentation": {
                "identifier": "BenchmarkMax",
                "newPage": false,
                "searchKey": "math_test.BenchmarkMax",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkMax(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkMax(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkMin",
              "documentation": {
                "identifier": "BenchmarkMin",
                "newPage": false,
                "searchKey": "math_test.BenchmarkMin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkMin(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkMin(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkMod",
              "documentation": {
                "identifier": "BenchmarkMod",
                "newPage": false,
                "searchKey": "math_test.BenchmarkMod",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkMod(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkMod(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkFrexp",
              "documentation": {
                "identifier": "BenchmarkFrexp",
                "newPage": false,
                "searchKey": "math_test.BenchmarkFrexp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFrexp(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFrexp(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkGamma",
              "documentation": {
                "identifier": "BenchmarkGamma",
                "newPage": false,
                "searchKey": "math_test.BenchmarkGamma",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkGamma(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkGamma(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkHypot",
              "documentation": {
                "identifier": "BenchmarkHypot",
                "newPage": false,
                "searchKey": "math_test.BenchmarkHypot",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkHypot(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkHypot(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkHypotGo",
              "documentation": {
                "identifier": "BenchmarkHypotGo",
                "newPage": false,
                "searchKey": "math_test.BenchmarkHypotGo",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkHypotGo(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkHypotGo(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkIlogb",
              "documentation": {
                "identifier": "BenchmarkIlogb",
                "newPage": false,
                "searchKey": "math_test.BenchmarkIlogb",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkIlogb(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkIlogb(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkJ0",
              "documentation": {
                "identifier": "BenchmarkJ0",
                "newPage": false,
                "searchKey": "math_test.BenchmarkJ0",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkJ0(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkJ0(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkJ1",
              "documentation": {
                "identifier": "BenchmarkJ1",
                "newPage": false,
                "searchKey": "math_test.BenchmarkJ1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkJ1(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkJ1(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkJn",
              "documentation": {
                "identifier": "BenchmarkJn",
                "newPage": false,
                "searchKey": "math_test.BenchmarkJn",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkJn(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkJn(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkLdexp",
              "documentation": {
                "identifier": "BenchmarkLdexp",
                "newPage": false,
                "searchKey": "math_test.BenchmarkLdexp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkLdexp(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkLdexp(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkLgamma",
              "documentation": {
                "identifier": "BenchmarkLgamma",
                "newPage": false,
                "searchKey": "math_test.BenchmarkLgamma",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkLgamma(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkLgamma(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkLog",
              "documentation": {
                "identifier": "BenchmarkLog",
                "newPage": false,
                "searchKey": "math_test.BenchmarkLog",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkLog(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkLog(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkLogb",
              "documentation": {
                "identifier": "BenchmarkLogb",
                "newPage": false,
                "searchKey": "math_test.BenchmarkLogb",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkLogb(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkLogb(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkLog1p",
              "documentation": {
                "identifier": "BenchmarkLog1p",
                "newPage": false,
                "searchKey": "math_test.BenchmarkLog1p",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkLog1p(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkLog1p(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkLog10",
              "documentation": {
                "identifier": "BenchmarkLog10",
                "newPage": false,
                "searchKey": "math_test.BenchmarkLog10",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkLog10(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkLog10(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkLog2",
              "documentation": {
                "identifier": "BenchmarkLog2",
                "newPage": false,
                "searchKey": "math_test.BenchmarkLog2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkLog2(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkLog2(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkModf",
              "documentation": {
                "identifier": "BenchmarkModf",
                "newPage": false,
                "searchKey": "math_test.BenchmarkModf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkModf(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkModf(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkNextafter32",
              "documentation": {
                "identifier": "BenchmarkNextafter32",
                "newPage": false,
                "searchKey": "math_test.BenchmarkNextafter32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkNextafter32(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkNextafter32(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkNextafter64",
              "documentation": {
                "identifier": "BenchmarkNextafter64",
                "newPage": false,
                "searchKey": "math_test.BenchmarkNextafter64",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkNextafter64(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkNextafter64(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkPowInt",
              "documentation": {
                "identifier": "BenchmarkPowInt",
                "newPage": false,
                "searchKey": "math_test.BenchmarkPowInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkPowInt(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkPowInt(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkPowFrac",
              "documentation": {
                "identifier": "BenchmarkPowFrac",
                "newPage": false,
                "searchKey": "math_test.BenchmarkPowFrac",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkPowFrac(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkPowFrac(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkPow10Pos",
              "documentation": {
                "identifier": "BenchmarkPow10Pos",
                "newPage": false,
                "searchKey": "math_test.BenchmarkPow10Pos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkPow10Pos(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkPow10Pos(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkPow10Neg",
              "documentation": {
                "identifier": "BenchmarkPow10Neg",
                "newPage": false,
                "searchKey": "math_test.BenchmarkPow10Neg",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkPow10Neg(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkPow10Neg(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkRound",
              "documentation": {
                "identifier": "BenchmarkRound",
                "newPage": false,
                "searchKey": "math_test.BenchmarkRound",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkRound(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkRound(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkRoundToEven",
              "documentation": {
                "identifier": "BenchmarkRoundToEven",
                "newPage": false,
                "searchKey": "math_test.BenchmarkRoundToEven",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkRoundToEven(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkRoundToEven(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkRemainder",
              "documentation": {
                "identifier": "BenchmarkRemainder",
                "newPage": false,
                "searchKey": "math_test.BenchmarkRemainder",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkRemainder(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkRemainder(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkSignbit",
              "documentation": {
                "identifier": "BenchmarkSignbit",
                "newPage": false,
                "searchKey": "math_test.BenchmarkSignbit",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkSignbit(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkSignbit(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkSin",
              "documentation": {
                "identifier": "BenchmarkSin",
                "newPage": false,
                "searchKey": "math_test.BenchmarkSin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkSin(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkSin(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkSincos",
              "documentation": {
                "identifier": "BenchmarkSincos",
                "newPage": false,
                "searchKey": "math_test.BenchmarkSincos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkSincos(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkSincos(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkSinh",
              "documentation": {
                "identifier": "BenchmarkSinh",
                "newPage": false,
                "searchKey": "math_test.BenchmarkSinh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkSinh(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkSinh(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkSqrtIndirect",
              "documentation": {
                "identifier": "BenchmarkSqrtIndirect",
                "newPage": false,
                "searchKey": "math_test.BenchmarkSqrtIndirect",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkSqrtIndirect(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkSqrtIndirect(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkSqrtLatency",
              "documentation": {
                "identifier": "BenchmarkSqrtLatency",
                "newPage": false,
                "searchKey": "math_test.BenchmarkSqrtLatency",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkSqrtLatency(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkSqrtLatency(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkSqrtIndirectLatency",
              "documentation": {
                "identifier": "BenchmarkSqrtIndirectLatency",
                "newPage": false,
                "searchKey": "math_test.BenchmarkSqrtIndirectLatency",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkSqrtIndirectLatency(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkSqrtIndirectLatency(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkSqrtGoLatency",
              "documentation": {
                "identifier": "BenchmarkSqrtGoLatency",
                "newPage": false,
                "searchKey": "math_test.BenchmarkSqrtGoLatency",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkSqrtGoLatency(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkSqrtGoLatency(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#isPrime",
              "documentation": {
                "identifier": "isPrime",
                "newPage": false,
                "searchKey": "math_test.isPrime",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func isPrime(i int) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc isPrime(i int) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkSqrtPrime",
              "documentation": {
                "identifier": "BenchmarkSqrtPrime",
                "newPage": false,
                "searchKey": "math_test.BenchmarkSqrtPrime",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkSqrtPrime(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkSqrtPrime(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkTan",
              "documentation": {
                "identifier": "BenchmarkTan",
                "newPage": false,
                "searchKey": "math_test.BenchmarkTan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkTan(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkTan(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkTanh",
              "documentation": {
                "identifier": "BenchmarkTanh",
                "newPage": false,
                "searchKey": "math_test.BenchmarkTanh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkTanh(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkTanh(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkTrunc",
              "documentation": {
                "identifier": "BenchmarkTrunc",
                "newPage": false,
                "searchKey": "math_test.BenchmarkTrunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkTrunc(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkTrunc(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkY0",
              "documentation": {
                "identifier": "BenchmarkY0",
                "newPage": false,
                "searchKey": "math_test.BenchmarkY0",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkY0(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkY0(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkY1",
              "documentation": {
                "identifier": "BenchmarkY1",
                "newPage": false,
                "searchKey": "math_test.BenchmarkY1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkY1(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkY1(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkYn",
              "documentation": {
                "identifier": "BenchmarkYn",
                "newPage": false,
                "searchKey": "math_test.BenchmarkYn",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkYn(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkYn(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkFloat64bits",
              "documentation": {
                "identifier": "BenchmarkFloat64bits",
                "newPage": false,
                "searchKey": "math_test.BenchmarkFloat64bits",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFloat64bits(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFloat64bits(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkFloat64frombits",
              "documentation": {
                "identifier": "BenchmarkFloat64frombits",
                "newPage": false,
                "searchKey": "math_test.BenchmarkFloat64frombits",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFloat64frombits(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFloat64frombits(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkFloat32bits",
              "documentation": {
                "identifier": "BenchmarkFloat32bits",
                "newPage": false,
                "searchKey": "math_test.BenchmarkFloat32bits",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFloat32bits(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFloat32bits(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkFloat32frombits",
              "documentation": {
                "identifier": "BenchmarkFloat32frombits",
                "newPage": false,
                "searchKey": "math_test.BenchmarkFloat32frombits",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFloat32frombits(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFloat32frombits(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#BenchmarkFMA",
              "documentation": {
                "identifier": "BenchmarkFMA",
                "newPage": false,
                "searchKey": "math_test.BenchmarkFMA",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFMA(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFMA(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestMaxUint",
              "documentation": {
                "identifier": "TestMaxUint",
                "newPage": false,
                "searchKey": "math_test.TestMaxUint",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMaxUint(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMaxUint(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestMaxInt",
              "documentation": {
                "identifier": "TestMaxInt",
                "newPage": false,
                "searchKey": "math_test.TestMaxInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMaxInt(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMaxInt(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleAcos",
              "documentation": {
                "identifier": "ExampleAcos",
                "newPage": false,
                "searchKey": "math_test.ExampleAcos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAcos()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAcos()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleAcosh",
              "documentation": {
                "identifier": "ExampleAcosh",
                "newPage": false,
                "searchKey": "math_test.ExampleAcosh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAcosh()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAcosh()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleAsin",
              "documentation": {
                "identifier": "ExampleAsin",
                "newPage": false,
                "searchKey": "math_test.ExampleAsin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAsin()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAsin()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleAsinh",
              "documentation": {
                "identifier": "ExampleAsinh",
                "newPage": false,
                "searchKey": "math_test.ExampleAsinh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAsinh()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAsinh()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleAtan",
              "documentation": {
                "identifier": "ExampleAtan",
                "newPage": false,
                "searchKey": "math_test.ExampleAtan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAtan()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAtan()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleAtan2",
              "documentation": {
                "identifier": "ExampleAtan2",
                "newPage": false,
                "searchKey": "math_test.ExampleAtan2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAtan2()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAtan2()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleAtanh",
              "documentation": {
                "identifier": "ExampleAtanh",
                "newPage": false,
                "searchKey": "math_test.ExampleAtanh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAtanh()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAtanh()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleCopysign",
              "documentation": {
                "identifier": "ExampleCopysign",
                "newPage": false,
                "searchKey": "math_test.ExampleCopysign",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleCopysign()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleCopysign()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleCos",
              "documentation": {
                "identifier": "ExampleCos",
                "newPage": false,
                "searchKey": "math_test.ExampleCos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleCos()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleCos()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleCosh",
              "documentation": {
                "identifier": "ExampleCosh",
                "newPage": false,
                "searchKey": "math_test.ExampleCosh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleCosh()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleCosh()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleSin",
              "documentation": {
                "identifier": "ExampleSin",
                "newPage": false,
                "searchKey": "math_test.ExampleSin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleSin()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleSin()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleSincos",
              "documentation": {
                "identifier": "ExampleSincos",
                "newPage": false,
                "searchKey": "math_test.ExampleSincos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleSincos()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleSincos()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleSinh",
              "documentation": {
                "identifier": "ExampleSinh",
                "newPage": false,
                "searchKey": "math_test.ExampleSinh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleSinh()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleSinh()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleTan",
              "documentation": {
                "identifier": "ExampleTan",
                "newPage": false,
                "searchKey": "math_test.ExampleTan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleTan()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleTan()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleTanh",
              "documentation": {
                "identifier": "ExampleTanh",
                "newPage": false,
                "searchKey": "math_test.ExampleTanh",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleTanh()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleTanh()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleSqrt",
              "documentation": {
                "identifier": "ExampleSqrt",
                "newPage": false,
                "searchKey": "math_test.ExampleSqrt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleSqrt()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleSqrt()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleCeil",
              "documentation": {
                "identifier": "ExampleCeil",
                "newPage": false,
                "searchKey": "math_test.ExampleCeil",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleCeil()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleCeil()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleFloor",
              "documentation": {
                "identifier": "ExampleFloor",
                "newPage": false,
                "searchKey": "math_test.ExampleFloor",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleFloor()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleFloor()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExamplePow",
              "documentation": {
                "identifier": "ExamplePow",
                "newPage": false,
                "searchKey": "math_test.ExamplePow",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExamplePow()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExamplePow()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExamplePow10",
              "documentation": {
                "identifier": "ExamplePow10",
                "newPage": false,
                "searchKey": "math_test.ExamplePow10",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExamplePow10()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExamplePow10()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleRound",
              "documentation": {
                "identifier": "ExampleRound",
                "newPage": false,
                "searchKey": "math_test.ExampleRound",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleRound()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleRound()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleRoundToEven",
              "documentation": {
                "identifier": "ExampleRoundToEven",
                "newPage": false,
                "searchKey": "math_test.ExampleRoundToEven",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleRoundToEven()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleRoundToEven()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleLog",
              "documentation": {
                "identifier": "ExampleLog",
                "newPage": false,
                "searchKey": "math_test.ExampleLog",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleLog()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleLog()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleLog2",
              "documentation": {
                "identifier": "ExampleLog2",
                "newPage": false,
                "searchKey": "math_test.ExampleLog2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleLog2()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleLog2()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleLog10",
              "documentation": {
                "identifier": "ExampleLog10",
                "newPage": false,
                "searchKey": "math_test.ExampleLog10",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleLog10()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleLog10()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleMod",
              "documentation": {
                "identifier": "ExampleMod",
                "newPage": false,
                "searchKey": "math_test.ExampleMod",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleMod()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleMod()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleAbs",
              "documentation": {
                "identifier": "ExampleAbs",
                "newPage": false,
                "searchKey": "math_test.ExampleAbs",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAbs()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAbs()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleDim",
              "documentation": {
                "identifier": "ExampleDim",
                "newPage": false,
                "searchKey": "math_test.ExampleDim",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleDim()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleDim()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleExp",
              "documentation": {
                "identifier": "ExampleExp",
                "newPage": false,
                "searchKey": "math_test.ExampleExp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleExp()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleExp()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleExp2",
              "documentation": {
                "identifier": "ExampleExp2",
                "newPage": false,
                "searchKey": "math_test.ExampleExp2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleExp2()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleExp2()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleExpm1",
              "documentation": {
                "identifier": "ExampleExpm1",
                "newPage": false,
                "searchKey": "math_test.ExampleExpm1",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleExpm1()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleExpm1()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleTrunc",
              "documentation": {
                "identifier": "ExampleTrunc",
                "newPage": false,
                "searchKey": "math_test.ExampleTrunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleTrunc()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleTrunc()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleCbrt",
              "documentation": {
                "identifier": "ExampleCbrt",
                "newPage": false,
                "searchKey": "math_test.ExampleCbrt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleCbrt()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleCbrt()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#ExampleModf",
              "documentation": {
                "identifier": "ExampleModf",
                "newPage": false,
                "searchKey": "math_test.ExampleModf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleModf()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleModf()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestHugeCos",
              "documentation": {
                "identifier": "TestHugeCos",
                "newPage": false,
                "searchKey": "math_test.TestHugeCos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestHugeCos(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestHugeCos(t *testing.T)\n```\n\nCheck that trig values of huge angles return accurate results. This confirms that argument reduction works for very large values up to MaxFloat64. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestHugeSin",
              "documentation": {
                "identifier": "TestHugeSin",
                "newPage": false,
                "searchKey": "math_test.TestHugeSin",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestHugeSin(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestHugeSin(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestHugeSinCos",
              "documentation": {
                "identifier": "TestHugeSinCos",
                "newPage": false,
                "searchKey": "math_test.TestHugeSinCos",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestHugeSinCos(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestHugeSinCos(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/math_test#TestHugeTan",
              "documentation": {
                "identifier": "TestHugeTan",
                "newPage": false,
                "searchKey": "math_test.TestHugeTan",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestHugeTan(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestHugeTan(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
