{
  "pathID": "/std/debug/elf",
  "documentation": {
    "identifier": "elf",
    "newPage": true,
    "searchKey": "std/debug/elf",
    "tags": [
      "exported"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package elf"
  },
  "detail": {
    "kind": "markdown",
    "value": "Package elf implements access to ELF object files. \n\n"
  },
  "children": [
    {
      "node": {
        "pathID": "/std/debug/elf#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "exported"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/debug/elf#EI_CLASS",
              "documentation": {
                "identifier": "EI_CLASS",
                "newPage": false,
                "searchKey": "elf.EI_CLASS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EI_CLASS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EI_CLASS = 4 /* Class of machine. */\n\n```\n\nIndexes into the Header.Ident array. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EI_DATA",
              "documentation": {
                "identifier": "EI_DATA",
                "newPage": false,
                "searchKey": "elf.EI_DATA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EI_DATA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EI_DATA = 5 /* Data format. */\n\n```\n\nIndexes into the Header.Ident array. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EI_VERSION",
              "documentation": {
                "identifier": "EI_VERSION",
                "newPage": false,
                "searchKey": "elf.EI_VERSION",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EI_VERSION"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EI_VERSION = 6 /* ELF format version. */\n\n```\n\nIndexes into the Header.Ident array. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EI_OSABI",
              "documentation": {
                "identifier": "EI_OSABI",
                "newPage": false,
                "searchKey": "elf.EI_OSABI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EI_OSABI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EI_OSABI = 7 /* Operating system / ABI identification */\n\n```\n\nIndexes into the Header.Ident array. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EI_ABIVERSION",
              "documentation": {
                "identifier": "EI_ABIVERSION",
                "newPage": false,
                "searchKey": "elf.EI_ABIVERSION",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EI_ABIVERSION"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EI_ABIVERSION = 8 /* ABI version */\n\n```\n\nIndexes into the Header.Ident array. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EI_PAD",
              "documentation": {
                "identifier": "EI_PAD",
                "newPage": false,
                "searchKey": "elf.EI_PAD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EI_PAD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EI_PAD = 9 /* Start of padding (per SVR4 ABI). */\n\n```\n\nIndexes into the Header.Ident array. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EI_NIDENT",
              "documentation": {
                "identifier": "EI_NIDENT",
                "newPage": false,
                "searchKey": "elf.EI_NIDENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EI_NIDENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EI_NIDENT = 16 /* Size of e_ident array. */\n\n```\n\nIndexes into the Header.Ident array. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFMAG",
              "documentation": {
                "identifier": "ELFMAG",
                "newPage": false,
                "searchKey": "elf.ELFMAG",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFMAG"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFMAG = \"\\177ELF\"\n```\n\nInitial magic number for ELF files. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EV_NONE",
              "documentation": {
                "identifier": "EV_NONE",
                "newPage": false,
                "searchKey": "elf.EV_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EV_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EV_NONE Version = 0\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EV_CURRENT",
              "documentation": {
                "identifier": "EV_CURRENT",
                "newPage": false,
                "searchKey": "elf.EV_CURRENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EV_CURRENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EV_CURRENT Version = 1\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFCLASSNONE",
              "documentation": {
                "identifier": "ELFCLASSNONE",
                "newPage": false,
                "searchKey": "elf.ELFCLASSNONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFCLASSNONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFCLASSNONE Class = 0 /* Unknown class. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFCLASS32",
              "documentation": {
                "identifier": "ELFCLASS32",
                "newPage": false,
                "searchKey": "elf.ELFCLASS32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFCLASS32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFCLASS32 Class = 1 /* 32-bit architecture. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFCLASS64",
              "documentation": {
                "identifier": "ELFCLASS64",
                "newPage": false,
                "searchKey": "elf.ELFCLASS64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFCLASS64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFCLASS64 Class = 2 /* 64-bit architecture. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFDATANONE",
              "documentation": {
                "identifier": "ELFDATANONE",
                "newPage": false,
                "searchKey": "elf.ELFDATANONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFDATANONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFDATANONE Data = 0 /* Unknown data format. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFDATA2LSB",
              "documentation": {
                "identifier": "ELFDATA2LSB",
                "newPage": false,
                "searchKey": "elf.ELFDATA2LSB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFDATA2LSB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFDATA2LSB Data = 1 /* 2's complement little-endian. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFDATA2MSB",
              "documentation": {
                "identifier": "ELFDATA2MSB",
                "newPage": false,
                "searchKey": "elf.ELFDATA2MSB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFDATA2MSB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFDATA2MSB Data = 2 /* 2's complement big-endian. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_NONE",
              "documentation": {
                "identifier": "ELFOSABI_NONE",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_NONE OSABI = 0 /* UNIX System V ABI */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_HPUX",
              "documentation": {
                "identifier": "ELFOSABI_HPUX",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_HPUX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_HPUX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_HPUX OSABI = 1 /* HP-UX operating system */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_NETBSD",
              "documentation": {
                "identifier": "ELFOSABI_NETBSD",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_NETBSD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_NETBSD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_NETBSD OSABI = 2 /* NetBSD */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_LINUX",
              "documentation": {
                "identifier": "ELFOSABI_LINUX",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_LINUX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_LINUX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_LINUX OSABI = 3 /* Linux */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_HURD",
              "documentation": {
                "identifier": "ELFOSABI_HURD",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_HURD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_HURD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_HURD OSABI = 4 /* Hurd */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_86OPEN",
              "documentation": {
                "identifier": "ELFOSABI_86OPEN",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_86OPEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_86OPEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_86OPEN OSABI = 5 /* 86Open common IA32 ABI */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_SOLARIS",
              "documentation": {
                "identifier": "ELFOSABI_SOLARIS",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_SOLARIS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_SOLARIS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_SOLARIS OSABI = 6 /* Solaris */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_AIX",
              "documentation": {
                "identifier": "ELFOSABI_AIX",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_AIX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_AIX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_AIX OSABI = 7 /* AIX */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_IRIX",
              "documentation": {
                "identifier": "ELFOSABI_IRIX",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_IRIX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_IRIX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_IRIX OSABI = 8 /* IRIX */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_FREEBSD",
              "documentation": {
                "identifier": "ELFOSABI_FREEBSD",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_FREEBSD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_FREEBSD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_FREEBSD OSABI = 9 /* FreeBSD */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_TRU64",
              "documentation": {
                "identifier": "ELFOSABI_TRU64",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_TRU64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_TRU64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_TRU64 OSABI = 10 /* TRU64 UNIX */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_MODESTO",
              "documentation": {
                "identifier": "ELFOSABI_MODESTO",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_MODESTO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_MODESTO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_MODESTO OSABI = 11 /* Novell Modesto */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_OPENBSD",
              "documentation": {
                "identifier": "ELFOSABI_OPENBSD",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_OPENBSD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_OPENBSD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_OPENBSD OSABI = 12 /* OpenBSD */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_OPENVMS",
              "documentation": {
                "identifier": "ELFOSABI_OPENVMS",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_OPENVMS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_OPENVMS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_OPENVMS OSABI = 13 /* Open VMS */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_NSK",
              "documentation": {
                "identifier": "ELFOSABI_NSK",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_NSK",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_NSK"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_NSK OSABI = 14 /* HP Non-Stop Kernel */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_AROS",
              "documentation": {
                "identifier": "ELFOSABI_AROS",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_AROS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_AROS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_AROS OSABI = 15 /* Amiga Research OS */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_FENIXOS",
              "documentation": {
                "identifier": "ELFOSABI_FENIXOS",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_FENIXOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_FENIXOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_FENIXOS OSABI = 16 /* The FenixOS highly scalable multi-core OS */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_CLOUDABI",
              "documentation": {
                "identifier": "ELFOSABI_CLOUDABI",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_CLOUDABI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_CLOUDABI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_CLOUDABI OSABI = 17 /* Nuxi CloudABI */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_ARM",
              "documentation": {
                "identifier": "ELFOSABI_ARM",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_ARM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_ARM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_ARM OSABI = 97 /* ARM */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ELFOSABI_STANDALONE",
              "documentation": {
                "identifier": "ELFOSABI_STANDALONE",
                "newPage": false,
                "searchKey": "elf.ELFOSABI_STANDALONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ELFOSABI_STANDALONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ELFOSABI_STANDALONE OSABI = 255 /* Standalone (embedded) application */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ET_NONE",
              "documentation": {
                "identifier": "ET_NONE",
                "newPage": false,
                "searchKey": "elf.ET_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ET_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ET_NONE Type = 0 /* Unknown type. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ET_REL",
              "documentation": {
                "identifier": "ET_REL",
                "newPage": false,
                "searchKey": "elf.ET_REL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ET_REL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ET_REL Type = 1 /* Relocatable. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ET_EXEC",
              "documentation": {
                "identifier": "ET_EXEC",
                "newPage": false,
                "searchKey": "elf.ET_EXEC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ET_EXEC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ET_EXEC Type = 2 /* Executable. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ET_DYN",
              "documentation": {
                "identifier": "ET_DYN",
                "newPage": false,
                "searchKey": "elf.ET_DYN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ET_DYN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ET_DYN Type = 3 /* Shared object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ET_CORE",
              "documentation": {
                "identifier": "ET_CORE",
                "newPage": false,
                "searchKey": "elf.ET_CORE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ET_CORE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ET_CORE Type = 4 /* Core file. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ET_LOOS",
              "documentation": {
                "identifier": "ET_LOOS",
                "newPage": false,
                "searchKey": "elf.ET_LOOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ET_LOOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ET_LOOS Type = 0xfe00 /* First operating system specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ET_HIOS",
              "documentation": {
                "identifier": "ET_HIOS",
                "newPage": false,
                "searchKey": "elf.ET_HIOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ET_HIOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ET_HIOS Type = 0xfeff /* Last operating system-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ET_LOPROC",
              "documentation": {
                "identifier": "ET_LOPROC",
                "newPage": false,
                "searchKey": "elf.ET_LOPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ET_LOPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ET_LOPROC Type = 0xff00 /* First processor-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ET_HIPROC",
              "documentation": {
                "identifier": "ET_HIPROC",
                "newPage": false,
                "searchKey": "elf.ET_HIPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ET_HIPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ET_HIPROC Type = 0xffff /* Last processor-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_NONE",
              "documentation": {
                "identifier": "EM_NONE",
                "newPage": false,
                "searchKey": "elf.EM_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_NONE Machine = 0 /* Unknown machine. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_M32",
              "documentation": {
                "identifier": "EM_M32",
                "newPage": false,
                "searchKey": "elf.EM_M32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_M32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_M32 Machine = 1 /* AT&T WE32100. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SPARC",
              "documentation": {
                "identifier": "EM_SPARC",
                "newPage": false,
                "searchKey": "elf.EM_SPARC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SPARC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SPARC Machine = 2 /* Sun SPARC. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_386",
              "documentation": {
                "identifier": "EM_386",
                "newPage": false,
                "searchKey": "elf.EM_386",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_386"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_386 Machine = 3 /* Intel i386. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_68K",
              "documentation": {
                "identifier": "EM_68K",
                "newPage": false,
                "searchKey": "elf.EM_68K",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_68K"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_68K Machine = 4 /* Motorola 68000. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_88K",
              "documentation": {
                "identifier": "EM_88K",
                "newPage": false,
                "searchKey": "elf.EM_88K",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_88K"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_88K Machine = 5 /* Motorola 88000. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_860",
              "documentation": {
                "identifier": "EM_860",
                "newPage": false,
                "searchKey": "elf.EM_860",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_860"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_860 Machine = 7 /* Intel i860. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MIPS",
              "documentation": {
                "identifier": "EM_MIPS",
                "newPage": false,
                "searchKey": "elf.EM_MIPS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MIPS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MIPS Machine = 8 /* MIPS R3000 Big-Endian only. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_S370",
              "documentation": {
                "identifier": "EM_S370",
                "newPage": false,
                "searchKey": "elf.EM_S370",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_S370"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_S370 Machine = 9 /* IBM System/370. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MIPS_RS3_LE",
              "documentation": {
                "identifier": "EM_MIPS_RS3_LE",
                "newPage": false,
                "searchKey": "elf.EM_MIPS_RS3_LE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MIPS_RS3_LE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MIPS_RS3_LE Machine = 10 /* MIPS R3000 Little-Endian. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_PARISC",
              "documentation": {
                "identifier": "EM_PARISC",
                "newPage": false,
                "searchKey": "elf.EM_PARISC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_PARISC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_PARISC Machine = 15 /* HP PA-RISC. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_VPP500",
              "documentation": {
                "identifier": "EM_VPP500",
                "newPage": false,
                "searchKey": "elf.EM_VPP500",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_VPP500"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_VPP500 Machine = 17 /* Fujitsu VPP500. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SPARC32PLUS",
              "documentation": {
                "identifier": "EM_SPARC32PLUS",
                "newPage": false,
                "searchKey": "elf.EM_SPARC32PLUS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SPARC32PLUS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SPARC32PLUS Machine = 18 /* SPARC v8plus. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_960",
              "documentation": {
                "identifier": "EM_960",
                "newPage": false,
                "searchKey": "elf.EM_960",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_960"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_960 Machine = 19 /* Intel 80960. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_PPC",
              "documentation": {
                "identifier": "EM_PPC",
                "newPage": false,
                "searchKey": "elf.EM_PPC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_PPC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_PPC Machine = 20 /* PowerPC 32-bit. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_PPC64",
              "documentation": {
                "identifier": "EM_PPC64",
                "newPage": false,
                "searchKey": "elf.EM_PPC64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_PPC64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_PPC64 Machine = 21 /* PowerPC 64-bit. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_S390",
              "documentation": {
                "identifier": "EM_S390",
                "newPage": false,
                "searchKey": "elf.EM_S390",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_S390"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_S390 Machine = 22 /* IBM System/390. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_V800",
              "documentation": {
                "identifier": "EM_V800",
                "newPage": false,
                "searchKey": "elf.EM_V800",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_V800"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_V800 Machine = 36 /* NEC V800. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_FR20",
              "documentation": {
                "identifier": "EM_FR20",
                "newPage": false,
                "searchKey": "elf.EM_FR20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_FR20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_FR20 Machine = 37 /* Fujitsu FR20. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_RH32",
              "documentation": {
                "identifier": "EM_RH32",
                "newPage": false,
                "searchKey": "elf.EM_RH32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_RH32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_RH32 Machine = 38 /* TRW RH-32. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_RCE",
              "documentation": {
                "identifier": "EM_RCE",
                "newPage": false,
                "searchKey": "elf.EM_RCE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_RCE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_RCE Machine = 39 /* Motorola RCE. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ARM",
              "documentation": {
                "identifier": "EM_ARM",
                "newPage": false,
                "searchKey": "elf.EM_ARM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ARM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ARM Machine = 40 /* ARM. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SH",
              "documentation": {
                "identifier": "EM_SH",
                "newPage": false,
                "searchKey": "elf.EM_SH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SH Machine = 42 /* Hitachi SH. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SPARCV9",
              "documentation": {
                "identifier": "EM_SPARCV9",
                "newPage": false,
                "searchKey": "elf.EM_SPARCV9",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SPARCV9"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SPARCV9 Machine = 43 /* SPARC v9 64-bit. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TRICORE",
              "documentation": {
                "identifier": "EM_TRICORE",
                "newPage": false,
                "searchKey": "elf.EM_TRICORE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TRICORE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TRICORE Machine = 44 /* Siemens TriCore embedded processor. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ARC",
              "documentation": {
                "identifier": "EM_ARC",
                "newPage": false,
                "searchKey": "elf.EM_ARC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ARC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ARC Machine = 45 /* Argonaut RISC Core. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_H8_300",
              "documentation": {
                "identifier": "EM_H8_300",
                "newPage": false,
                "searchKey": "elf.EM_H8_300",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_H8_300"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_H8_300 Machine = 46 /* Hitachi H8/300. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_H8_300H",
              "documentation": {
                "identifier": "EM_H8_300H",
                "newPage": false,
                "searchKey": "elf.EM_H8_300H",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_H8_300H"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_H8_300H Machine = 47 /* Hitachi H8/300H. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_H8S",
              "documentation": {
                "identifier": "EM_H8S",
                "newPage": false,
                "searchKey": "elf.EM_H8S",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_H8S"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_H8S Machine = 48 /* Hitachi H8S. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_H8_500",
              "documentation": {
                "identifier": "EM_H8_500",
                "newPage": false,
                "searchKey": "elf.EM_H8_500",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_H8_500"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_H8_500 Machine = 49 /* Hitachi H8/500. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_IA_64",
              "documentation": {
                "identifier": "EM_IA_64",
                "newPage": false,
                "searchKey": "elf.EM_IA_64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_IA_64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_IA_64 Machine = 50 /* Intel IA-64 Processor. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MIPS_X",
              "documentation": {
                "identifier": "EM_MIPS_X",
                "newPage": false,
                "searchKey": "elf.EM_MIPS_X",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MIPS_X"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MIPS_X Machine = 51 /* Stanford MIPS-X. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_COLDFIRE",
              "documentation": {
                "identifier": "EM_COLDFIRE",
                "newPage": false,
                "searchKey": "elf.EM_COLDFIRE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_COLDFIRE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_COLDFIRE Machine = 52 /* Motorola ColdFire. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_68HC12",
              "documentation": {
                "identifier": "EM_68HC12",
                "newPage": false,
                "searchKey": "elf.EM_68HC12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_68HC12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_68HC12 Machine = 53 /* Motorola M68HC12. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MMA",
              "documentation": {
                "identifier": "EM_MMA",
                "newPage": false,
                "searchKey": "elf.EM_MMA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MMA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MMA Machine = 54 /* Fujitsu MMA. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_PCP",
              "documentation": {
                "identifier": "EM_PCP",
                "newPage": false,
                "searchKey": "elf.EM_PCP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_PCP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_PCP Machine = 55 /* Siemens PCP. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_NCPU",
              "documentation": {
                "identifier": "EM_NCPU",
                "newPage": false,
                "searchKey": "elf.EM_NCPU",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_NCPU"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_NCPU Machine = 56 /* Sony nCPU. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_NDR1",
              "documentation": {
                "identifier": "EM_NDR1",
                "newPage": false,
                "searchKey": "elf.EM_NDR1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_NDR1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_NDR1 Machine = 57 /* Denso NDR1 microprocessor. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_STARCORE",
              "documentation": {
                "identifier": "EM_STARCORE",
                "newPage": false,
                "searchKey": "elf.EM_STARCORE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_STARCORE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_STARCORE Machine = 58 /* Motorola Star*Core processor. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ME16",
              "documentation": {
                "identifier": "EM_ME16",
                "newPage": false,
                "searchKey": "elf.EM_ME16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ME16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ME16 Machine = 59 /* Toyota ME16 processor. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ST100",
              "documentation": {
                "identifier": "EM_ST100",
                "newPage": false,
                "searchKey": "elf.EM_ST100",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ST100"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ST100 Machine = 60 /* STMicroelectronics ST100 processor. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TINYJ",
              "documentation": {
                "identifier": "EM_TINYJ",
                "newPage": false,
                "searchKey": "elf.EM_TINYJ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TINYJ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TINYJ Machine = 61 /* Advanced Logic Corp. TinyJ processor. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_X86_64",
              "documentation": {
                "identifier": "EM_X86_64",
                "newPage": false,
                "searchKey": "elf.EM_X86_64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_X86_64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_X86_64 Machine = 62 /* Advanced Micro Devices x86-64 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_PDSP",
              "documentation": {
                "identifier": "EM_PDSP",
                "newPage": false,
                "searchKey": "elf.EM_PDSP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_PDSP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_PDSP Machine = 63 /* Sony DSP Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_PDP10",
              "documentation": {
                "identifier": "EM_PDP10",
                "newPage": false,
                "searchKey": "elf.EM_PDP10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_PDP10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_PDP10 Machine = 64 /* Digital Equipment Corp. PDP-10 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_PDP11",
              "documentation": {
                "identifier": "EM_PDP11",
                "newPage": false,
                "searchKey": "elf.EM_PDP11",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_PDP11"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_PDP11 Machine = 65 /* Digital Equipment Corp. PDP-11 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_FX66",
              "documentation": {
                "identifier": "EM_FX66",
                "newPage": false,
                "searchKey": "elf.EM_FX66",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_FX66"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_FX66 Machine = 66 /* Siemens FX66 microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ST9PLUS",
              "documentation": {
                "identifier": "EM_ST9PLUS",
                "newPage": false,
                "searchKey": "elf.EM_ST9PLUS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ST9PLUS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ST9PLUS Machine = 67 /* STMicroelectronics ST9+ 8/16 bit microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ST7",
              "documentation": {
                "identifier": "EM_ST7",
                "newPage": false,
                "searchKey": "elf.EM_ST7",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ST7"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ST7 Machine = 68 /* STMicroelectronics ST7 8-bit microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_68HC16",
              "documentation": {
                "identifier": "EM_68HC16",
                "newPage": false,
                "searchKey": "elf.EM_68HC16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_68HC16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_68HC16 Machine = 69 /* Motorola MC68HC16 Microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_68HC11",
              "documentation": {
                "identifier": "EM_68HC11",
                "newPage": false,
                "searchKey": "elf.EM_68HC11",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_68HC11"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_68HC11 Machine = 70 /* Motorola MC68HC11 Microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_68HC08",
              "documentation": {
                "identifier": "EM_68HC08",
                "newPage": false,
                "searchKey": "elf.EM_68HC08",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_68HC08"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_68HC08 Machine = 71 /* Motorola MC68HC08 Microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_68HC05",
              "documentation": {
                "identifier": "EM_68HC05",
                "newPage": false,
                "searchKey": "elf.EM_68HC05",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_68HC05"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_68HC05 Machine = 72 /* Motorola MC68HC05 Microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SVX",
              "documentation": {
                "identifier": "EM_SVX",
                "newPage": false,
                "searchKey": "elf.EM_SVX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SVX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SVX Machine = 73 /* Silicon Graphics SVx */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ST19",
              "documentation": {
                "identifier": "EM_ST19",
                "newPage": false,
                "searchKey": "elf.EM_ST19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ST19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ST19 Machine = 74 /* STMicroelectronics ST19 8-bit microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_VAX",
              "documentation": {
                "identifier": "EM_VAX",
                "newPage": false,
                "searchKey": "elf.EM_VAX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_VAX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_VAX Machine = 75 /* Digital VAX */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CRIS",
              "documentation": {
                "identifier": "EM_CRIS",
                "newPage": false,
                "searchKey": "elf.EM_CRIS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CRIS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CRIS Machine = 76 /* Axis Communications 32-bit embedded processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_JAVELIN",
              "documentation": {
                "identifier": "EM_JAVELIN",
                "newPage": false,
                "searchKey": "elf.EM_JAVELIN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_JAVELIN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_JAVELIN Machine = 77 /* Infineon Technologies 32-bit embedded processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_FIREPATH",
              "documentation": {
                "identifier": "EM_FIREPATH",
                "newPage": false,
                "searchKey": "elf.EM_FIREPATH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_FIREPATH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_FIREPATH Machine = 78 /* Element 14 64-bit DSP Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ZSP",
              "documentation": {
                "identifier": "EM_ZSP",
                "newPage": false,
                "searchKey": "elf.EM_ZSP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ZSP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ZSP Machine = 79 /* LSI Logic 16-bit DSP Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MMIX",
              "documentation": {
                "identifier": "EM_MMIX",
                "newPage": false,
                "searchKey": "elf.EM_MMIX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MMIX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MMIX Machine = 80 /* Donald Knuth's educational 64-bit processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_HUANY",
              "documentation": {
                "identifier": "EM_HUANY",
                "newPage": false,
                "searchKey": "elf.EM_HUANY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_HUANY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_HUANY Machine = 81 /* Harvard University machine-independent object files */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_PRISM",
              "documentation": {
                "identifier": "EM_PRISM",
                "newPage": false,
                "searchKey": "elf.EM_PRISM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_PRISM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_PRISM Machine = 82 /* SiTera Prism */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_AVR",
              "documentation": {
                "identifier": "EM_AVR",
                "newPage": false,
                "searchKey": "elf.EM_AVR",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_AVR"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_AVR Machine = 83 /* Atmel AVR 8-bit microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_FR30",
              "documentation": {
                "identifier": "EM_FR30",
                "newPage": false,
                "searchKey": "elf.EM_FR30",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_FR30"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_FR30 Machine = 84 /* Fujitsu FR30 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_D10V",
              "documentation": {
                "identifier": "EM_D10V",
                "newPage": false,
                "searchKey": "elf.EM_D10V",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_D10V"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_D10V Machine = 85 /* Mitsubishi D10V */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_D30V",
              "documentation": {
                "identifier": "EM_D30V",
                "newPage": false,
                "searchKey": "elf.EM_D30V",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_D30V"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_D30V Machine = 86 /* Mitsubishi D30V */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_V850",
              "documentation": {
                "identifier": "EM_V850",
                "newPage": false,
                "searchKey": "elf.EM_V850",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_V850"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_V850 Machine = 87 /* NEC v850 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_M32R",
              "documentation": {
                "identifier": "EM_M32R",
                "newPage": false,
                "searchKey": "elf.EM_M32R",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_M32R"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_M32R Machine = 88 /* Mitsubishi M32R */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MN10300",
              "documentation": {
                "identifier": "EM_MN10300",
                "newPage": false,
                "searchKey": "elf.EM_MN10300",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MN10300"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MN10300 Machine = 89 /* Matsushita MN10300 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MN10200",
              "documentation": {
                "identifier": "EM_MN10200",
                "newPage": false,
                "searchKey": "elf.EM_MN10200",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MN10200"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MN10200 Machine = 90 /* Matsushita MN10200 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_PJ",
              "documentation": {
                "identifier": "EM_PJ",
                "newPage": false,
                "searchKey": "elf.EM_PJ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_PJ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_PJ Machine = 91 /* picoJava */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_OPENRISC",
              "documentation": {
                "identifier": "EM_OPENRISC",
                "newPage": false,
                "searchKey": "elf.EM_OPENRISC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_OPENRISC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_OPENRISC Machine = 92 /* OpenRISC 32-bit embedded processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ARC_COMPACT",
              "documentation": {
                "identifier": "EM_ARC_COMPACT",
                "newPage": false,
                "searchKey": "elf.EM_ARC_COMPACT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ARC_COMPACT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ARC_COMPACT Machine /* ARC International ARCompact processor (old spelling/synonym: EM_ARC_A5) */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_XTENSA",
              "documentation": {
                "identifier": "EM_XTENSA",
                "newPage": false,
                "searchKey": "elf.EM_XTENSA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_XTENSA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_XTENSA Machine = 94 /* Tensilica Xtensa Architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_VIDEOCORE",
              "documentation": {
                "identifier": "EM_VIDEOCORE",
                "newPage": false,
                "searchKey": "elf.EM_VIDEOCORE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_VIDEOCORE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_VIDEOCORE Machine = 95 /* Alphamosaic VideoCore processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TMM_GPP",
              "documentation": {
                "identifier": "EM_TMM_GPP",
                "newPage": false,
                "searchKey": "elf.EM_TMM_GPP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TMM_GPP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TMM_GPP Machine = 96 /* Thompson Multimedia General Purpose Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_NS32K",
              "documentation": {
                "identifier": "EM_NS32K",
                "newPage": false,
                "searchKey": "elf.EM_NS32K",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_NS32K"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_NS32K Machine = 97 /* National Semiconductor 32000 series */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TPC",
              "documentation": {
                "identifier": "EM_TPC",
                "newPage": false,
                "searchKey": "elf.EM_TPC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TPC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TPC Machine = 98 /* Tenor Network TPC processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SNP1K",
              "documentation": {
                "identifier": "EM_SNP1K",
                "newPage": false,
                "searchKey": "elf.EM_SNP1K",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SNP1K"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SNP1K Machine = 99 /* Trebia SNP 1000 processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ST200",
              "documentation": {
                "identifier": "EM_ST200",
                "newPage": false,
                "searchKey": "elf.EM_ST200",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ST200"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ST200 Machine = 100 /* STMicroelectronics (www.st.com) ST200 microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_IP2K",
              "documentation": {
                "identifier": "EM_IP2K",
                "newPage": false,
                "searchKey": "elf.EM_IP2K",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_IP2K"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_IP2K Machine = 101 /* Ubicom IP2xxx microcontroller family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MAX",
              "documentation": {
                "identifier": "EM_MAX",
                "newPage": false,
                "searchKey": "elf.EM_MAX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MAX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MAX Machine = 102 /* MAX Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CR",
              "documentation": {
                "identifier": "EM_CR",
                "newPage": false,
                "searchKey": "elf.EM_CR",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CR"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CR Machine = 103 /* National Semiconductor CompactRISC microprocessor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_F2MC16",
              "documentation": {
                "identifier": "EM_F2MC16",
                "newPage": false,
                "searchKey": "elf.EM_F2MC16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_F2MC16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_F2MC16 Machine = 104 /* Fujitsu F2MC16 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MSP430",
              "documentation": {
                "identifier": "EM_MSP430",
                "newPage": false,
                "searchKey": "elf.EM_MSP430",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MSP430"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MSP430 Machine = 105 /* Texas Instruments embedded microcontroller msp430 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_BLACKFIN",
              "documentation": {
                "identifier": "EM_BLACKFIN",
                "newPage": false,
                "searchKey": "elf.EM_BLACKFIN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_BLACKFIN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_BLACKFIN Machine = 106 /* Analog Devices Blackfin (DSP) processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SE_C33",
              "documentation": {
                "identifier": "EM_SE_C33",
                "newPage": false,
                "searchKey": "elf.EM_SE_C33",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SE_C33"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SE_C33 Machine = 107 /* S1C33 Family of Seiko Epson processors */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SEP",
              "documentation": {
                "identifier": "EM_SEP",
                "newPage": false,
                "searchKey": "elf.EM_SEP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SEP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SEP Machine = 108 /* Sharp embedded microprocessor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ARCA",
              "documentation": {
                "identifier": "EM_ARCA",
                "newPage": false,
                "searchKey": "elf.EM_ARCA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ARCA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ARCA Machine = 109 /* Arca RISC Microprocessor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_UNICORE",
              "documentation": {
                "identifier": "EM_UNICORE",
                "newPage": false,
                "searchKey": "elf.EM_UNICORE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_UNICORE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_UNICORE Machine /* Microprocessor series from PKU-Unity Ltd. and MPRC of Peking University */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_EXCESS",
              "documentation": {
                "identifier": "EM_EXCESS",
                "newPage": false,
                "searchKey": "elf.EM_EXCESS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_EXCESS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_EXCESS Machine = 111 /* eXcess: 16/32/64-bit configurable embedded CPU */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_DXP",
              "documentation": {
                "identifier": "EM_DXP",
                "newPage": false,
                "searchKey": "elf.EM_DXP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_DXP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_DXP Machine = 112 /* Icera Semiconductor Inc. Deep Execution Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ALTERA_NIOS2",
              "documentation": {
                "identifier": "EM_ALTERA_NIOS2",
                "newPage": false,
                "searchKey": "elf.EM_ALTERA_NIOS2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ALTERA_NIOS2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ALTERA_NIOS2 Machine = 113 /* Altera Nios II soft-core processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CRX",
              "documentation": {
                "identifier": "EM_CRX",
                "newPage": false,
                "searchKey": "elf.EM_CRX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CRX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CRX Machine = 114 /* National Semiconductor CompactRISC CRX microprocessor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_XGATE",
              "documentation": {
                "identifier": "EM_XGATE",
                "newPage": false,
                "searchKey": "elf.EM_XGATE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_XGATE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_XGATE Machine = 115 /* Motorola XGATE embedded processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_C166",
              "documentation": {
                "identifier": "EM_C166",
                "newPage": false,
                "searchKey": "elf.EM_C166",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_C166"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_C166 Machine = 116 /* Infineon C16x/XC16x processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_M16C",
              "documentation": {
                "identifier": "EM_M16C",
                "newPage": false,
                "searchKey": "elf.EM_M16C",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_M16C"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_M16C Machine = 117 /* Renesas M16C series microprocessors */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_DSPIC30F",
              "documentation": {
                "identifier": "EM_DSPIC30F",
                "newPage": false,
                "searchKey": "elf.EM_DSPIC30F",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_DSPIC30F"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_DSPIC30F Machine = 118 /* Microchip Technology dsPIC30F Digital Signal Controller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CE",
              "documentation": {
                "identifier": "EM_CE",
                "newPage": false,
                "searchKey": "elf.EM_CE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CE Machine = 119 /* Freescale Communication Engine RISC core */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_M32C",
              "documentation": {
                "identifier": "EM_M32C",
                "newPage": false,
                "searchKey": "elf.EM_M32C",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_M32C"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_M32C Machine = 120 /* Renesas M32C series microprocessors */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TSK3000",
              "documentation": {
                "identifier": "EM_TSK3000",
                "newPage": false,
                "searchKey": "elf.EM_TSK3000",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TSK3000"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TSK3000 Machine = 131 /* Altium TSK3000 core */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_RS08",
              "documentation": {
                "identifier": "EM_RS08",
                "newPage": false,
                "searchKey": "elf.EM_RS08",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_RS08"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_RS08 Machine = 132 /* Freescale RS08 embedded processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SHARC",
              "documentation": {
                "identifier": "EM_SHARC",
                "newPage": false,
                "searchKey": "elf.EM_SHARC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SHARC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SHARC Machine = 133 /* Analog Devices SHARC family of 32-bit DSP processors */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ECOG2",
              "documentation": {
                "identifier": "EM_ECOG2",
                "newPage": false,
                "searchKey": "elf.EM_ECOG2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ECOG2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ECOG2 Machine = 134 /* Cyan Technology eCOG2 microprocessor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SCORE7",
              "documentation": {
                "identifier": "EM_SCORE7",
                "newPage": false,
                "searchKey": "elf.EM_SCORE7",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SCORE7"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SCORE7 Machine = 135 /* Sunplus S+core7 RISC processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_DSP24",
              "documentation": {
                "identifier": "EM_DSP24",
                "newPage": false,
                "searchKey": "elf.EM_DSP24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_DSP24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_DSP24 Machine = 136 /* New Japan Radio (NJR) 24-bit DSP Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_VIDEOCORE3",
              "documentation": {
                "identifier": "EM_VIDEOCORE3",
                "newPage": false,
                "searchKey": "elf.EM_VIDEOCORE3",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_VIDEOCORE3"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_VIDEOCORE3 Machine = 137 /* Broadcom VideoCore III processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_LATTICEMICO32",
              "documentation": {
                "identifier": "EM_LATTICEMICO32",
                "newPage": false,
                "searchKey": "elf.EM_LATTICEMICO32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_LATTICEMICO32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_LATTICEMICO32 Machine = 138 /* RISC processor for Lattice FPGA architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SE_C17",
              "documentation": {
                "identifier": "EM_SE_C17",
                "newPage": false,
                "searchKey": "elf.EM_SE_C17",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SE_C17"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SE_C17 Machine = 139 /* Seiko Epson C17 family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TI_C6000",
              "documentation": {
                "identifier": "EM_TI_C6000",
                "newPage": false,
                "searchKey": "elf.EM_TI_C6000",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TI_C6000"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TI_C6000 Machine = 140 /* The Texas Instruments TMS320C6000 DSP family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TI_C2000",
              "documentation": {
                "identifier": "EM_TI_C2000",
                "newPage": false,
                "searchKey": "elf.EM_TI_C2000",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TI_C2000"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TI_C2000 Machine = 141 /* The Texas Instruments TMS320C2000 DSP family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TI_C5500",
              "documentation": {
                "identifier": "EM_TI_C5500",
                "newPage": false,
                "searchKey": "elf.EM_TI_C5500",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TI_C5500"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TI_C5500 Machine = 142 /* The Texas Instruments TMS320C55x DSP family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TI_ARP32",
              "documentation": {
                "identifier": "EM_TI_ARP32",
                "newPage": false,
                "searchKey": "elf.EM_TI_ARP32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TI_ARP32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TI_ARP32 Machine /* Texas Instruments Application Specific RISC Processor, 32bit fetch */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TI_PRU",
              "documentation": {
                "identifier": "EM_TI_PRU",
                "newPage": false,
                "searchKey": "elf.EM_TI_PRU",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TI_PRU"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TI_PRU Machine = 144 /* Texas Instruments Programmable Realtime Unit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MMDSP_PLUS",
              "documentation": {
                "identifier": "EM_MMDSP_PLUS",
                "newPage": false,
                "searchKey": "elf.EM_MMDSP_PLUS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MMDSP_PLUS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MMDSP_PLUS Machine = 160 /* STMicroelectronics 64bit VLIW Data Signal Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CYPRESS_M8C",
              "documentation": {
                "identifier": "EM_CYPRESS_M8C",
                "newPage": false,
                "searchKey": "elf.EM_CYPRESS_M8C",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CYPRESS_M8C"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CYPRESS_M8C Machine = 161 /* Cypress M8C microprocessor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_R32C",
              "documentation": {
                "identifier": "EM_R32C",
                "newPage": false,
                "searchKey": "elf.EM_R32C",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_R32C"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_R32C Machine = 162 /* Renesas R32C series microprocessors */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TRIMEDIA",
              "documentation": {
                "identifier": "EM_TRIMEDIA",
                "newPage": false,
                "searchKey": "elf.EM_TRIMEDIA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TRIMEDIA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TRIMEDIA Machine = 163 /* NXP Semiconductors TriMedia architecture family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_QDSP6",
              "documentation": {
                "identifier": "EM_QDSP6",
                "newPage": false,
                "searchKey": "elf.EM_QDSP6",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_QDSP6"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_QDSP6 Machine = 164 /* QUALCOMM DSP6 Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_8051",
              "documentation": {
                "identifier": "EM_8051",
                "newPage": false,
                "searchKey": "elf.EM_8051",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_8051"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_8051 Machine = 165 /* Intel 8051 and variants */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_STXP7X",
              "documentation": {
                "identifier": "EM_STXP7X",
                "newPage": false,
                "searchKey": "elf.EM_STXP7X",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_STXP7X"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_STXP7X Machine /* STMicroelectronics STxP7x family of configurable and extensible RISC processors */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_NDS32",
              "documentation": {
                "identifier": "EM_NDS32",
                "newPage": false,
                "searchKey": "elf.EM_NDS32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_NDS32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_NDS32 Machine /* Andes Technology compact code size embedded RISC processor family */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ECOG1",
              "documentation": {
                "identifier": "EM_ECOG1",
                "newPage": false,
                "searchKey": "elf.EM_ECOG1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ECOG1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ECOG1 Machine = 168 /* Cyan Technology eCOG1X family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ECOG1X",
              "documentation": {
                "identifier": "EM_ECOG1X",
                "newPage": false,
                "searchKey": "elf.EM_ECOG1X",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ECOG1X"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ECOG1X Machine = 168 /* Cyan Technology eCOG1X family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MAXQ30",
              "documentation": {
                "identifier": "EM_MAXQ30",
                "newPage": false,
                "searchKey": "elf.EM_MAXQ30",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MAXQ30"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MAXQ30 Machine = 169 /* Dallas Semiconductor MAXQ30 Core Micro-controllers */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_XIMO16",
              "documentation": {
                "identifier": "EM_XIMO16",
                "newPage": false,
                "searchKey": "elf.EM_XIMO16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_XIMO16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_XIMO16 Machine = 170 /* New Japan Radio (NJR) 16-bit DSP Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MANIK",
              "documentation": {
                "identifier": "EM_MANIK",
                "newPage": false,
                "searchKey": "elf.EM_MANIK",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MANIK"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MANIK Machine = 171 /* M2000 Reconfigurable RISC Microprocessor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CRAYNV2",
              "documentation": {
                "identifier": "EM_CRAYNV2",
                "newPage": false,
                "searchKey": "elf.EM_CRAYNV2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CRAYNV2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CRAYNV2 Machine = 172 /* Cray Inc. NV2 vector architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_RX",
              "documentation": {
                "identifier": "EM_RX",
                "newPage": false,
                "searchKey": "elf.EM_RX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_RX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_RX Machine = 173 /* Renesas RX family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_METAG",
              "documentation": {
                "identifier": "EM_METAG",
                "newPage": false,
                "searchKey": "elf.EM_METAG",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_METAG"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_METAG Machine = 174 /* Imagination Technologies META processor architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MCST_ELBRUS",
              "documentation": {
                "identifier": "EM_MCST_ELBRUS",
                "newPage": false,
                "searchKey": "elf.EM_MCST_ELBRUS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MCST_ELBRUS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MCST_ELBRUS Machine = 175 /* MCST Elbrus general purpose hardware architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ECOG16",
              "documentation": {
                "identifier": "EM_ECOG16",
                "newPage": false,
                "searchKey": "elf.EM_ECOG16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ECOG16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ECOG16 Machine = 176 /* Cyan Technology eCOG16 family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CR16",
              "documentation": {
                "identifier": "EM_CR16",
                "newPage": false,
                "searchKey": "elf.EM_CR16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CR16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CR16 Machine = 177 /* National Semiconductor CompactRISC CR16 16-bit microprocessor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ETPU",
              "documentation": {
                "identifier": "EM_ETPU",
                "newPage": false,
                "searchKey": "elf.EM_ETPU",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ETPU"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ETPU Machine = 178 /* Freescale Extended Time Processing Unit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_SLE9X",
              "documentation": {
                "identifier": "EM_SLE9X",
                "newPage": false,
                "searchKey": "elf.EM_SLE9X",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_SLE9X"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_SLE9X Machine = 179 /* Infineon Technologies SLE9X core */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_L10M",
              "documentation": {
                "identifier": "EM_L10M",
                "newPage": false,
                "searchKey": "elf.EM_L10M",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_L10M"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_L10M Machine = 180 /* Intel L10M */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_K10M",
              "documentation": {
                "identifier": "EM_K10M",
                "newPage": false,
                "searchKey": "elf.EM_K10M",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_K10M"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_K10M Machine = 181 /* Intel K10M */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_AARCH64",
              "documentation": {
                "identifier": "EM_AARCH64",
                "newPage": false,
                "searchKey": "elf.EM_AARCH64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_AARCH64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_AARCH64 Machine = 183 /* ARM 64-bit Architecture (AArch64) */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_AVR32",
              "documentation": {
                "identifier": "EM_AVR32",
                "newPage": false,
                "searchKey": "elf.EM_AVR32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_AVR32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_AVR32 Machine = 185 /* Atmel Corporation 32-bit microprocessor family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_STM8",
              "documentation": {
                "identifier": "EM_STM8",
                "newPage": false,
                "searchKey": "elf.EM_STM8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_STM8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_STM8 Machine = 186 /* STMicroeletronics STM8 8-bit microcontroller */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TILE64",
              "documentation": {
                "identifier": "EM_TILE64",
                "newPage": false,
                "searchKey": "elf.EM_TILE64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TILE64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TILE64 Machine = 187 /* Tilera TILE64 multicore architecture family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TILEPRO",
              "documentation": {
                "identifier": "EM_TILEPRO",
                "newPage": false,
                "searchKey": "elf.EM_TILEPRO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TILEPRO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TILEPRO Machine = 188 /* Tilera TILEPro multicore architecture family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MICROBLAZE",
              "documentation": {
                "identifier": "EM_MICROBLAZE",
                "newPage": false,
                "searchKey": "elf.EM_MICROBLAZE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MICROBLAZE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MICROBLAZE Machine = 189 /* Xilinx MicroBlaze 32-bit RISC soft processor core */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CUDA",
              "documentation": {
                "identifier": "EM_CUDA",
                "newPage": false,
                "searchKey": "elf.EM_CUDA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CUDA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CUDA Machine = 190 /* NVIDIA CUDA architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_TILEGX",
              "documentation": {
                "identifier": "EM_TILEGX",
                "newPage": false,
                "searchKey": "elf.EM_TILEGX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_TILEGX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_TILEGX Machine = 191 /* Tilera TILE-Gx multicore architecture family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CLOUDSHIELD",
              "documentation": {
                "identifier": "EM_CLOUDSHIELD",
                "newPage": false,
                "searchKey": "elf.EM_CLOUDSHIELD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CLOUDSHIELD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CLOUDSHIELD Machine = 192 /* CloudShield architecture family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_COREA_1ST",
              "documentation": {
                "identifier": "EM_COREA_1ST",
                "newPage": false,
                "searchKey": "elf.EM_COREA_1ST",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_COREA_1ST"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_COREA_1ST Machine = 193 /* KIPO-KAIST Core-A 1st generation processor family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_COREA_2ND",
              "documentation": {
                "identifier": "EM_COREA_2ND",
                "newPage": false,
                "searchKey": "elf.EM_COREA_2ND",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_COREA_2ND"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_COREA_2ND Machine = 194 /* KIPO-KAIST Core-A 2nd generation processor family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ARC_COMPACT2",
              "documentation": {
                "identifier": "EM_ARC_COMPACT2",
                "newPage": false,
                "searchKey": "elf.EM_ARC_COMPACT2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ARC_COMPACT2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ARC_COMPACT2 Machine = 195 /* Synopsys ARCompact V2 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_OPEN8",
              "documentation": {
                "identifier": "EM_OPEN8",
                "newPage": false,
                "searchKey": "elf.EM_OPEN8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_OPEN8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_OPEN8 Machine = 196 /* Open8 8-bit RISC soft processor core */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_RL78",
              "documentation": {
                "identifier": "EM_RL78",
                "newPage": false,
                "searchKey": "elf.EM_RL78",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_RL78"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_RL78 Machine = 197 /* Renesas RL78 family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_VIDEOCORE5",
              "documentation": {
                "identifier": "EM_VIDEOCORE5",
                "newPage": false,
                "searchKey": "elf.EM_VIDEOCORE5",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_VIDEOCORE5"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_VIDEOCORE5 Machine = 198 /* Broadcom VideoCore V processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_78KOR",
              "documentation": {
                "identifier": "EM_78KOR",
                "newPage": false,
                "searchKey": "elf.EM_78KOR",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_78KOR"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_78KOR Machine = 199 /* Renesas 78KOR family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_56800EX",
              "documentation": {
                "identifier": "EM_56800EX",
                "newPage": false,
                "searchKey": "elf.EM_56800EX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_56800EX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_56800EX Machine = 200 /* Freescale 56800EX Digital Signal Controller (DSC) */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_BA1",
              "documentation": {
                "identifier": "EM_BA1",
                "newPage": false,
                "searchKey": "elf.EM_BA1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_BA1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_BA1 Machine = 201 /* Beyond BA1 CPU architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_BA2",
              "documentation": {
                "identifier": "EM_BA2",
                "newPage": false,
                "searchKey": "elf.EM_BA2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_BA2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_BA2 Machine = 202 /* Beyond BA2 CPU architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_XCORE",
              "documentation": {
                "identifier": "EM_XCORE",
                "newPage": false,
                "searchKey": "elf.EM_XCORE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_XCORE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_XCORE Machine = 203 /* XMOS xCORE processor family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MCHP_PIC",
              "documentation": {
                "identifier": "EM_MCHP_PIC",
                "newPage": false,
                "searchKey": "elf.EM_MCHP_PIC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MCHP_PIC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MCHP_PIC Machine = 204 /* Microchip 8-bit PIC(r) family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_INTEL205",
              "documentation": {
                "identifier": "EM_INTEL205",
                "newPage": false,
                "searchKey": "elf.EM_INTEL205",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_INTEL205"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_INTEL205 Machine = 205 /* Reserved by Intel */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_INTEL206",
              "documentation": {
                "identifier": "EM_INTEL206",
                "newPage": false,
                "searchKey": "elf.EM_INTEL206",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_INTEL206"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_INTEL206 Machine = 206 /* Reserved by Intel */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_INTEL207",
              "documentation": {
                "identifier": "EM_INTEL207",
                "newPage": false,
                "searchKey": "elf.EM_INTEL207",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_INTEL207"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_INTEL207 Machine = 207 /* Reserved by Intel */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_INTEL208",
              "documentation": {
                "identifier": "EM_INTEL208",
                "newPage": false,
                "searchKey": "elf.EM_INTEL208",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_INTEL208"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_INTEL208 Machine = 208 /* Reserved by Intel */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_INTEL209",
              "documentation": {
                "identifier": "EM_INTEL209",
                "newPage": false,
                "searchKey": "elf.EM_INTEL209",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_INTEL209"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_INTEL209 Machine = 209 /* Reserved by Intel */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_KM32",
              "documentation": {
                "identifier": "EM_KM32",
                "newPage": false,
                "searchKey": "elf.EM_KM32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_KM32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_KM32 Machine = 210 /* KM211 KM32 32-bit processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_KMX32",
              "documentation": {
                "identifier": "EM_KMX32",
                "newPage": false,
                "searchKey": "elf.EM_KMX32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_KMX32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_KMX32 Machine = 211 /* KM211 KMX32 32-bit processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_KMX16",
              "documentation": {
                "identifier": "EM_KMX16",
                "newPage": false,
                "searchKey": "elf.EM_KMX16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_KMX16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_KMX16 Machine = 212 /* KM211 KMX16 16-bit processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_KMX8",
              "documentation": {
                "identifier": "EM_KMX8",
                "newPage": false,
                "searchKey": "elf.EM_KMX8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_KMX8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_KMX8 Machine = 213 /* KM211 KMX8 8-bit processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_KVARC",
              "documentation": {
                "identifier": "EM_KVARC",
                "newPage": false,
                "searchKey": "elf.EM_KVARC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_KVARC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_KVARC Machine = 214 /* KM211 KVARC processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CDP",
              "documentation": {
                "identifier": "EM_CDP",
                "newPage": false,
                "searchKey": "elf.EM_CDP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CDP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CDP Machine = 215 /* Paneve CDP architecture family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_COGE",
              "documentation": {
                "identifier": "EM_COGE",
                "newPage": false,
                "searchKey": "elf.EM_COGE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_COGE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_COGE Machine = 216 /* Cognitive Smart Memory Processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_COOL",
              "documentation": {
                "identifier": "EM_COOL",
                "newPage": false,
                "searchKey": "elf.EM_COOL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_COOL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_COOL Machine = 217 /* Bluechip Systems CoolEngine */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_NORC",
              "documentation": {
                "identifier": "EM_NORC",
                "newPage": false,
                "searchKey": "elf.EM_NORC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_NORC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_NORC Machine = 218 /* Nanoradio Optimized RISC */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_CSR_KALIMBA",
              "documentation": {
                "identifier": "EM_CSR_KALIMBA",
                "newPage": false,
                "searchKey": "elf.EM_CSR_KALIMBA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_CSR_KALIMBA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_CSR_KALIMBA Machine = 219 /* CSR Kalimba architecture family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_Z80",
              "documentation": {
                "identifier": "EM_Z80",
                "newPage": false,
                "searchKey": "elf.EM_Z80",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_Z80"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_Z80 Machine = 220 /* Zilog Z80 */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_VISIUM",
              "documentation": {
                "identifier": "EM_VISIUM",
                "newPage": false,
                "searchKey": "elf.EM_VISIUM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_VISIUM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_VISIUM Machine = 221 /* Controls and Data Services VISIUMcore processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_FT32",
              "documentation": {
                "identifier": "EM_FT32",
                "newPage": false,
                "searchKey": "elf.EM_FT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_FT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_FT32 Machine = 222 /* FTDI Chip FT32 high performance 32-bit RISC architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MOXIE",
              "documentation": {
                "identifier": "EM_MOXIE",
                "newPage": false,
                "searchKey": "elf.EM_MOXIE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MOXIE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MOXIE Machine = 223 /* Moxie processor family */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_AMDGPU",
              "documentation": {
                "identifier": "EM_AMDGPU",
                "newPage": false,
                "searchKey": "elf.EM_AMDGPU",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_AMDGPU"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_AMDGPU Machine = 224 /* AMD GPU architecture */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_RISCV",
              "documentation": {
                "identifier": "EM_RISCV",
                "newPage": false,
                "searchKey": "elf.EM_RISCV",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_RISCV"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_RISCV Machine = 243 /* RISC-V */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_LANAI",
              "documentation": {
                "identifier": "EM_LANAI",
                "newPage": false,
                "searchKey": "elf.EM_LANAI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_LANAI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_LANAI Machine = 244 /* Lanai 32-bit processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_BPF",
              "documentation": {
                "identifier": "EM_BPF",
                "newPage": false,
                "searchKey": "elf.EM_BPF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_BPF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_BPF Machine = 247 /* Linux BPF – in-kernel virtual machine */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_486",
              "documentation": {
                "identifier": "EM_486",
                "newPage": false,
                "searchKey": "elf.EM_486",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_486"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_486 Machine = 6 /* Intel i486. */\n\n```\n\nNon-standard or deprecated. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_MIPS_RS4_BE",
              "documentation": {
                "identifier": "EM_MIPS_RS4_BE",
                "newPage": false,
                "searchKey": "elf.EM_MIPS_RS4_BE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_MIPS_RS4_BE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_MIPS_RS4_BE Machine = 10 /* MIPS R4000 Big-Endian */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ALPHA_STD",
              "documentation": {
                "identifier": "EM_ALPHA_STD",
                "newPage": false,
                "searchKey": "elf.EM_ALPHA_STD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ALPHA_STD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ALPHA_STD Machine = 41 /* Digital Alpha (standard value). */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#EM_ALPHA",
              "documentation": {
                "identifier": "EM_ALPHA",
                "newPage": false,
                "searchKey": "elf.EM_ALPHA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const EM_ALPHA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst EM_ALPHA Machine = 0x9026 /* Alpha (written in the absence of an ABI) */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_UNDEF",
              "documentation": {
                "identifier": "SHN_UNDEF",
                "newPage": false,
                "searchKey": "elf.SHN_UNDEF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_UNDEF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_UNDEF SectionIndex = 0 /* Undefined, missing, irrelevant. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_LORESERVE",
              "documentation": {
                "identifier": "SHN_LORESERVE",
                "newPage": false,
                "searchKey": "elf.SHN_LORESERVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_LORESERVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_LORESERVE SectionIndex = 0xff00 /* First of reserved range. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_LOPROC",
              "documentation": {
                "identifier": "SHN_LOPROC",
                "newPage": false,
                "searchKey": "elf.SHN_LOPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_LOPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_LOPROC SectionIndex = 0xff00 /* First processor-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_HIPROC",
              "documentation": {
                "identifier": "SHN_HIPROC",
                "newPage": false,
                "searchKey": "elf.SHN_HIPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_HIPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_HIPROC SectionIndex = 0xff1f /* Last processor-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_LOOS",
              "documentation": {
                "identifier": "SHN_LOOS",
                "newPage": false,
                "searchKey": "elf.SHN_LOOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_LOOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_LOOS SectionIndex = 0xff20 /* First operating system-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_HIOS",
              "documentation": {
                "identifier": "SHN_HIOS",
                "newPage": false,
                "searchKey": "elf.SHN_HIOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_HIOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_HIOS SectionIndex = 0xff3f /* Last operating system-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_ABS",
              "documentation": {
                "identifier": "SHN_ABS",
                "newPage": false,
                "searchKey": "elf.SHN_ABS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_ABS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_ABS SectionIndex = 0xfff1 /* Absolute values. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_COMMON",
              "documentation": {
                "identifier": "SHN_COMMON",
                "newPage": false,
                "searchKey": "elf.SHN_COMMON",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_COMMON"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_COMMON SectionIndex = 0xfff2 /* Common data. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_XINDEX",
              "documentation": {
                "identifier": "SHN_XINDEX",
                "newPage": false,
                "searchKey": "elf.SHN_XINDEX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_XINDEX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_XINDEX SectionIndex = 0xffff /* Escape; index stored elsewhere. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHN_HIRESERVE",
              "documentation": {
                "identifier": "SHN_HIRESERVE",
                "newPage": false,
                "searchKey": "elf.SHN_HIRESERVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHN_HIRESERVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHN_HIRESERVE SectionIndex = 0xffff /* Last of reserved range. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_NULL",
              "documentation": {
                "identifier": "SHT_NULL",
                "newPage": false,
                "searchKey": "elf.SHT_NULL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_NULL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_NULL SectionType = 0 /* inactive */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_PROGBITS",
              "documentation": {
                "identifier": "SHT_PROGBITS",
                "newPage": false,
                "searchKey": "elf.SHT_PROGBITS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_PROGBITS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_PROGBITS SectionType = 1 /* program defined information */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_SYMTAB",
              "documentation": {
                "identifier": "SHT_SYMTAB",
                "newPage": false,
                "searchKey": "elf.SHT_SYMTAB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_SYMTAB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_SYMTAB SectionType = 2 /* symbol table section */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_STRTAB",
              "documentation": {
                "identifier": "SHT_STRTAB",
                "newPage": false,
                "searchKey": "elf.SHT_STRTAB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_STRTAB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_STRTAB SectionType = 3 /* string table section */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_RELA",
              "documentation": {
                "identifier": "SHT_RELA",
                "newPage": false,
                "searchKey": "elf.SHT_RELA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_RELA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_RELA SectionType = 4 /* relocation section with addends */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_HASH",
              "documentation": {
                "identifier": "SHT_HASH",
                "newPage": false,
                "searchKey": "elf.SHT_HASH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_HASH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_HASH SectionType = 5 /* symbol hash table section */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_DYNAMIC",
              "documentation": {
                "identifier": "SHT_DYNAMIC",
                "newPage": false,
                "searchKey": "elf.SHT_DYNAMIC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_DYNAMIC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_DYNAMIC SectionType = 6 /* dynamic section */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_NOTE",
              "documentation": {
                "identifier": "SHT_NOTE",
                "newPage": false,
                "searchKey": "elf.SHT_NOTE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_NOTE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_NOTE SectionType = 7 /* note section */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_NOBITS",
              "documentation": {
                "identifier": "SHT_NOBITS",
                "newPage": false,
                "searchKey": "elf.SHT_NOBITS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_NOBITS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_NOBITS SectionType = 8 /* no space section */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_REL",
              "documentation": {
                "identifier": "SHT_REL",
                "newPage": false,
                "searchKey": "elf.SHT_REL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_REL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_REL SectionType = 9 /* relocation section - no addends */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_SHLIB",
              "documentation": {
                "identifier": "SHT_SHLIB",
                "newPage": false,
                "searchKey": "elf.SHT_SHLIB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_SHLIB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_SHLIB SectionType = 10 /* reserved - purpose unknown */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_DYNSYM",
              "documentation": {
                "identifier": "SHT_DYNSYM",
                "newPage": false,
                "searchKey": "elf.SHT_DYNSYM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_DYNSYM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_DYNSYM SectionType = 11 /* dynamic symbol table section */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_INIT_ARRAY",
              "documentation": {
                "identifier": "SHT_INIT_ARRAY",
                "newPage": false,
                "searchKey": "elf.SHT_INIT_ARRAY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_INIT_ARRAY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_INIT_ARRAY SectionType = 14 /* Initialization function pointers. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_FINI_ARRAY",
              "documentation": {
                "identifier": "SHT_FINI_ARRAY",
                "newPage": false,
                "searchKey": "elf.SHT_FINI_ARRAY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_FINI_ARRAY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_FINI_ARRAY SectionType = 15 /* Termination function pointers. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_PREINIT_ARRAY",
              "documentation": {
                "identifier": "SHT_PREINIT_ARRAY",
                "newPage": false,
                "searchKey": "elf.SHT_PREINIT_ARRAY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_PREINIT_ARRAY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_PREINIT_ARRAY SectionType = 16 /* Pre-initialization function ptrs. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_GROUP",
              "documentation": {
                "identifier": "SHT_GROUP",
                "newPage": false,
                "searchKey": "elf.SHT_GROUP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_GROUP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_GROUP SectionType = 17 /* Section group. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_SYMTAB_SHNDX",
              "documentation": {
                "identifier": "SHT_SYMTAB_SHNDX",
                "newPage": false,
                "searchKey": "elf.SHT_SYMTAB_SHNDX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_SYMTAB_SHNDX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_SYMTAB_SHNDX SectionType = 18 /* Section indexes (see SHN_XINDEX). */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_LOOS",
              "documentation": {
                "identifier": "SHT_LOOS",
                "newPage": false,
                "searchKey": "elf.SHT_LOOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_LOOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_LOOS SectionType = 0x60000000 /* First of OS specific semantics */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_GNU_ATTRIBUTES",
              "documentation": {
                "identifier": "SHT_GNU_ATTRIBUTES",
                "newPage": false,
                "searchKey": "elf.SHT_GNU_ATTRIBUTES",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_GNU_ATTRIBUTES"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_GNU_ATTRIBUTES SectionType = 0x6ffffff5 /* GNU object attributes */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_GNU_HASH",
              "documentation": {
                "identifier": "SHT_GNU_HASH",
                "newPage": false,
                "searchKey": "elf.SHT_GNU_HASH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_GNU_HASH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_GNU_HASH SectionType = 0x6ffffff6 /* GNU hash table */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_GNU_LIBLIST",
              "documentation": {
                "identifier": "SHT_GNU_LIBLIST",
                "newPage": false,
                "searchKey": "elf.SHT_GNU_LIBLIST",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_GNU_LIBLIST"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_GNU_LIBLIST SectionType = 0x6ffffff7 /* GNU prelink library list */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_GNU_VERDEF",
              "documentation": {
                "identifier": "SHT_GNU_VERDEF",
                "newPage": false,
                "searchKey": "elf.SHT_GNU_VERDEF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_GNU_VERDEF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_GNU_VERDEF SectionType = 0x6ffffffd /* GNU version definition section */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_GNU_VERNEED",
              "documentation": {
                "identifier": "SHT_GNU_VERNEED",
                "newPage": false,
                "searchKey": "elf.SHT_GNU_VERNEED",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_GNU_VERNEED"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_GNU_VERNEED SectionType = 0x6ffffffe /* GNU version needs section */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_GNU_VERSYM",
              "documentation": {
                "identifier": "SHT_GNU_VERSYM",
                "newPage": false,
                "searchKey": "elf.SHT_GNU_VERSYM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_GNU_VERSYM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_GNU_VERSYM SectionType = 0x6fffffff /* GNU version symbol table */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_HIOS",
              "documentation": {
                "identifier": "SHT_HIOS",
                "newPage": false,
                "searchKey": "elf.SHT_HIOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_HIOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_HIOS SectionType = 0x6fffffff /* Last of OS specific semantics */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_LOPROC",
              "documentation": {
                "identifier": "SHT_LOPROC",
                "newPage": false,
                "searchKey": "elf.SHT_LOPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_LOPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_LOPROC SectionType = 0x70000000 /* reserved range for processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_MIPS_ABIFLAGS",
              "documentation": {
                "identifier": "SHT_MIPS_ABIFLAGS",
                "newPage": false,
                "searchKey": "elf.SHT_MIPS_ABIFLAGS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_MIPS_ABIFLAGS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_MIPS_ABIFLAGS SectionType = 0x7000002a /* .MIPS.abiflags */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_HIPROC",
              "documentation": {
                "identifier": "SHT_HIPROC",
                "newPage": false,
                "searchKey": "elf.SHT_HIPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_HIPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_HIPROC SectionType = 0x7fffffff /* specific section header types */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_LOUSER",
              "documentation": {
                "identifier": "SHT_LOUSER",
                "newPage": false,
                "searchKey": "elf.SHT_LOUSER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_LOUSER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_LOUSER SectionType = 0x80000000 /* reserved range for application */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHT_HIUSER",
              "documentation": {
                "identifier": "SHT_HIUSER",
                "newPage": false,
                "searchKey": "elf.SHT_HIUSER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHT_HIUSER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHT_HIUSER SectionType = 0xffffffff /* specific indexes */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_WRITE",
              "documentation": {
                "identifier": "SHF_WRITE",
                "newPage": false,
                "searchKey": "elf.SHF_WRITE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_WRITE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_WRITE SectionFlag = 0x1 /* Section contains writable data. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_ALLOC",
              "documentation": {
                "identifier": "SHF_ALLOC",
                "newPage": false,
                "searchKey": "elf.SHF_ALLOC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_ALLOC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_ALLOC SectionFlag = 0x2 /* Section occupies memory. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_EXECINSTR",
              "documentation": {
                "identifier": "SHF_EXECINSTR",
                "newPage": false,
                "searchKey": "elf.SHF_EXECINSTR",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_EXECINSTR"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_EXECINSTR SectionFlag = 0x4 /* Section contains instructions. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_MERGE",
              "documentation": {
                "identifier": "SHF_MERGE",
                "newPage": false,
                "searchKey": "elf.SHF_MERGE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_MERGE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_MERGE SectionFlag = 0x10 /* Section may be merged. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_STRINGS",
              "documentation": {
                "identifier": "SHF_STRINGS",
                "newPage": false,
                "searchKey": "elf.SHF_STRINGS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_STRINGS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_STRINGS SectionFlag = 0x20 /* Section contains strings. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_INFO_LINK",
              "documentation": {
                "identifier": "SHF_INFO_LINK",
                "newPage": false,
                "searchKey": "elf.SHF_INFO_LINK",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_INFO_LINK"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_INFO_LINK SectionFlag = 0x40 /* sh_info holds section index. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_LINK_ORDER",
              "documentation": {
                "identifier": "SHF_LINK_ORDER",
                "newPage": false,
                "searchKey": "elf.SHF_LINK_ORDER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_LINK_ORDER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_LINK_ORDER SectionFlag = 0x80 /* Special ordering requirements. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_OS_NONCONFORMING",
              "documentation": {
                "identifier": "SHF_OS_NONCONFORMING",
                "newPage": false,
                "searchKey": "elf.SHF_OS_NONCONFORMING",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_OS_NONCONFORMING"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_OS_NONCONFORMING SectionFlag = 0x100 /* OS-specific processing required. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_GROUP",
              "documentation": {
                "identifier": "SHF_GROUP",
                "newPage": false,
                "searchKey": "elf.SHF_GROUP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_GROUP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_GROUP SectionFlag = 0x200 /* Member of section group. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_TLS",
              "documentation": {
                "identifier": "SHF_TLS",
                "newPage": false,
                "searchKey": "elf.SHF_TLS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_TLS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_TLS SectionFlag = 0x400 /* Section contains TLS data. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_COMPRESSED",
              "documentation": {
                "identifier": "SHF_COMPRESSED",
                "newPage": false,
                "searchKey": "elf.SHF_COMPRESSED",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_COMPRESSED"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_COMPRESSED SectionFlag = 0x800 /* Section is compressed. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_MASKOS",
              "documentation": {
                "identifier": "SHF_MASKOS",
                "newPage": false,
                "searchKey": "elf.SHF_MASKOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_MASKOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_MASKOS SectionFlag = 0x0ff00000 /* OS-specific semantics. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SHF_MASKPROC",
              "documentation": {
                "identifier": "SHF_MASKPROC",
                "newPage": false,
                "searchKey": "elf.SHF_MASKPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const SHF_MASKPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst SHF_MASKPROC SectionFlag = 0xf0000000 /* Processor-specific semantics. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#COMPRESS_ZLIB",
              "documentation": {
                "identifier": "COMPRESS_ZLIB",
                "newPage": false,
                "searchKey": "elf.COMPRESS_ZLIB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const COMPRESS_ZLIB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst COMPRESS_ZLIB CompressionType = 1 /* ZLIB compression. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#COMPRESS_LOOS",
              "documentation": {
                "identifier": "COMPRESS_LOOS",
                "newPage": false,
                "searchKey": "elf.COMPRESS_LOOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const COMPRESS_LOOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst COMPRESS_LOOS CompressionType = 0x60000000 /* First OS-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#COMPRESS_HIOS",
              "documentation": {
                "identifier": "COMPRESS_HIOS",
                "newPage": false,
                "searchKey": "elf.COMPRESS_HIOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const COMPRESS_HIOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst COMPRESS_HIOS CompressionType = 0x6fffffff /* Last OS-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#COMPRESS_LOPROC",
              "documentation": {
                "identifier": "COMPRESS_LOPROC",
                "newPage": false,
                "searchKey": "elf.COMPRESS_LOPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const COMPRESS_LOPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst COMPRESS_LOPROC CompressionType = 0x70000000 /* First processor-specific type. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#COMPRESS_HIPROC",
              "documentation": {
                "identifier": "COMPRESS_HIPROC",
                "newPage": false,
                "searchKey": "elf.COMPRESS_HIPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const COMPRESS_HIPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst COMPRESS_HIPROC CompressionType = 0x7fffffff /* Last processor-specific type. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_NULL",
              "documentation": {
                "identifier": "PT_NULL",
                "newPage": false,
                "searchKey": "elf.PT_NULL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_NULL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_NULL ProgType = 0 /* Unused entry. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_LOAD",
              "documentation": {
                "identifier": "PT_LOAD",
                "newPage": false,
                "searchKey": "elf.PT_LOAD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_LOAD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_LOAD ProgType = 1 /* Loadable segment. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_DYNAMIC",
              "documentation": {
                "identifier": "PT_DYNAMIC",
                "newPage": false,
                "searchKey": "elf.PT_DYNAMIC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_DYNAMIC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_DYNAMIC ProgType = 2 /* Dynamic linking information segment. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_INTERP",
              "documentation": {
                "identifier": "PT_INTERP",
                "newPage": false,
                "searchKey": "elf.PT_INTERP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_INTERP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_INTERP ProgType = 3 /* Pathname of interpreter. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_NOTE",
              "documentation": {
                "identifier": "PT_NOTE",
                "newPage": false,
                "searchKey": "elf.PT_NOTE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_NOTE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_NOTE ProgType = 4 /* Auxiliary information. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_SHLIB",
              "documentation": {
                "identifier": "PT_SHLIB",
                "newPage": false,
                "searchKey": "elf.PT_SHLIB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_SHLIB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_SHLIB ProgType = 5 /* Reserved (not used). */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_PHDR",
              "documentation": {
                "identifier": "PT_PHDR",
                "newPage": false,
                "searchKey": "elf.PT_PHDR",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_PHDR"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_PHDR ProgType = 6 /* Location of program header itself. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_TLS",
              "documentation": {
                "identifier": "PT_TLS",
                "newPage": false,
                "searchKey": "elf.PT_TLS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_TLS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_TLS ProgType = 7 /* Thread local storage segment */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_LOOS",
              "documentation": {
                "identifier": "PT_LOOS",
                "newPage": false,
                "searchKey": "elf.PT_LOOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_LOOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_LOOS ProgType = 0x60000000 /* First OS-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_GNU_EH_FRAME",
              "documentation": {
                "identifier": "PT_GNU_EH_FRAME",
                "newPage": false,
                "searchKey": "elf.PT_GNU_EH_FRAME",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_GNU_EH_FRAME"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_GNU_EH_FRAME ProgType = 0x6474e550 /* Frame unwind information */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_GNU_STACK",
              "documentation": {
                "identifier": "PT_GNU_STACK",
                "newPage": false,
                "searchKey": "elf.PT_GNU_STACK",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_GNU_STACK"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_GNU_STACK ProgType = 0x6474e551 /* Stack flags */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_GNU_RELRO",
              "documentation": {
                "identifier": "PT_GNU_RELRO",
                "newPage": false,
                "searchKey": "elf.PT_GNU_RELRO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_GNU_RELRO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_GNU_RELRO ProgType = 0x6474e552 /* Read only after relocs */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_GNU_PROPERTY",
              "documentation": {
                "identifier": "PT_GNU_PROPERTY",
                "newPage": false,
                "searchKey": "elf.PT_GNU_PROPERTY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_GNU_PROPERTY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_GNU_PROPERTY ProgType = 0x6474e553 /* GNU property */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_GNU_MBIND_LO",
              "documentation": {
                "identifier": "PT_GNU_MBIND_LO",
                "newPage": false,
                "searchKey": "elf.PT_GNU_MBIND_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_GNU_MBIND_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_GNU_MBIND_LO ProgType = 0x6474e555 /* Mbind segments start */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_GNU_MBIND_HI",
              "documentation": {
                "identifier": "PT_GNU_MBIND_HI",
                "newPage": false,
                "searchKey": "elf.PT_GNU_MBIND_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_GNU_MBIND_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_GNU_MBIND_HI ProgType = 0x6474f554 /* Mbind segments finish */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_PAX_FLAGS",
              "documentation": {
                "identifier": "PT_PAX_FLAGS",
                "newPage": false,
                "searchKey": "elf.PT_PAX_FLAGS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_PAX_FLAGS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_PAX_FLAGS ProgType = 0x65041580 /* PAX flags */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_OPENBSD_RANDOMIZE",
              "documentation": {
                "identifier": "PT_OPENBSD_RANDOMIZE",
                "newPage": false,
                "searchKey": "elf.PT_OPENBSD_RANDOMIZE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_OPENBSD_RANDOMIZE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_OPENBSD_RANDOMIZE ProgType = 0x65a3dbe6 /* Random data */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_OPENBSD_WXNEEDED",
              "documentation": {
                "identifier": "PT_OPENBSD_WXNEEDED",
                "newPage": false,
                "searchKey": "elf.PT_OPENBSD_WXNEEDED",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_OPENBSD_WXNEEDED"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_OPENBSD_WXNEEDED ProgType = 0x65a3dbe7 /* W^X violations */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_OPENBSD_BOOTDATA",
              "documentation": {
                "identifier": "PT_OPENBSD_BOOTDATA",
                "newPage": false,
                "searchKey": "elf.PT_OPENBSD_BOOTDATA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_OPENBSD_BOOTDATA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_OPENBSD_BOOTDATA ProgType = 0x65a41be6 /* Boot arguments */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_SUNW_EH_FRAME",
              "documentation": {
                "identifier": "PT_SUNW_EH_FRAME",
                "newPage": false,
                "searchKey": "elf.PT_SUNW_EH_FRAME",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_SUNW_EH_FRAME"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_SUNW_EH_FRAME ProgType = 0x6474e550 /* Frame unwind information */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_SUNWSTACK",
              "documentation": {
                "identifier": "PT_SUNWSTACK",
                "newPage": false,
                "searchKey": "elf.PT_SUNWSTACK",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_SUNWSTACK"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_SUNWSTACK ProgType = 0x6ffffffb /* Stack segment */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_HIOS",
              "documentation": {
                "identifier": "PT_HIOS",
                "newPage": false,
                "searchKey": "elf.PT_HIOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_HIOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_HIOS ProgType = 0x6fffffff /* Last OS-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_LOPROC",
              "documentation": {
                "identifier": "PT_LOPROC",
                "newPage": false,
                "searchKey": "elf.PT_LOPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_LOPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_LOPROC ProgType = 0x70000000 /* First processor-specific type. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_ARM_ARCHEXT",
              "documentation": {
                "identifier": "PT_ARM_ARCHEXT",
                "newPage": false,
                "searchKey": "elf.PT_ARM_ARCHEXT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_ARM_ARCHEXT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_ARM_ARCHEXT ProgType = 0x70000000 /* Architecture compatibility */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_ARM_EXIDX",
              "documentation": {
                "identifier": "PT_ARM_EXIDX",
                "newPage": false,
                "searchKey": "elf.PT_ARM_EXIDX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_ARM_EXIDX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_ARM_EXIDX ProgType = 0x70000001 /* Exception unwind tables */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_AARCH64_ARCHEXT",
              "documentation": {
                "identifier": "PT_AARCH64_ARCHEXT",
                "newPage": false,
                "searchKey": "elf.PT_AARCH64_ARCHEXT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_AARCH64_ARCHEXT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_AARCH64_ARCHEXT ProgType = 0x70000000 /* Architecture compatibility */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_AARCH64_UNWIND",
              "documentation": {
                "identifier": "PT_AARCH64_UNWIND",
                "newPage": false,
                "searchKey": "elf.PT_AARCH64_UNWIND",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_AARCH64_UNWIND"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_AARCH64_UNWIND ProgType = 0x70000001 /* Exception unwind tables */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_MIPS_REGINFO",
              "documentation": {
                "identifier": "PT_MIPS_REGINFO",
                "newPage": false,
                "searchKey": "elf.PT_MIPS_REGINFO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_MIPS_REGINFO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_MIPS_REGINFO ProgType = 0x70000000 /* Register usage */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_MIPS_RTPROC",
              "documentation": {
                "identifier": "PT_MIPS_RTPROC",
                "newPage": false,
                "searchKey": "elf.PT_MIPS_RTPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_MIPS_RTPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_MIPS_RTPROC ProgType = 0x70000001 /* Runtime procedures */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_MIPS_OPTIONS",
              "documentation": {
                "identifier": "PT_MIPS_OPTIONS",
                "newPage": false,
                "searchKey": "elf.PT_MIPS_OPTIONS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_MIPS_OPTIONS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_MIPS_OPTIONS ProgType = 0x70000002 /* Options */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_MIPS_ABIFLAGS",
              "documentation": {
                "identifier": "PT_MIPS_ABIFLAGS",
                "newPage": false,
                "searchKey": "elf.PT_MIPS_ABIFLAGS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_MIPS_ABIFLAGS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_MIPS_ABIFLAGS ProgType = 0x70000003 /* ABI flags */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_S390_PGSTE",
              "documentation": {
                "identifier": "PT_S390_PGSTE",
                "newPage": false,
                "searchKey": "elf.PT_S390_PGSTE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_S390_PGSTE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_S390_PGSTE ProgType = 0x70000000 /* 4k page table size */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PT_HIPROC",
              "documentation": {
                "identifier": "PT_HIPROC",
                "newPage": false,
                "searchKey": "elf.PT_HIPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PT_HIPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PT_HIPROC ProgType = 0x7fffffff /* Last processor-specific type. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PF_X",
              "documentation": {
                "identifier": "PF_X",
                "newPage": false,
                "searchKey": "elf.PF_X",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PF_X"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PF_X ProgFlag = 0x1 /* Executable. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PF_W",
              "documentation": {
                "identifier": "PF_W",
                "newPage": false,
                "searchKey": "elf.PF_W",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PF_W"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PF_W ProgFlag = 0x2 /* Writable. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PF_R",
              "documentation": {
                "identifier": "PF_R",
                "newPage": false,
                "searchKey": "elf.PF_R",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PF_R"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PF_R ProgFlag = 0x4 /* Readable. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PF_MASKOS",
              "documentation": {
                "identifier": "PF_MASKOS",
                "newPage": false,
                "searchKey": "elf.PF_MASKOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PF_MASKOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PF_MASKOS ProgFlag = 0x0ff00000 /* Operating system-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#PF_MASKPROC",
              "documentation": {
                "identifier": "PF_MASKPROC",
                "newPage": false,
                "searchKey": "elf.PF_MASKPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const PF_MASKPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst PF_MASKPROC ProgFlag = 0xf0000000 /* Processor-specific. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_NULL",
              "documentation": {
                "identifier": "DT_NULL",
                "newPage": false,
                "searchKey": "elf.DT_NULL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_NULL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_NULL DynTag = 0 /* Terminating entry. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_NEEDED",
              "documentation": {
                "identifier": "DT_NEEDED",
                "newPage": false,
                "searchKey": "elf.DT_NEEDED",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_NEEDED"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_NEEDED DynTag = 1 /* String table offset of a needed shared library. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PLTRELSZ",
              "documentation": {
                "identifier": "DT_PLTRELSZ",
                "newPage": false,
                "searchKey": "elf.DT_PLTRELSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PLTRELSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PLTRELSZ DynTag = 2 /* Total size in bytes of PLT relocations. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PLTGOT",
              "documentation": {
                "identifier": "DT_PLTGOT",
                "newPage": false,
                "searchKey": "elf.DT_PLTGOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PLTGOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PLTGOT DynTag = 3 /* Processor-dependent address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_HASH",
              "documentation": {
                "identifier": "DT_HASH",
                "newPage": false,
                "searchKey": "elf.DT_HASH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_HASH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_HASH DynTag = 4 /* Address of symbol hash table. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_STRTAB",
              "documentation": {
                "identifier": "DT_STRTAB",
                "newPage": false,
                "searchKey": "elf.DT_STRTAB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_STRTAB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_STRTAB DynTag = 5 /* Address of string table. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_SYMTAB",
              "documentation": {
                "identifier": "DT_SYMTAB",
                "newPage": false,
                "searchKey": "elf.DT_SYMTAB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_SYMTAB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_SYMTAB DynTag = 6 /* Address of symbol table. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_RELA",
              "documentation": {
                "identifier": "DT_RELA",
                "newPage": false,
                "searchKey": "elf.DT_RELA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_RELA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_RELA DynTag = 7 /* Address of ElfNN_Rela relocations. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_RELASZ",
              "documentation": {
                "identifier": "DT_RELASZ",
                "newPage": false,
                "searchKey": "elf.DT_RELASZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_RELASZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_RELASZ DynTag = 8 /* Total size of ElfNN_Rela relocations. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_RELAENT",
              "documentation": {
                "identifier": "DT_RELAENT",
                "newPage": false,
                "searchKey": "elf.DT_RELAENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_RELAENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_RELAENT DynTag = 9 /* Size of each ElfNN_Rela relocation entry. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_STRSZ",
              "documentation": {
                "identifier": "DT_STRSZ",
                "newPage": false,
                "searchKey": "elf.DT_STRSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_STRSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_STRSZ DynTag = 10 /* Size of string table. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_SYMENT",
              "documentation": {
                "identifier": "DT_SYMENT",
                "newPage": false,
                "searchKey": "elf.DT_SYMENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_SYMENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_SYMENT DynTag = 11 /* Size of each symbol table entry. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_INIT",
              "documentation": {
                "identifier": "DT_INIT",
                "newPage": false,
                "searchKey": "elf.DT_INIT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_INIT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_INIT DynTag = 12 /* Address of initialization function. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_FINI",
              "documentation": {
                "identifier": "DT_FINI",
                "newPage": false,
                "searchKey": "elf.DT_FINI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_FINI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_FINI DynTag = 13 /* Address of finalization function. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_SONAME",
              "documentation": {
                "identifier": "DT_SONAME",
                "newPage": false,
                "searchKey": "elf.DT_SONAME",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_SONAME"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_SONAME DynTag = 14 /* String table offset of shared object name. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_RPATH",
              "documentation": {
                "identifier": "DT_RPATH",
                "newPage": false,
                "searchKey": "elf.DT_RPATH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_RPATH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_RPATH DynTag = 15 /* String table offset of library path. [sup] */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_SYMBOLIC",
              "documentation": {
                "identifier": "DT_SYMBOLIC",
                "newPage": false,
                "searchKey": "elf.DT_SYMBOLIC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_SYMBOLIC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_SYMBOLIC DynTag = 16 /* Indicates \"symbolic\" linking. [sup] */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_REL",
              "documentation": {
                "identifier": "DT_REL",
                "newPage": false,
                "searchKey": "elf.DT_REL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_REL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_REL DynTag = 17 /* Address of ElfNN_Rel relocations. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_RELSZ",
              "documentation": {
                "identifier": "DT_RELSZ",
                "newPage": false,
                "searchKey": "elf.DT_RELSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_RELSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_RELSZ DynTag = 18 /* Total size of ElfNN_Rel relocations. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_RELENT",
              "documentation": {
                "identifier": "DT_RELENT",
                "newPage": false,
                "searchKey": "elf.DT_RELENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_RELENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_RELENT DynTag = 19 /* Size of each ElfNN_Rel relocation. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PLTREL",
              "documentation": {
                "identifier": "DT_PLTREL",
                "newPage": false,
                "searchKey": "elf.DT_PLTREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PLTREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PLTREL DynTag = 20 /* Type of relocation used for PLT. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_DEBUG",
              "documentation": {
                "identifier": "DT_DEBUG",
                "newPage": false,
                "searchKey": "elf.DT_DEBUG",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_DEBUG"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_DEBUG DynTag = 21 /* Reserved (not used). */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_TEXTREL",
              "documentation": {
                "identifier": "DT_TEXTREL",
                "newPage": false,
                "searchKey": "elf.DT_TEXTREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_TEXTREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_TEXTREL DynTag /* Indicates there may be relocations in non-writable segments. [sup] */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_JMPREL",
              "documentation": {
                "identifier": "DT_JMPREL",
                "newPage": false,
                "searchKey": "elf.DT_JMPREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_JMPREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_JMPREL DynTag = 23 /* Address of PLT relocations. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_BIND_NOW",
              "documentation": {
                "identifier": "DT_BIND_NOW",
                "newPage": false,
                "searchKey": "elf.DT_BIND_NOW",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_BIND_NOW"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_BIND_NOW DynTag = 24 /* [sup] */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_INIT_ARRAY",
              "documentation": {
                "identifier": "DT_INIT_ARRAY",
                "newPage": false,
                "searchKey": "elf.DT_INIT_ARRAY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_INIT_ARRAY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_INIT_ARRAY DynTag = 25 /* Address of the array of pointers to initialization functions */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_FINI_ARRAY",
              "documentation": {
                "identifier": "DT_FINI_ARRAY",
                "newPage": false,
                "searchKey": "elf.DT_FINI_ARRAY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_FINI_ARRAY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_FINI_ARRAY DynTag = 26 /* Address of the array of pointers to termination functions */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_INIT_ARRAYSZ",
              "documentation": {
                "identifier": "DT_INIT_ARRAYSZ",
                "newPage": false,
                "searchKey": "elf.DT_INIT_ARRAYSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_INIT_ARRAYSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_INIT_ARRAYSZ DynTag = 27 /* Size in bytes of the array of initialization functions. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_FINI_ARRAYSZ",
              "documentation": {
                "identifier": "DT_FINI_ARRAYSZ",
                "newPage": false,
                "searchKey": "elf.DT_FINI_ARRAYSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_FINI_ARRAYSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_FINI_ARRAYSZ DynTag = 28 /* Size in bytes of the array of termination functions. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_RUNPATH",
              "documentation": {
                "identifier": "DT_RUNPATH",
                "newPage": false,
                "searchKey": "elf.DT_RUNPATH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_RUNPATH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_RUNPATH DynTag /* String table offset of a null-terminated library search path string. */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_FLAGS",
              "documentation": {
                "identifier": "DT_FLAGS",
                "newPage": false,
                "searchKey": "elf.DT_FLAGS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_FLAGS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_FLAGS DynTag = 30 /* Object specific flag values. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_ENCODING",
              "documentation": {
                "identifier": "DT_ENCODING",
                "newPage": false,
                "searchKey": "elf.DT_ENCODING",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_ENCODING"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_ENCODING DynTag /* Values greater than or equal to DT_ENCODING\n   and less than DT_LOOS follow the rules for\n   the interpretation of the d_un union\n   as follows: even == 'd_ptr', even == 'd_val'\n   or none */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PREINIT_ARRAY",
              "documentation": {
                "identifier": "DT_PREINIT_ARRAY",
                "newPage": false,
                "searchKey": "elf.DT_PREINIT_ARRAY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PREINIT_ARRAY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PREINIT_ARRAY DynTag /* Address of the array of pointers to pre-initialization functions. */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PREINIT_ARRAYSZ",
              "documentation": {
                "identifier": "DT_PREINIT_ARRAYSZ",
                "newPage": false,
                "searchKey": "elf.DT_PREINIT_ARRAYSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PREINIT_ARRAYSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PREINIT_ARRAYSZ DynTag /* Size in bytes of the array of pre-initialization functions. */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_SYMTAB_SHNDX",
              "documentation": {
                "identifier": "DT_SYMTAB_SHNDX",
                "newPage": false,
                "searchKey": "elf.DT_SYMTAB_SHNDX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_SYMTAB_SHNDX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_SYMTAB_SHNDX DynTag = 34 /* Address of SHT_SYMTAB_SHNDX section. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_LOOS",
              "documentation": {
                "identifier": "DT_LOOS",
                "newPage": false,
                "searchKey": "elf.DT_LOOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_LOOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_LOOS DynTag = 0x6000000d /* First OS-specific */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_HIOS",
              "documentation": {
                "identifier": "DT_HIOS",
                "newPage": false,
                "searchKey": "elf.DT_HIOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_HIOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_HIOS DynTag = 0x6ffff000 /* Last OS-specific */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_VALRNGLO",
              "documentation": {
                "identifier": "DT_VALRNGLO",
                "newPage": false,
                "searchKey": "elf.DT_VALRNGLO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_VALRNGLO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_VALRNGLO DynTag = 0x6ffffd00\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_GNU_PRELINKED",
              "documentation": {
                "identifier": "DT_GNU_PRELINKED",
                "newPage": false,
                "searchKey": "elf.DT_GNU_PRELINKED",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_GNU_PRELINKED"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_GNU_PRELINKED DynTag = 0x6ffffdf5\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_GNU_CONFLICTSZ",
              "documentation": {
                "identifier": "DT_GNU_CONFLICTSZ",
                "newPage": false,
                "searchKey": "elf.DT_GNU_CONFLICTSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_GNU_CONFLICTSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_GNU_CONFLICTSZ DynTag = 0x6ffffdf6\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_GNU_LIBLISTSZ",
              "documentation": {
                "identifier": "DT_GNU_LIBLISTSZ",
                "newPage": false,
                "searchKey": "elf.DT_GNU_LIBLISTSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_GNU_LIBLISTSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_GNU_LIBLISTSZ DynTag = 0x6ffffdf7\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_CHECKSUM",
              "documentation": {
                "identifier": "DT_CHECKSUM",
                "newPage": false,
                "searchKey": "elf.DT_CHECKSUM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_CHECKSUM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_CHECKSUM DynTag = 0x6ffffdf8\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PLTPADSZ",
              "documentation": {
                "identifier": "DT_PLTPADSZ",
                "newPage": false,
                "searchKey": "elf.DT_PLTPADSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PLTPADSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PLTPADSZ DynTag = 0x6ffffdf9\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MOVEENT",
              "documentation": {
                "identifier": "DT_MOVEENT",
                "newPage": false,
                "searchKey": "elf.DT_MOVEENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MOVEENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MOVEENT DynTag = 0x6ffffdfa\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MOVESZ",
              "documentation": {
                "identifier": "DT_MOVESZ",
                "newPage": false,
                "searchKey": "elf.DT_MOVESZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MOVESZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MOVESZ DynTag = 0x6ffffdfb\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_FEATURE",
              "documentation": {
                "identifier": "DT_FEATURE",
                "newPage": false,
                "searchKey": "elf.DT_FEATURE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_FEATURE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_FEATURE DynTag = 0x6ffffdfc\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_POSFLAG_1",
              "documentation": {
                "identifier": "DT_POSFLAG_1",
                "newPage": false,
                "searchKey": "elf.DT_POSFLAG_1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_POSFLAG_1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_POSFLAG_1 DynTag = 0x6ffffdfd\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_SYMINSZ",
              "documentation": {
                "identifier": "DT_SYMINSZ",
                "newPage": false,
                "searchKey": "elf.DT_SYMINSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_SYMINSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_SYMINSZ DynTag = 0x6ffffdfe\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_SYMINENT",
              "documentation": {
                "identifier": "DT_SYMINENT",
                "newPage": false,
                "searchKey": "elf.DT_SYMINENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_SYMINENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_SYMINENT DynTag = 0x6ffffdff\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_VALRNGHI",
              "documentation": {
                "identifier": "DT_VALRNGHI",
                "newPage": false,
                "searchKey": "elf.DT_VALRNGHI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_VALRNGHI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_VALRNGHI DynTag = 0x6ffffdff\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_ADDRRNGLO",
              "documentation": {
                "identifier": "DT_ADDRRNGLO",
                "newPage": false,
                "searchKey": "elf.DT_ADDRRNGLO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_ADDRRNGLO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_ADDRRNGLO DynTag = 0x6ffffe00\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_GNU_HASH",
              "documentation": {
                "identifier": "DT_GNU_HASH",
                "newPage": false,
                "searchKey": "elf.DT_GNU_HASH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_GNU_HASH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_GNU_HASH DynTag = 0x6ffffef5\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_TLSDESC_PLT",
              "documentation": {
                "identifier": "DT_TLSDESC_PLT",
                "newPage": false,
                "searchKey": "elf.DT_TLSDESC_PLT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_TLSDESC_PLT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_TLSDESC_PLT DynTag = 0x6ffffef6\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_TLSDESC_GOT",
              "documentation": {
                "identifier": "DT_TLSDESC_GOT",
                "newPage": false,
                "searchKey": "elf.DT_TLSDESC_GOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_TLSDESC_GOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_TLSDESC_GOT DynTag = 0x6ffffef7\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_GNU_CONFLICT",
              "documentation": {
                "identifier": "DT_GNU_CONFLICT",
                "newPage": false,
                "searchKey": "elf.DT_GNU_CONFLICT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_GNU_CONFLICT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_GNU_CONFLICT DynTag = 0x6ffffef8\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_GNU_LIBLIST",
              "documentation": {
                "identifier": "DT_GNU_LIBLIST",
                "newPage": false,
                "searchKey": "elf.DT_GNU_LIBLIST",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_GNU_LIBLIST"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_GNU_LIBLIST DynTag = 0x6ffffef9\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_CONFIG",
              "documentation": {
                "identifier": "DT_CONFIG",
                "newPage": false,
                "searchKey": "elf.DT_CONFIG",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_CONFIG"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_CONFIG DynTag = 0x6ffffefa\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_DEPAUDIT",
              "documentation": {
                "identifier": "DT_DEPAUDIT",
                "newPage": false,
                "searchKey": "elf.DT_DEPAUDIT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_DEPAUDIT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_DEPAUDIT DynTag = 0x6ffffefb\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_AUDIT",
              "documentation": {
                "identifier": "DT_AUDIT",
                "newPage": false,
                "searchKey": "elf.DT_AUDIT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_AUDIT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_AUDIT DynTag = 0x6ffffefc\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PLTPAD",
              "documentation": {
                "identifier": "DT_PLTPAD",
                "newPage": false,
                "searchKey": "elf.DT_PLTPAD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PLTPAD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PLTPAD DynTag = 0x6ffffefd\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MOVETAB",
              "documentation": {
                "identifier": "DT_MOVETAB",
                "newPage": false,
                "searchKey": "elf.DT_MOVETAB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MOVETAB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MOVETAB DynTag = 0x6ffffefe\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_SYMINFO",
              "documentation": {
                "identifier": "DT_SYMINFO",
                "newPage": false,
                "searchKey": "elf.DT_SYMINFO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_SYMINFO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_SYMINFO DynTag = 0x6ffffeff\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_ADDRRNGHI",
              "documentation": {
                "identifier": "DT_ADDRRNGHI",
                "newPage": false,
                "searchKey": "elf.DT_ADDRRNGHI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_ADDRRNGHI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_ADDRRNGHI DynTag = 0x6ffffeff\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_VERSYM",
              "documentation": {
                "identifier": "DT_VERSYM",
                "newPage": false,
                "searchKey": "elf.DT_VERSYM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_VERSYM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_VERSYM DynTag = 0x6ffffff0\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_RELACOUNT",
              "documentation": {
                "identifier": "DT_RELACOUNT",
                "newPage": false,
                "searchKey": "elf.DT_RELACOUNT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_RELACOUNT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_RELACOUNT DynTag = 0x6ffffff9\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_RELCOUNT",
              "documentation": {
                "identifier": "DT_RELCOUNT",
                "newPage": false,
                "searchKey": "elf.DT_RELCOUNT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_RELCOUNT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_RELCOUNT DynTag = 0x6ffffffa\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_FLAGS_1",
              "documentation": {
                "identifier": "DT_FLAGS_1",
                "newPage": false,
                "searchKey": "elf.DT_FLAGS_1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_FLAGS_1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_FLAGS_1 DynTag = 0x6ffffffb\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_VERDEF",
              "documentation": {
                "identifier": "DT_VERDEF",
                "newPage": false,
                "searchKey": "elf.DT_VERDEF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_VERDEF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_VERDEF DynTag = 0x6ffffffc\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_VERDEFNUM",
              "documentation": {
                "identifier": "DT_VERDEFNUM",
                "newPage": false,
                "searchKey": "elf.DT_VERDEFNUM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_VERDEFNUM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_VERDEFNUM DynTag = 0x6ffffffd\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_VERNEED",
              "documentation": {
                "identifier": "DT_VERNEED",
                "newPage": false,
                "searchKey": "elf.DT_VERNEED",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_VERNEED"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_VERNEED DynTag = 0x6ffffffe\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_VERNEEDNUM",
              "documentation": {
                "identifier": "DT_VERNEEDNUM",
                "newPage": false,
                "searchKey": "elf.DT_VERNEEDNUM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_VERNEEDNUM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_VERNEEDNUM DynTag = 0x6fffffff\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_LOPROC",
              "documentation": {
                "identifier": "DT_LOPROC",
                "newPage": false,
                "searchKey": "elf.DT_LOPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_LOPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_LOPROC DynTag = 0x70000000 /* First processor-specific type. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_RLD_VERSION",
              "documentation": {
                "identifier": "DT_MIPS_RLD_VERSION",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_RLD_VERSION",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_RLD_VERSION"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_RLD_VERSION DynTag = 0x70000001\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_TIME_STAMP",
              "documentation": {
                "identifier": "DT_MIPS_TIME_STAMP",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_TIME_STAMP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_TIME_STAMP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_TIME_STAMP DynTag = 0x70000002\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_ICHECKSUM",
              "documentation": {
                "identifier": "DT_MIPS_ICHECKSUM",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_ICHECKSUM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_ICHECKSUM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_ICHECKSUM DynTag = 0x70000003\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_IVERSION",
              "documentation": {
                "identifier": "DT_MIPS_IVERSION",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_IVERSION",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_IVERSION"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_IVERSION DynTag = 0x70000004\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_FLAGS",
              "documentation": {
                "identifier": "DT_MIPS_FLAGS",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_FLAGS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_FLAGS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_FLAGS DynTag = 0x70000005\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_BASE_ADDRESS",
              "documentation": {
                "identifier": "DT_MIPS_BASE_ADDRESS",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_BASE_ADDRESS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_BASE_ADDRESS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_BASE_ADDRESS DynTag = 0x70000006\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_MSYM",
              "documentation": {
                "identifier": "DT_MIPS_MSYM",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_MSYM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_MSYM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_MSYM DynTag = 0x70000007\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_CONFLICT",
              "documentation": {
                "identifier": "DT_MIPS_CONFLICT",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_CONFLICT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_CONFLICT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_CONFLICT DynTag = 0x70000008\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_LIBLIST",
              "documentation": {
                "identifier": "DT_MIPS_LIBLIST",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_LIBLIST",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_LIBLIST"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_LIBLIST DynTag = 0x70000009\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_LOCAL_GOTNO",
              "documentation": {
                "identifier": "DT_MIPS_LOCAL_GOTNO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_LOCAL_GOTNO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_LOCAL_GOTNO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_LOCAL_GOTNO DynTag = 0x7000000a\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_CONFLICTNO",
              "documentation": {
                "identifier": "DT_MIPS_CONFLICTNO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_CONFLICTNO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_CONFLICTNO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_CONFLICTNO DynTag = 0x7000000b\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_LIBLISTNO",
              "documentation": {
                "identifier": "DT_MIPS_LIBLISTNO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_LIBLISTNO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_LIBLISTNO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_LIBLISTNO DynTag = 0x70000010\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_SYMTABNO",
              "documentation": {
                "identifier": "DT_MIPS_SYMTABNO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_SYMTABNO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_SYMTABNO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_SYMTABNO DynTag = 0x70000011\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_UNREFEXTNO",
              "documentation": {
                "identifier": "DT_MIPS_UNREFEXTNO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_UNREFEXTNO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_UNREFEXTNO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_UNREFEXTNO DynTag = 0x70000012\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_GOTSYM",
              "documentation": {
                "identifier": "DT_MIPS_GOTSYM",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_GOTSYM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_GOTSYM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_GOTSYM DynTag = 0x70000013\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_HIPAGENO",
              "documentation": {
                "identifier": "DT_MIPS_HIPAGENO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_HIPAGENO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_HIPAGENO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_HIPAGENO DynTag = 0x70000014\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_RLD_MAP",
              "documentation": {
                "identifier": "DT_MIPS_RLD_MAP",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_RLD_MAP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_RLD_MAP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_RLD_MAP DynTag = 0x70000016\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_CLASS",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_CLASS",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_CLASS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_CLASS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_CLASS DynTag = 0x70000017\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_CLASS_NO",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_CLASS_NO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_CLASS_NO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_CLASS_NO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_CLASS_NO DynTag = 0x70000018\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_INSTANCE",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_INSTANCE",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_INSTANCE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_INSTANCE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_INSTANCE DynTag = 0x70000019\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_INSTANCE_NO",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_INSTANCE_NO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_INSTANCE_NO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_INSTANCE_NO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_INSTANCE_NO DynTag = 0x7000001a\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_RELOC",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_RELOC",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_RELOC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_RELOC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_RELOC DynTag = 0x7000001b\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_RELOC_NO",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_RELOC_NO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_RELOC_NO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_RELOC_NO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_RELOC_NO DynTag = 0x7000001c\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_SYM",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_SYM",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_SYM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_SYM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_SYM DynTag = 0x7000001d\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_SYM_NO",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_SYM_NO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_SYM_NO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_SYM_NO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_SYM_NO DynTag = 0x7000001e\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_CLASSSYM",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_CLASSSYM",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_CLASSSYM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_CLASSSYM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_CLASSSYM DynTag = 0x70000020\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DELTA_CLASSSYM_NO",
              "documentation": {
                "identifier": "DT_MIPS_DELTA_CLASSSYM_NO",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DELTA_CLASSSYM_NO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DELTA_CLASSSYM_NO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DELTA_CLASSSYM_NO DynTag = 0x70000021\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_CXX_FLAGS",
              "documentation": {
                "identifier": "DT_MIPS_CXX_FLAGS",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_CXX_FLAGS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_CXX_FLAGS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_CXX_FLAGS DynTag = 0x70000022\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_PIXIE_INIT",
              "documentation": {
                "identifier": "DT_MIPS_PIXIE_INIT",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_PIXIE_INIT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_PIXIE_INIT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_PIXIE_INIT DynTag = 0x70000023\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_SYMBOL_LIB",
              "documentation": {
                "identifier": "DT_MIPS_SYMBOL_LIB",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_SYMBOL_LIB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_SYMBOL_LIB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_SYMBOL_LIB DynTag = 0x70000024\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_LOCALPAGE_GOTIDX",
              "documentation": {
                "identifier": "DT_MIPS_LOCALPAGE_GOTIDX",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_LOCALPAGE_GOTIDX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_LOCALPAGE_GOTIDX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_LOCALPAGE_GOTIDX DynTag = 0x70000025\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_LOCAL_GOTIDX",
              "documentation": {
                "identifier": "DT_MIPS_LOCAL_GOTIDX",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_LOCAL_GOTIDX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_LOCAL_GOTIDX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_LOCAL_GOTIDX DynTag = 0x70000026\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_HIDDEN_GOTIDX",
              "documentation": {
                "identifier": "DT_MIPS_HIDDEN_GOTIDX",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_HIDDEN_GOTIDX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_HIDDEN_GOTIDX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_HIDDEN_GOTIDX DynTag = 0x70000027\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_PROTECTED_GOTIDX",
              "documentation": {
                "identifier": "DT_MIPS_PROTECTED_GOTIDX",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_PROTECTED_GOTIDX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_PROTECTED_GOTIDX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_PROTECTED_GOTIDX DynTag = 0x70000028\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_OPTIONS",
              "documentation": {
                "identifier": "DT_MIPS_OPTIONS",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_OPTIONS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_OPTIONS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_OPTIONS DynTag = 0x70000029\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_INTERFACE",
              "documentation": {
                "identifier": "DT_MIPS_INTERFACE",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_INTERFACE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_INTERFACE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_INTERFACE DynTag = 0x7000002a\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_DYNSTR_ALIGN",
              "documentation": {
                "identifier": "DT_MIPS_DYNSTR_ALIGN",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_DYNSTR_ALIGN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_DYNSTR_ALIGN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_DYNSTR_ALIGN DynTag = 0x7000002b\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_INTERFACE_SIZE",
              "documentation": {
                "identifier": "DT_MIPS_INTERFACE_SIZE",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_INTERFACE_SIZE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_INTERFACE_SIZE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_INTERFACE_SIZE DynTag = 0x7000002c\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_RLD_TEXT_RESOLVE_ADDR",
              "documentation": {
                "identifier": "DT_MIPS_RLD_TEXT_RESOLVE_ADDR",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_RLD_TEXT_RESOLVE_ADDR",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_RLD_TEXT_RESOLVE_ADDR"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_RLD_TEXT_RESOLVE_ADDR DynTag = 0x7000002d\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_PERF_SUFFIX",
              "documentation": {
                "identifier": "DT_MIPS_PERF_SUFFIX",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_PERF_SUFFIX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_PERF_SUFFIX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_PERF_SUFFIX DynTag = 0x7000002e\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_COMPACT_SIZE",
              "documentation": {
                "identifier": "DT_MIPS_COMPACT_SIZE",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_COMPACT_SIZE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_COMPACT_SIZE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_COMPACT_SIZE DynTag = 0x7000002f\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_GP_VALUE",
              "documentation": {
                "identifier": "DT_MIPS_GP_VALUE",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_GP_VALUE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_GP_VALUE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_GP_VALUE DynTag = 0x70000030\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_AUX_DYNAMIC",
              "documentation": {
                "identifier": "DT_MIPS_AUX_DYNAMIC",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_AUX_DYNAMIC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_AUX_DYNAMIC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_AUX_DYNAMIC DynTag = 0x70000031\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_PLTGOT",
              "documentation": {
                "identifier": "DT_MIPS_PLTGOT",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_PLTGOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_PLTGOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_PLTGOT DynTag = 0x70000032\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_RWPLT",
              "documentation": {
                "identifier": "DT_MIPS_RWPLT",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_RWPLT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_RWPLT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_RWPLT DynTag = 0x70000034\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_MIPS_RLD_MAP_REL",
              "documentation": {
                "identifier": "DT_MIPS_RLD_MAP_REL",
                "newPage": false,
                "searchKey": "elf.DT_MIPS_RLD_MAP_REL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_MIPS_RLD_MAP_REL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_MIPS_RLD_MAP_REL DynTag = 0x70000035\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PPC_GOT",
              "documentation": {
                "identifier": "DT_PPC_GOT",
                "newPage": false,
                "searchKey": "elf.DT_PPC_GOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PPC_GOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PPC_GOT DynTag = 0x70000000\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PPC_OPT",
              "documentation": {
                "identifier": "DT_PPC_OPT",
                "newPage": false,
                "searchKey": "elf.DT_PPC_OPT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PPC_OPT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PPC_OPT DynTag = 0x70000001\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PPC64_GLINK",
              "documentation": {
                "identifier": "DT_PPC64_GLINK",
                "newPage": false,
                "searchKey": "elf.DT_PPC64_GLINK",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PPC64_GLINK"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PPC64_GLINK DynTag = 0x70000000\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PPC64_OPD",
              "documentation": {
                "identifier": "DT_PPC64_OPD",
                "newPage": false,
                "searchKey": "elf.DT_PPC64_OPD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PPC64_OPD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PPC64_OPD DynTag = 0x70000001\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PPC64_OPDSZ",
              "documentation": {
                "identifier": "DT_PPC64_OPDSZ",
                "newPage": false,
                "searchKey": "elf.DT_PPC64_OPDSZ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PPC64_OPDSZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PPC64_OPDSZ DynTag = 0x70000002\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_PPC64_OPT",
              "documentation": {
                "identifier": "DT_PPC64_OPT",
                "newPage": false,
                "searchKey": "elf.DT_PPC64_OPT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_PPC64_OPT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_PPC64_OPT DynTag = 0x70000003\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_SPARC_REGISTER",
              "documentation": {
                "identifier": "DT_SPARC_REGISTER",
                "newPage": false,
                "searchKey": "elf.DT_SPARC_REGISTER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_SPARC_REGISTER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_SPARC_REGISTER DynTag = 0x70000001\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_AUXILIARY",
              "documentation": {
                "identifier": "DT_AUXILIARY",
                "newPage": false,
                "searchKey": "elf.DT_AUXILIARY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_AUXILIARY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_AUXILIARY DynTag = 0x7ffffffd\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_USED",
              "documentation": {
                "identifier": "DT_USED",
                "newPage": false,
                "searchKey": "elf.DT_USED",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_USED"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_USED DynTag = 0x7ffffffe\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_FILTER",
              "documentation": {
                "identifier": "DT_FILTER",
                "newPage": false,
                "searchKey": "elf.DT_FILTER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_FILTER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_FILTER DynTag = 0x7fffffff\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DT_HIPROC",
              "documentation": {
                "identifier": "DT_HIPROC",
                "newPage": false,
                "searchKey": "elf.DT_HIPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DT_HIPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DT_HIPROC DynTag = 0x7fffffff /* Last processor-specific type. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DF_ORIGIN",
              "documentation": {
                "identifier": "DF_ORIGIN",
                "newPage": false,
                "searchKey": "elf.DF_ORIGIN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DF_ORIGIN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DF_ORIGIN DynFlag /* Indicates that the object being loaded may\n   make reference to the\n   $ORIGIN substitution string */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DF_SYMBOLIC",
              "documentation": {
                "identifier": "DF_SYMBOLIC",
                "newPage": false,
                "searchKey": "elf.DF_SYMBOLIC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DF_SYMBOLIC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DF_SYMBOLIC DynFlag = 0x0002 /* Indicates \"symbolic\" linking. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DF_TEXTREL",
              "documentation": {
                "identifier": "DF_TEXTREL",
                "newPage": false,
                "searchKey": "elf.DF_TEXTREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DF_TEXTREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DF_TEXTREL DynFlag /* Indicates there may be relocations in non-writable segments. */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DF_BIND_NOW",
              "documentation": {
                "identifier": "DF_BIND_NOW",
                "newPage": false,
                "searchKey": "elf.DF_BIND_NOW",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DF_BIND_NOW"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DF_BIND_NOW DynFlag /* Indicates that the dynamic linker should\n   process all relocations for the object\n   containing this entry before transferring\n   control to the program. */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DF_STATIC_TLS",
              "documentation": {
                "identifier": "DF_STATIC_TLS",
                "newPage": false,
                "searchKey": "elf.DF_STATIC_TLS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const DF_STATIC_TLS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst DF_STATIC_TLS DynFlag /* Indicates that the shared object or\n   executable contains code using a static\n   thread-local storage scheme. */\n = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#NT_PRSTATUS",
              "documentation": {
                "identifier": "NT_PRSTATUS",
                "newPage": false,
                "searchKey": "elf.NT_PRSTATUS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const NT_PRSTATUS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst NT_PRSTATUS NType = 1 /* Process status. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#NT_FPREGSET",
              "documentation": {
                "identifier": "NT_FPREGSET",
                "newPage": false,
                "searchKey": "elf.NT_FPREGSET",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const NT_FPREGSET"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst NT_FPREGSET NType = 2 /* Floating point registers. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#NT_PRPSINFO",
              "documentation": {
                "identifier": "NT_PRPSINFO",
                "newPage": false,
                "searchKey": "elf.NT_PRPSINFO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const NT_PRPSINFO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst NT_PRPSINFO NType = 3 /* Process state info. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STB_LOCAL",
              "documentation": {
                "identifier": "STB_LOCAL",
                "newPage": false,
                "searchKey": "elf.STB_LOCAL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STB_LOCAL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STB_LOCAL SymBind = 0 /* Local symbol */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STB_GLOBAL",
              "documentation": {
                "identifier": "STB_GLOBAL",
                "newPage": false,
                "searchKey": "elf.STB_GLOBAL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STB_GLOBAL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STB_GLOBAL SymBind = 1 /* Global symbol */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STB_WEAK",
              "documentation": {
                "identifier": "STB_WEAK",
                "newPage": false,
                "searchKey": "elf.STB_WEAK",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STB_WEAK"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STB_WEAK SymBind = 2 /* like global - lower precedence */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STB_LOOS",
              "documentation": {
                "identifier": "STB_LOOS",
                "newPage": false,
                "searchKey": "elf.STB_LOOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STB_LOOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STB_LOOS SymBind = 10 /* Reserved range for operating system */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STB_HIOS",
              "documentation": {
                "identifier": "STB_HIOS",
                "newPage": false,
                "searchKey": "elf.STB_HIOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STB_HIOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STB_HIOS SymBind = 12 /*   specific semantics. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STB_LOPROC",
              "documentation": {
                "identifier": "STB_LOPROC",
                "newPage": false,
                "searchKey": "elf.STB_LOPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STB_LOPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STB_LOPROC SymBind = 13 /* reserved range for processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STB_HIPROC",
              "documentation": {
                "identifier": "STB_HIPROC",
                "newPage": false,
                "searchKey": "elf.STB_HIPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STB_HIPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STB_HIPROC SymBind = 15 /*   specific semantics. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_NOTYPE",
              "documentation": {
                "identifier": "STT_NOTYPE",
                "newPage": false,
                "searchKey": "elf.STT_NOTYPE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_NOTYPE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_NOTYPE SymType = 0 /* Unspecified type. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_OBJECT",
              "documentation": {
                "identifier": "STT_OBJECT",
                "newPage": false,
                "searchKey": "elf.STT_OBJECT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_OBJECT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_OBJECT SymType = 1 /* Data object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_FUNC",
              "documentation": {
                "identifier": "STT_FUNC",
                "newPage": false,
                "searchKey": "elf.STT_FUNC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_FUNC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_FUNC SymType = 2 /* Function. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_SECTION",
              "documentation": {
                "identifier": "STT_SECTION",
                "newPage": false,
                "searchKey": "elf.STT_SECTION",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_SECTION"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_SECTION SymType = 3 /* Section. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_FILE",
              "documentation": {
                "identifier": "STT_FILE",
                "newPage": false,
                "searchKey": "elf.STT_FILE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_FILE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_FILE SymType = 4 /* Source file. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_COMMON",
              "documentation": {
                "identifier": "STT_COMMON",
                "newPage": false,
                "searchKey": "elf.STT_COMMON",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_COMMON"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_COMMON SymType = 5 /* Uninitialized common block. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_TLS",
              "documentation": {
                "identifier": "STT_TLS",
                "newPage": false,
                "searchKey": "elf.STT_TLS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_TLS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_TLS SymType = 6 /* TLS object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_LOOS",
              "documentation": {
                "identifier": "STT_LOOS",
                "newPage": false,
                "searchKey": "elf.STT_LOOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_LOOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_LOOS SymType = 10 /* Reserved range for operating system */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_HIOS",
              "documentation": {
                "identifier": "STT_HIOS",
                "newPage": false,
                "searchKey": "elf.STT_HIOS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_HIOS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_HIOS SymType = 12 /*   specific semantics. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_LOPROC",
              "documentation": {
                "identifier": "STT_LOPROC",
                "newPage": false,
                "searchKey": "elf.STT_LOPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_LOPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_LOPROC SymType = 13 /* reserved range for processor */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STT_HIPROC",
              "documentation": {
                "identifier": "STT_HIPROC",
                "newPage": false,
                "searchKey": "elf.STT_HIPROC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STT_HIPROC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STT_HIPROC SymType = 15 /*   specific semantics. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STV_DEFAULT",
              "documentation": {
                "identifier": "STV_DEFAULT",
                "newPage": false,
                "searchKey": "elf.STV_DEFAULT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STV_DEFAULT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STV_DEFAULT SymVis = 0x0 /* Default visibility (see binding). */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STV_INTERNAL",
              "documentation": {
                "identifier": "STV_INTERNAL",
                "newPage": false,
                "searchKey": "elf.STV_INTERNAL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STV_INTERNAL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STV_INTERNAL SymVis = 0x1 /* Special meaning in relocatable objects. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STV_HIDDEN",
              "documentation": {
                "identifier": "STV_HIDDEN",
                "newPage": false,
                "searchKey": "elf.STV_HIDDEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STV_HIDDEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STV_HIDDEN SymVis = 0x2 /* Not visible. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#STV_PROTECTED",
              "documentation": {
                "identifier": "STV_PROTECTED",
                "newPage": false,
                "searchKey": "elf.STV_PROTECTED",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const STV_PROTECTED"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst STV_PROTECTED SymVis = 0x3 /* Visible but not preemptible. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_NONE",
              "documentation": {
                "identifier": "R_X86_64_NONE",
                "newPage": false,
                "searchKey": "elf.R_X86_64_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_NONE R_X86_64 = 0 /* No relocation. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_64",
              "documentation": {
                "identifier": "R_X86_64_64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_64 R_X86_64 = 1 /* Add 64 bit symbol value. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_PC32",
              "documentation": {
                "identifier": "R_X86_64_PC32",
                "newPage": false,
                "searchKey": "elf.R_X86_64_PC32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_PC32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_PC32 R_X86_64 = 2 /* PC-relative 32 bit signed sym value. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOT32",
              "documentation": {
                "identifier": "R_X86_64_GOT32",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOT32 R_X86_64 = 3 /* PC-relative 32 bit GOT offset. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_PLT32",
              "documentation": {
                "identifier": "R_X86_64_PLT32",
                "newPage": false,
                "searchKey": "elf.R_X86_64_PLT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_PLT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_PLT32 R_X86_64 = 4 /* PC-relative 32 bit PLT offset. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_COPY",
              "documentation": {
                "identifier": "R_X86_64_COPY",
                "newPage": false,
                "searchKey": "elf.R_X86_64_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_COPY R_X86_64 = 5 /* Copy data from shared object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GLOB_DAT",
              "documentation": {
                "identifier": "R_X86_64_GLOB_DAT",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GLOB_DAT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GLOB_DAT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GLOB_DAT R_X86_64 = 6 /* Set GOT entry to data address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_JMP_SLOT",
              "documentation": {
                "identifier": "R_X86_64_JMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_X86_64_JMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_JMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_JMP_SLOT R_X86_64 = 7 /* Set GOT entry to code address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_RELATIVE",
              "documentation": {
                "identifier": "R_X86_64_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_X86_64_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_RELATIVE R_X86_64 = 8 /* Add load address of shared object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOTPCREL",
              "documentation": {
                "identifier": "R_X86_64_GOTPCREL",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOTPCREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOTPCREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOTPCREL R_X86_64 = 9 /* Add 32 bit signed pcrel offset to GOT. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_32",
              "documentation": {
                "identifier": "R_X86_64_32",
                "newPage": false,
                "searchKey": "elf.R_X86_64_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_32 R_X86_64 = 10 /* Add 32 bit zero extended symbol value */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_32S",
              "documentation": {
                "identifier": "R_X86_64_32S",
                "newPage": false,
                "searchKey": "elf.R_X86_64_32S",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_32S"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_32S R_X86_64 = 11 /* Add 32 bit sign extended symbol value */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_16",
              "documentation": {
                "identifier": "R_X86_64_16",
                "newPage": false,
                "searchKey": "elf.R_X86_64_16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_16 R_X86_64 = 12 /* Add 16 bit zero extended symbol value */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_PC16",
              "documentation": {
                "identifier": "R_X86_64_PC16",
                "newPage": false,
                "searchKey": "elf.R_X86_64_PC16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_PC16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_PC16 R_X86_64 = 13 /* Add 16 bit signed extended pc relative symbol value */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_8",
              "documentation": {
                "identifier": "R_X86_64_8",
                "newPage": false,
                "searchKey": "elf.R_X86_64_8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_8 R_X86_64 = 14 /* Add 8 bit zero extended symbol value */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_PC8",
              "documentation": {
                "identifier": "R_X86_64_PC8",
                "newPage": false,
                "searchKey": "elf.R_X86_64_PC8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_PC8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_PC8 R_X86_64 = 15 /* Add 8 bit signed extended pc relative symbol value */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_DTPMOD64",
              "documentation": {
                "identifier": "R_X86_64_DTPMOD64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_DTPMOD64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_DTPMOD64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_DTPMOD64 R_X86_64 = 16 /* ID of module containing symbol */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_DTPOFF64",
              "documentation": {
                "identifier": "R_X86_64_DTPOFF64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_DTPOFF64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_DTPOFF64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_DTPOFF64 R_X86_64 = 17 /* Offset in TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_TPOFF64",
              "documentation": {
                "identifier": "R_X86_64_TPOFF64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_TPOFF64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_TPOFF64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_TPOFF64 R_X86_64 = 18 /* Offset in static TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_TLSGD",
              "documentation": {
                "identifier": "R_X86_64_TLSGD",
                "newPage": false,
                "searchKey": "elf.R_X86_64_TLSGD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_TLSGD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_TLSGD R_X86_64 = 19 /* PC relative offset to GD GOT entry */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_TLSLD",
              "documentation": {
                "identifier": "R_X86_64_TLSLD",
                "newPage": false,
                "searchKey": "elf.R_X86_64_TLSLD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_TLSLD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_TLSLD R_X86_64 = 20 /* PC relative offset to LD GOT entry */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_DTPOFF32",
              "documentation": {
                "identifier": "R_X86_64_DTPOFF32",
                "newPage": false,
                "searchKey": "elf.R_X86_64_DTPOFF32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_DTPOFF32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_DTPOFF32 R_X86_64 = 21 /* Offset in TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOTTPOFF",
              "documentation": {
                "identifier": "R_X86_64_GOTTPOFF",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOTTPOFF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOTTPOFF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOTTPOFF R_X86_64 = 22 /* PC relative offset to IE GOT entry */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_TPOFF32",
              "documentation": {
                "identifier": "R_X86_64_TPOFF32",
                "newPage": false,
                "searchKey": "elf.R_X86_64_TPOFF32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_TPOFF32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_TPOFF32 R_X86_64 = 23 /* Offset in static TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_PC64",
              "documentation": {
                "identifier": "R_X86_64_PC64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_PC64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_PC64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_PC64 R_X86_64 = 24 /* PC relative 64-bit sign extended symbol value. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOTOFF64",
              "documentation": {
                "identifier": "R_X86_64_GOTOFF64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOTOFF64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOTOFF64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOTOFF64 R_X86_64 = 25\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOTPC32",
              "documentation": {
                "identifier": "R_X86_64_GOTPC32",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOTPC32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOTPC32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOTPC32 R_X86_64 = 26\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOT64",
              "documentation": {
                "identifier": "R_X86_64_GOT64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOT64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOT64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOT64 R_X86_64 = 27\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOTPCREL64",
              "documentation": {
                "identifier": "R_X86_64_GOTPCREL64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOTPCREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOTPCREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOTPCREL64 R_X86_64 = 28\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOTPC64",
              "documentation": {
                "identifier": "R_X86_64_GOTPC64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOTPC64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOTPC64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOTPC64 R_X86_64 = 29\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOTPLT64",
              "documentation": {
                "identifier": "R_X86_64_GOTPLT64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOTPLT64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOTPLT64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOTPLT64 R_X86_64 = 30\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_PLTOFF64",
              "documentation": {
                "identifier": "R_X86_64_PLTOFF64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_PLTOFF64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_PLTOFF64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_PLTOFF64 R_X86_64 = 31\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_SIZE32",
              "documentation": {
                "identifier": "R_X86_64_SIZE32",
                "newPage": false,
                "searchKey": "elf.R_X86_64_SIZE32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_SIZE32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_SIZE32 R_X86_64 = 32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_SIZE64",
              "documentation": {
                "identifier": "R_X86_64_SIZE64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_SIZE64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_SIZE64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_SIZE64 R_X86_64 = 33\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOTPC32_TLSDESC",
              "documentation": {
                "identifier": "R_X86_64_GOTPC32_TLSDESC",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOTPC32_TLSDESC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOTPC32_TLSDESC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOTPC32_TLSDESC R_X86_64 = 34\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_TLSDESC_CALL",
              "documentation": {
                "identifier": "R_X86_64_TLSDESC_CALL",
                "newPage": false,
                "searchKey": "elf.R_X86_64_TLSDESC_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_TLSDESC_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_TLSDESC_CALL R_X86_64 = 35\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_TLSDESC",
              "documentation": {
                "identifier": "R_X86_64_TLSDESC",
                "newPage": false,
                "searchKey": "elf.R_X86_64_TLSDESC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_TLSDESC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_TLSDESC R_X86_64 = 36\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_IRELATIVE",
              "documentation": {
                "identifier": "R_X86_64_IRELATIVE",
                "newPage": false,
                "searchKey": "elf.R_X86_64_IRELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_IRELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_IRELATIVE R_X86_64 = 37\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_RELATIVE64",
              "documentation": {
                "identifier": "R_X86_64_RELATIVE64",
                "newPage": false,
                "searchKey": "elf.R_X86_64_RELATIVE64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_RELATIVE64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_RELATIVE64 R_X86_64 = 38\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_PC32_BND",
              "documentation": {
                "identifier": "R_X86_64_PC32_BND",
                "newPage": false,
                "searchKey": "elf.R_X86_64_PC32_BND",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_PC32_BND"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_PC32_BND R_X86_64 = 39\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_PLT32_BND",
              "documentation": {
                "identifier": "R_X86_64_PLT32_BND",
                "newPage": false,
                "searchKey": "elf.R_X86_64_PLT32_BND",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_PLT32_BND"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_PLT32_BND R_X86_64 = 40\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_GOTPCRELX",
              "documentation": {
                "identifier": "R_X86_64_GOTPCRELX",
                "newPage": false,
                "searchKey": "elf.R_X86_64_GOTPCRELX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_GOTPCRELX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_GOTPCRELX R_X86_64 = 41\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64_REX_GOTPCRELX",
              "documentation": {
                "identifier": "R_X86_64_REX_GOTPCRELX",
                "newPage": false,
                "searchKey": "elf.R_X86_64_REX_GOTPCRELX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_X86_64_REX_GOTPCRELX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_X86_64_REX_GOTPCRELX R_X86_64 = 42\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_NONE",
              "documentation": {
                "identifier": "R_AARCH64_NONE",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_NONE R_AARCH64 = 0\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_ABS32",
              "documentation": {
                "identifier": "R_AARCH64_P32_ABS32",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_ABS32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_ABS32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_ABS32 R_AARCH64 = 1\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_ABS16",
              "documentation": {
                "identifier": "R_AARCH64_P32_ABS16",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_ABS16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_ABS16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_ABS16 R_AARCH64 = 2\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_PREL32",
              "documentation": {
                "identifier": "R_AARCH64_P32_PREL32",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_PREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_PREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_PREL32 R_AARCH64 = 3\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_PREL16",
              "documentation": {
                "identifier": "R_AARCH64_P32_PREL16",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_PREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_PREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_PREL16 R_AARCH64 = 4\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_MOVW_UABS_G0",
              "documentation": {
                "identifier": "R_AARCH64_P32_MOVW_UABS_G0",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_MOVW_UABS_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_MOVW_UABS_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_MOVW_UABS_G0 R_AARCH64 = 5\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_MOVW_UABS_G0_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_MOVW_UABS_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_MOVW_UABS_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_MOVW_UABS_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_MOVW_UABS_G0_NC R_AARCH64 = 6\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_MOVW_UABS_G1",
              "documentation": {
                "identifier": "R_AARCH64_P32_MOVW_UABS_G1",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_MOVW_UABS_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_MOVW_UABS_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_MOVW_UABS_G1 R_AARCH64 = 7\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_MOVW_SABS_G0",
              "documentation": {
                "identifier": "R_AARCH64_P32_MOVW_SABS_G0",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_MOVW_SABS_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_MOVW_SABS_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_MOVW_SABS_G0 R_AARCH64 = 8\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_LD_PREL_LO19",
              "documentation": {
                "identifier": "R_AARCH64_P32_LD_PREL_LO19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_LD_PREL_LO19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_LD_PREL_LO19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_LD_PREL_LO19 R_AARCH64 = 9\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_ADR_PREL_LO21",
              "documentation": {
                "identifier": "R_AARCH64_P32_ADR_PREL_LO21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_ADR_PREL_LO21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_ADR_PREL_LO21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_ADR_PREL_LO21 R_AARCH64 = 10\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_ADR_PREL_PG_HI21",
              "documentation": {
                "identifier": "R_AARCH64_P32_ADR_PREL_PG_HI21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_ADR_PREL_PG_HI21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_ADR_PREL_PG_HI21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_ADR_PREL_PG_HI21 R_AARCH64 = 11\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_ADD_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_ADD_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_ADD_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_ADD_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_ADD_ABS_LO12_NC R_AARCH64 = 12\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_LDST8_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_LDST8_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_LDST8_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_LDST8_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_LDST8_ABS_LO12_NC R_AARCH64 = 13\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_LDST16_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_LDST16_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_LDST16_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_LDST16_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_LDST16_ABS_LO12_NC R_AARCH64 = 14\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_LDST32_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_LDST32_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_LDST32_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_LDST32_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_LDST32_ABS_LO12_NC R_AARCH64 = 15\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_LDST64_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_LDST64_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_LDST64_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_LDST64_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_LDST64_ABS_LO12_NC R_AARCH64 = 16\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_LDST128_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_LDST128_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_LDST128_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_LDST128_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_LDST128_ABS_LO12_NC R_AARCH64 = 17\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TSTBR14",
              "documentation": {
                "identifier": "R_AARCH64_P32_TSTBR14",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TSTBR14",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TSTBR14"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TSTBR14 R_AARCH64 = 18\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_CONDBR19",
              "documentation": {
                "identifier": "R_AARCH64_P32_CONDBR19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_CONDBR19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_CONDBR19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_CONDBR19 R_AARCH64 = 19\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_JUMP26",
              "documentation": {
                "identifier": "R_AARCH64_P32_JUMP26",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_JUMP26",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_JUMP26"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_JUMP26 R_AARCH64 = 20\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_CALL26",
              "documentation": {
                "identifier": "R_AARCH64_P32_CALL26",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_CALL26",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_CALL26"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_CALL26 R_AARCH64 = 21\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_GOT_LD_PREL19",
              "documentation": {
                "identifier": "R_AARCH64_P32_GOT_LD_PREL19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_GOT_LD_PREL19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_GOT_LD_PREL19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_GOT_LD_PREL19 R_AARCH64 = 25\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_ADR_GOT_PAGE",
              "documentation": {
                "identifier": "R_AARCH64_P32_ADR_GOT_PAGE",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_ADR_GOT_PAGE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_ADR_GOT_PAGE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_ADR_GOT_PAGE R_AARCH64 = 26\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_LD32_GOT_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_LD32_GOT_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_LD32_GOT_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_LD32_GOT_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_LD32_GOT_LO12_NC R_AARCH64 = 27\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSGD_ADR_PAGE21",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSGD_ADR_PAGE21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSGD_ADR_PAGE21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSGD_ADR_PAGE21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSGD_ADR_PAGE21 R_AARCH64 = 81\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSGD_ADD_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSGD_ADD_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSGD_ADD_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSGD_ADD_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSGD_ADD_LO12_NC R_AARCH64 = 82\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSIE_ADR_GOTTPREL_PAGE21 R_AARCH64 = 103\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSIE_LD32_GOTTPREL_LO12_NC R_AARCH64 = 104\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSIE_LD_GOTTPREL_PREL19 R_AARCH64 = 105\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSLE_MOVW_TPREL_G1",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSLE_MOVW_TPREL_G1",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSLE_MOVW_TPREL_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSLE_MOVW_TPREL_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSLE_MOVW_TPREL_G1 R_AARCH64 = 106\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSLE_MOVW_TPREL_G0",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSLE_MOVW_TPREL_G0",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSLE_MOVW_TPREL_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSLE_MOVW_TPREL_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSLE_MOVW_TPREL_G0 R_AARCH64 = 107\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSLE_MOVW_TPREL_G0_NC R_AARCH64 = 108\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSLE_ADD_TPREL_HI12",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSLE_ADD_TPREL_HI12",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSLE_ADD_TPREL_HI12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSLE_ADD_TPREL_HI12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSLE_ADD_TPREL_HI12 R_AARCH64 = 109\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSLE_ADD_TPREL_LO12",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSLE_ADD_TPREL_LO12",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSLE_ADD_TPREL_LO12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSLE_ADD_TPREL_LO12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSLE_ADD_TPREL_LO12 R_AARCH64 = 110\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSLE_ADD_TPREL_LO12_NC R_AARCH64 = 111\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSDESC_LD_PREL19",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSDESC_LD_PREL19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSDESC_LD_PREL19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSDESC_LD_PREL19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSDESC_LD_PREL19 R_AARCH64 = 122\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSDESC_ADR_PREL21",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSDESC_ADR_PREL21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSDESC_ADR_PREL21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSDESC_ADR_PREL21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSDESC_ADR_PREL21 R_AARCH64 = 123\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSDESC_ADR_PAGE21",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSDESC_ADR_PAGE21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSDESC_ADR_PAGE21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSDESC_ADR_PAGE21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSDESC_ADR_PAGE21 R_AARCH64 = 124\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSDESC_LD32_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSDESC_LD32_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSDESC_LD32_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSDESC_LD32_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSDESC_LD32_LO12_NC R_AARCH64 = 125\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSDESC_ADD_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSDESC_ADD_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSDESC_ADD_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSDESC_ADD_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSDESC_ADD_LO12_NC R_AARCH64 = 126\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSDESC_CALL",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSDESC_CALL",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSDESC_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSDESC_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSDESC_CALL R_AARCH64 = 127\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_COPY",
              "documentation": {
                "identifier": "R_AARCH64_P32_COPY",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_COPY R_AARCH64 = 180\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_GLOB_DAT",
              "documentation": {
                "identifier": "R_AARCH64_P32_GLOB_DAT",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_GLOB_DAT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_GLOB_DAT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_GLOB_DAT R_AARCH64 = 181\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_JUMP_SLOT",
              "documentation": {
                "identifier": "R_AARCH64_P32_JUMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_JUMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_JUMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_JUMP_SLOT R_AARCH64 = 182\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_RELATIVE",
              "documentation": {
                "identifier": "R_AARCH64_P32_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_RELATIVE R_AARCH64 = 183\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLS_DTPMOD",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLS_DTPMOD",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLS_DTPMOD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLS_DTPMOD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLS_DTPMOD R_AARCH64 = 184\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLS_DTPREL",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLS_DTPREL",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLS_DTPREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLS_DTPREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLS_DTPREL R_AARCH64 = 185\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLS_TPREL",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLS_TPREL",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLS_TPREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLS_TPREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLS_TPREL R_AARCH64 = 186\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_TLSDESC",
              "documentation": {
                "identifier": "R_AARCH64_P32_TLSDESC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_TLSDESC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_TLSDESC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_TLSDESC R_AARCH64 = 187\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_P32_IRELATIVE",
              "documentation": {
                "identifier": "R_AARCH64_P32_IRELATIVE",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_P32_IRELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_P32_IRELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_P32_IRELATIVE R_AARCH64 = 188\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_NULL",
              "documentation": {
                "identifier": "R_AARCH64_NULL",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_NULL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_NULL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_NULL R_AARCH64 = 256\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_ABS64",
              "documentation": {
                "identifier": "R_AARCH64_ABS64",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_ABS64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_ABS64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_ABS64 R_AARCH64 = 257\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_ABS32",
              "documentation": {
                "identifier": "R_AARCH64_ABS32",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_ABS32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_ABS32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_ABS32 R_AARCH64 = 258\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_ABS16",
              "documentation": {
                "identifier": "R_AARCH64_ABS16",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_ABS16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_ABS16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_ABS16 R_AARCH64 = 259\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_PREL64",
              "documentation": {
                "identifier": "R_AARCH64_PREL64",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_PREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_PREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_PREL64 R_AARCH64 = 260\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_PREL32",
              "documentation": {
                "identifier": "R_AARCH64_PREL32",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_PREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_PREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_PREL32 R_AARCH64 = 261\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_PREL16",
              "documentation": {
                "identifier": "R_AARCH64_PREL16",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_PREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_PREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_PREL16 R_AARCH64 = 262\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_UABS_G0",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_UABS_G0",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_UABS_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_UABS_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_UABS_G0 R_AARCH64 = 263\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_UABS_G0_NC",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_UABS_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_UABS_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_UABS_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_UABS_G0_NC R_AARCH64 = 264\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_UABS_G1",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_UABS_G1",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_UABS_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_UABS_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_UABS_G1 R_AARCH64 = 265\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_UABS_G1_NC",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_UABS_G1_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_UABS_G1_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_UABS_G1_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_UABS_G1_NC R_AARCH64 = 266\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_UABS_G2",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_UABS_G2",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_UABS_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_UABS_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_UABS_G2 R_AARCH64 = 267\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_UABS_G2_NC",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_UABS_G2_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_UABS_G2_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_UABS_G2_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_UABS_G2_NC R_AARCH64 = 268\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_UABS_G3",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_UABS_G3",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_UABS_G3",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_UABS_G3"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_UABS_G3 R_AARCH64 = 269\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_SABS_G0",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_SABS_G0",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_SABS_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_SABS_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_SABS_G0 R_AARCH64 = 270\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_SABS_G1",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_SABS_G1",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_SABS_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_SABS_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_SABS_G1 R_AARCH64 = 271\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_MOVW_SABS_G2",
              "documentation": {
                "identifier": "R_AARCH64_MOVW_SABS_G2",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_MOVW_SABS_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_MOVW_SABS_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_MOVW_SABS_G2 R_AARCH64 = 272\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_LD_PREL_LO19",
              "documentation": {
                "identifier": "R_AARCH64_LD_PREL_LO19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_LD_PREL_LO19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_LD_PREL_LO19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_LD_PREL_LO19 R_AARCH64 = 273\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_ADR_PREL_LO21",
              "documentation": {
                "identifier": "R_AARCH64_ADR_PREL_LO21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_ADR_PREL_LO21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_ADR_PREL_LO21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_ADR_PREL_LO21 R_AARCH64 = 274\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_ADR_PREL_PG_HI21",
              "documentation": {
                "identifier": "R_AARCH64_ADR_PREL_PG_HI21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_ADR_PREL_PG_HI21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_ADR_PREL_PG_HI21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_ADR_PREL_PG_HI21 R_AARCH64 = 275\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_ADR_PREL_PG_HI21_NC",
              "documentation": {
                "identifier": "R_AARCH64_ADR_PREL_PG_HI21_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_ADR_PREL_PG_HI21_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_ADR_PREL_PG_HI21_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_ADR_PREL_PG_HI21_NC R_AARCH64 = 276\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_ADD_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_ADD_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_ADD_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_ADD_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_ADD_ABS_LO12_NC R_AARCH64 = 277\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_LDST8_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_LDST8_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_LDST8_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_LDST8_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_LDST8_ABS_LO12_NC R_AARCH64 = 278\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TSTBR14",
              "documentation": {
                "identifier": "R_AARCH64_TSTBR14",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TSTBR14",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TSTBR14"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TSTBR14 R_AARCH64 = 279\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_CONDBR19",
              "documentation": {
                "identifier": "R_AARCH64_CONDBR19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_CONDBR19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_CONDBR19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_CONDBR19 R_AARCH64 = 280\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_JUMP26",
              "documentation": {
                "identifier": "R_AARCH64_JUMP26",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_JUMP26",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_JUMP26"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_JUMP26 R_AARCH64 = 282\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_CALL26",
              "documentation": {
                "identifier": "R_AARCH64_CALL26",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_CALL26",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_CALL26"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_CALL26 R_AARCH64 = 283\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_LDST16_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_LDST16_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_LDST16_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_LDST16_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_LDST16_ABS_LO12_NC R_AARCH64 = 284\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_LDST32_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_LDST32_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_LDST32_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_LDST32_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_LDST32_ABS_LO12_NC R_AARCH64 = 285\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_LDST64_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_LDST64_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_LDST64_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_LDST64_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_LDST64_ABS_LO12_NC R_AARCH64 = 286\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_LDST128_ABS_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_LDST128_ABS_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_LDST128_ABS_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_LDST128_ABS_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_LDST128_ABS_LO12_NC R_AARCH64 = 299\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_GOT_LD_PREL19",
              "documentation": {
                "identifier": "R_AARCH64_GOT_LD_PREL19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_GOT_LD_PREL19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_GOT_LD_PREL19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_GOT_LD_PREL19 R_AARCH64 = 309\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_LD64_GOTOFF_LO15",
              "documentation": {
                "identifier": "R_AARCH64_LD64_GOTOFF_LO15",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_LD64_GOTOFF_LO15",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_LD64_GOTOFF_LO15"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_LD64_GOTOFF_LO15 R_AARCH64 = 310\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_ADR_GOT_PAGE",
              "documentation": {
                "identifier": "R_AARCH64_ADR_GOT_PAGE",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_ADR_GOT_PAGE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_ADR_GOT_PAGE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_ADR_GOT_PAGE R_AARCH64 = 311\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_LD64_GOT_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_LD64_GOT_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_LD64_GOT_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_LD64_GOT_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_LD64_GOT_LO12_NC R_AARCH64 = 312\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_LD64_GOTPAGE_LO15",
              "documentation": {
                "identifier": "R_AARCH64_LD64_GOTPAGE_LO15",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_LD64_GOTPAGE_LO15",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_LD64_GOTPAGE_LO15"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_LD64_GOTPAGE_LO15 R_AARCH64 = 313\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSGD_ADR_PREL21",
              "documentation": {
                "identifier": "R_AARCH64_TLSGD_ADR_PREL21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSGD_ADR_PREL21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSGD_ADR_PREL21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSGD_ADR_PREL21 R_AARCH64 = 512\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSGD_ADR_PAGE21",
              "documentation": {
                "identifier": "R_AARCH64_TLSGD_ADR_PAGE21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSGD_ADR_PAGE21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSGD_ADR_PAGE21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSGD_ADR_PAGE21 R_AARCH64 = 513\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSGD_ADD_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSGD_ADD_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSGD_ADD_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSGD_ADD_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSGD_ADD_LO12_NC R_AARCH64 = 514\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSGD_MOVW_G1",
              "documentation": {
                "identifier": "R_AARCH64_TLSGD_MOVW_G1",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSGD_MOVW_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSGD_MOVW_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSGD_MOVW_G1 R_AARCH64 = 515\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSGD_MOVW_G0_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSGD_MOVW_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSGD_MOVW_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSGD_MOVW_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSGD_MOVW_G0_NC R_AARCH64 = 516\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLD_ADR_PREL21",
              "documentation": {
                "identifier": "R_AARCH64_TLSLD_ADR_PREL21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLD_ADR_PREL21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLD_ADR_PREL21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLD_ADR_PREL21 R_AARCH64 = 517\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLD_ADR_PAGE21",
              "documentation": {
                "identifier": "R_AARCH64_TLSLD_ADR_PAGE21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLD_ADR_PAGE21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLD_ADR_PAGE21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLD_ADR_PAGE21 R_AARCH64 = 518\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSIE_MOVW_GOTTPREL_G1",
              "documentation": {
                "identifier": "R_AARCH64_TLSIE_MOVW_GOTTPREL_G1",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSIE_MOVW_GOTTPREL_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSIE_MOVW_GOTTPREL_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSIE_MOVW_GOTTPREL_G1 R_AARCH64 = 539\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC R_AARCH64 = 540\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21",
              "documentation": {
                "identifier": "R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21 R_AARCH64 = 541\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC R_AARCH64 = 542\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSIE_LD_GOTTPREL_PREL19",
              "documentation": {
                "identifier": "R_AARCH64_TLSIE_LD_GOTTPREL_PREL19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSIE_LD_GOTTPREL_PREL19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSIE_LD_GOTTPREL_PREL19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSIE_LD_GOTTPREL_PREL19 R_AARCH64 = 543\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_MOVW_TPREL_G2",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_MOVW_TPREL_G2",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_MOVW_TPREL_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_MOVW_TPREL_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_MOVW_TPREL_G2 R_AARCH64 = 544\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_MOVW_TPREL_G1",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_MOVW_TPREL_G1",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_MOVW_TPREL_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_MOVW_TPREL_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_MOVW_TPREL_G1 R_AARCH64 = 545\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_MOVW_TPREL_G1_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_MOVW_TPREL_G1_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_MOVW_TPREL_G1_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_MOVW_TPREL_G1_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_MOVW_TPREL_G1_NC R_AARCH64 = 546\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_MOVW_TPREL_G0",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_MOVW_TPREL_G0",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_MOVW_TPREL_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_MOVW_TPREL_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_MOVW_TPREL_G0 R_AARCH64 = 547\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_MOVW_TPREL_G0_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_MOVW_TPREL_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_MOVW_TPREL_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_MOVW_TPREL_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_MOVW_TPREL_G0_NC R_AARCH64 = 548\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_ADD_TPREL_HI12",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_ADD_TPREL_HI12",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_ADD_TPREL_HI12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_ADD_TPREL_HI12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_ADD_TPREL_HI12 R_AARCH64 = 549\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_ADD_TPREL_LO12",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_ADD_TPREL_LO12",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_ADD_TPREL_LO12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_ADD_TPREL_LO12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_ADD_TPREL_LO12 R_AARCH64 = 550\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_ADD_TPREL_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_ADD_TPREL_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_ADD_TPREL_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_ADD_TPREL_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_ADD_TPREL_LO12_NC R_AARCH64 = 551\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_LD_PREL19",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_LD_PREL19",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_LD_PREL19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_LD_PREL19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_LD_PREL19 R_AARCH64 = 560\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_ADR_PREL21",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_ADR_PREL21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_ADR_PREL21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_ADR_PREL21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_ADR_PREL21 R_AARCH64 = 561\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_ADR_PAGE21",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_ADR_PAGE21",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_ADR_PAGE21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_ADR_PAGE21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_ADR_PAGE21 R_AARCH64 = 562\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_LD64_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_LD64_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_LD64_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_LD64_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_LD64_LO12_NC R_AARCH64 = 563\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_ADD_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_ADD_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_ADD_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_ADD_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_ADD_LO12_NC R_AARCH64 = 564\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_OFF_G1",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_OFF_G1",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_OFF_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_OFF_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_OFF_G1 R_AARCH64 = 565\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_OFF_G0_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_OFF_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_OFF_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_OFF_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_OFF_G0_NC R_AARCH64 = 566\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_LDR",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_LDR",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_LDR",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_LDR"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_LDR R_AARCH64 = 567\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_ADD",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_ADD",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_ADD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_ADD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_ADD R_AARCH64 = 568\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC_CALL",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC_CALL",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC_CALL R_AARCH64 = 569\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_LDST128_TPREL_LO12",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_LDST128_TPREL_LO12",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_LDST128_TPREL_LO12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_LDST128_TPREL_LO12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_LDST128_TPREL_LO12 R_AARCH64 = 570\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLE_LDST128_TPREL_LO12_NC R_AARCH64 = 571\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLD_LDST128_DTPREL_LO12",
              "documentation": {
                "identifier": "R_AARCH64_TLSLD_LDST128_DTPREL_LO12",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLD_LDST128_DTPREL_LO12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLD_LDST128_DTPREL_LO12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLD_LDST128_DTPREL_LO12 R_AARCH64 = 572\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC",
              "documentation": {
                "identifier": "R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSLD_LDST128_DTPREL_LO12_NC R_AARCH64 = 573\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_COPY",
              "documentation": {
                "identifier": "R_AARCH64_COPY",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_COPY R_AARCH64 = 1024\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_GLOB_DAT",
              "documentation": {
                "identifier": "R_AARCH64_GLOB_DAT",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_GLOB_DAT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_GLOB_DAT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_GLOB_DAT R_AARCH64 = 1025\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_JUMP_SLOT",
              "documentation": {
                "identifier": "R_AARCH64_JUMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_JUMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_JUMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_JUMP_SLOT R_AARCH64 = 1026\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_RELATIVE",
              "documentation": {
                "identifier": "R_AARCH64_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_RELATIVE R_AARCH64 = 1027\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLS_DTPMOD64",
              "documentation": {
                "identifier": "R_AARCH64_TLS_DTPMOD64",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLS_DTPMOD64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLS_DTPMOD64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLS_DTPMOD64 R_AARCH64 = 1028\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLS_DTPREL64",
              "documentation": {
                "identifier": "R_AARCH64_TLS_DTPREL64",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLS_DTPREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLS_DTPREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLS_DTPREL64 R_AARCH64 = 1029\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLS_TPREL64",
              "documentation": {
                "identifier": "R_AARCH64_TLS_TPREL64",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLS_TPREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLS_TPREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLS_TPREL64 R_AARCH64 = 1030\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_TLSDESC",
              "documentation": {
                "identifier": "R_AARCH64_TLSDESC",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_TLSDESC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_TLSDESC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_TLSDESC R_AARCH64 = 1031\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64_IRELATIVE",
              "documentation": {
                "identifier": "R_AARCH64_IRELATIVE",
                "newPage": false,
                "searchKey": "elf.R_AARCH64_IRELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_AARCH64_IRELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_AARCH64_IRELATIVE R_AARCH64 = 1032\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_NONE",
              "documentation": {
                "identifier": "R_ALPHA_NONE",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_NONE R_ALPHA = 0 /* No reloc */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_REFLONG",
              "documentation": {
                "identifier": "R_ALPHA_REFLONG",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_REFLONG",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_REFLONG"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_REFLONG R_ALPHA = 1 /* Direct 32 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_REFQUAD",
              "documentation": {
                "identifier": "R_ALPHA_REFQUAD",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_REFQUAD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_REFQUAD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_REFQUAD R_ALPHA = 2 /* Direct 64 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_GPREL32",
              "documentation": {
                "identifier": "R_ALPHA_GPREL32",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_GPREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_GPREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_GPREL32 R_ALPHA = 3 /* GP relative 32 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_LITERAL",
              "documentation": {
                "identifier": "R_ALPHA_LITERAL",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_LITERAL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_LITERAL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_LITERAL R_ALPHA = 4 /* GP relative 16 bit w/optimization */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_LITUSE",
              "documentation": {
                "identifier": "R_ALPHA_LITUSE",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_LITUSE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_LITUSE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_LITUSE R_ALPHA = 5 /* Optimization hint for LITERAL */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_GPDISP",
              "documentation": {
                "identifier": "R_ALPHA_GPDISP",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_GPDISP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_GPDISP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_GPDISP R_ALPHA = 6 /* Add displacement to GP */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_BRADDR",
              "documentation": {
                "identifier": "R_ALPHA_BRADDR",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_BRADDR",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_BRADDR"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_BRADDR R_ALPHA = 7 /* PC+4 relative 23 bit shifted */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_HINT",
              "documentation": {
                "identifier": "R_ALPHA_HINT",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_HINT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_HINT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_HINT R_ALPHA = 8 /* PC+4 relative 16 bit shifted */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_SREL16",
              "documentation": {
                "identifier": "R_ALPHA_SREL16",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_SREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_SREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_SREL16 R_ALPHA = 9 /* PC relative 16 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_SREL32",
              "documentation": {
                "identifier": "R_ALPHA_SREL32",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_SREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_SREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_SREL32 R_ALPHA = 10 /* PC relative 32 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_SREL64",
              "documentation": {
                "identifier": "R_ALPHA_SREL64",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_SREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_SREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_SREL64 R_ALPHA = 11 /* PC relative 64 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_OP_PUSH",
              "documentation": {
                "identifier": "R_ALPHA_OP_PUSH",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_OP_PUSH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_OP_PUSH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_OP_PUSH R_ALPHA = 12 /* OP stack push */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_OP_STORE",
              "documentation": {
                "identifier": "R_ALPHA_OP_STORE",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_OP_STORE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_OP_STORE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_OP_STORE R_ALPHA = 13 /* OP stack pop and store */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_OP_PSUB",
              "documentation": {
                "identifier": "R_ALPHA_OP_PSUB",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_OP_PSUB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_OP_PSUB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_OP_PSUB R_ALPHA = 14 /* OP stack subtract */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_OP_PRSHIFT",
              "documentation": {
                "identifier": "R_ALPHA_OP_PRSHIFT",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_OP_PRSHIFT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_OP_PRSHIFT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_OP_PRSHIFT R_ALPHA = 15 /* OP stack right shift */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_GPVALUE",
              "documentation": {
                "identifier": "R_ALPHA_GPVALUE",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_GPVALUE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_GPVALUE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_GPVALUE R_ALPHA = 16\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_GPRELHIGH",
              "documentation": {
                "identifier": "R_ALPHA_GPRELHIGH",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_GPRELHIGH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_GPRELHIGH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_GPRELHIGH R_ALPHA = 17\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_GPRELLOW",
              "documentation": {
                "identifier": "R_ALPHA_GPRELLOW",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_GPRELLOW",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_GPRELLOW"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_GPRELLOW R_ALPHA = 18\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_IMMED_GP_16",
              "documentation": {
                "identifier": "R_ALPHA_IMMED_GP_16",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_IMMED_GP_16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_IMMED_GP_16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_IMMED_GP_16 R_ALPHA = 19\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_IMMED_GP_HI32",
              "documentation": {
                "identifier": "R_ALPHA_IMMED_GP_HI32",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_IMMED_GP_HI32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_IMMED_GP_HI32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_IMMED_GP_HI32 R_ALPHA = 20\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_IMMED_SCN_HI32",
              "documentation": {
                "identifier": "R_ALPHA_IMMED_SCN_HI32",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_IMMED_SCN_HI32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_IMMED_SCN_HI32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_IMMED_SCN_HI32 R_ALPHA = 21\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_IMMED_BR_HI32",
              "documentation": {
                "identifier": "R_ALPHA_IMMED_BR_HI32",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_IMMED_BR_HI32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_IMMED_BR_HI32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_IMMED_BR_HI32 R_ALPHA = 22\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_IMMED_LO32",
              "documentation": {
                "identifier": "R_ALPHA_IMMED_LO32",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_IMMED_LO32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_IMMED_LO32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_IMMED_LO32 R_ALPHA = 23\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_COPY",
              "documentation": {
                "identifier": "R_ALPHA_COPY",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_COPY R_ALPHA = 24 /* Copy symbol at runtime */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_GLOB_DAT",
              "documentation": {
                "identifier": "R_ALPHA_GLOB_DAT",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_GLOB_DAT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_GLOB_DAT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_GLOB_DAT R_ALPHA = 25 /* Create GOT entry */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_JMP_SLOT",
              "documentation": {
                "identifier": "R_ALPHA_JMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_JMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_JMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_JMP_SLOT R_ALPHA = 26 /* Create PLT entry */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA_RELATIVE",
              "documentation": {
                "identifier": "R_ALPHA_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_ALPHA_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ALPHA_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ALPHA_RELATIVE R_ALPHA = 27 /* Adjust by program base */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_NONE",
              "documentation": {
                "identifier": "R_ARM_NONE",
                "newPage": false,
                "searchKey": "elf.R_ARM_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_NONE R_ARM = 0 /* No relocation. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PC24",
              "documentation": {
                "identifier": "R_ARM_PC24",
                "newPage": false,
                "searchKey": "elf.R_ARM_PC24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PC24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PC24 R_ARM = 1\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ABS32",
              "documentation": {
                "identifier": "R_ARM_ABS32",
                "newPage": false,
                "searchKey": "elf.R_ARM_ABS32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ABS32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ABS32 R_ARM = 2\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_REL32",
              "documentation": {
                "identifier": "R_ARM_REL32",
                "newPage": false,
                "searchKey": "elf.R_ARM_REL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_REL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_REL32 R_ARM = 3\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PC13",
              "documentation": {
                "identifier": "R_ARM_PC13",
                "newPage": false,
                "searchKey": "elf.R_ARM_PC13",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PC13"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PC13 R_ARM = 4\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ABS16",
              "documentation": {
                "identifier": "R_ARM_ABS16",
                "newPage": false,
                "searchKey": "elf.R_ARM_ABS16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ABS16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ABS16 R_ARM = 5\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ABS12",
              "documentation": {
                "identifier": "R_ARM_ABS12",
                "newPage": false,
                "searchKey": "elf.R_ARM_ABS12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ABS12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ABS12 R_ARM = 6\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_ABS5",
              "documentation": {
                "identifier": "R_ARM_THM_ABS5",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_ABS5",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_ABS5"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_ABS5 R_ARM = 7\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ABS8",
              "documentation": {
                "identifier": "R_ARM_ABS8",
                "newPage": false,
                "searchKey": "elf.R_ARM_ABS8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ABS8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ABS8 R_ARM = 8\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_SBREL32",
              "documentation": {
                "identifier": "R_ARM_SBREL32",
                "newPage": false,
                "searchKey": "elf.R_ARM_SBREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_SBREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_SBREL32 R_ARM = 9\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_PC22",
              "documentation": {
                "identifier": "R_ARM_THM_PC22",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_PC22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_PC22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_PC22 R_ARM = 10\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_PC8",
              "documentation": {
                "identifier": "R_ARM_THM_PC8",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_PC8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_PC8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_PC8 R_ARM = 11\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_AMP_VCALL9",
              "documentation": {
                "identifier": "R_ARM_AMP_VCALL9",
                "newPage": false,
                "searchKey": "elf.R_ARM_AMP_VCALL9",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_AMP_VCALL9"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_AMP_VCALL9 R_ARM = 12\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_SWI24",
              "documentation": {
                "identifier": "R_ARM_SWI24",
                "newPage": false,
                "searchKey": "elf.R_ARM_SWI24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_SWI24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_SWI24 R_ARM = 13\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_SWI8",
              "documentation": {
                "identifier": "R_ARM_THM_SWI8",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_SWI8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_SWI8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_SWI8 R_ARM = 14\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_XPC25",
              "documentation": {
                "identifier": "R_ARM_XPC25",
                "newPage": false,
                "searchKey": "elf.R_ARM_XPC25",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_XPC25"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_XPC25 R_ARM = 15\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_XPC22",
              "documentation": {
                "identifier": "R_ARM_THM_XPC22",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_XPC22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_XPC22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_XPC22 R_ARM = 16\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_DTPMOD32",
              "documentation": {
                "identifier": "R_ARM_TLS_DTPMOD32",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_DTPMOD32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_DTPMOD32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_DTPMOD32 R_ARM = 17\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_DTPOFF32",
              "documentation": {
                "identifier": "R_ARM_TLS_DTPOFF32",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_DTPOFF32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_DTPOFF32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_DTPOFF32 R_ARM = 18\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_TPOFF32",
              "documentation": {
                "identifier": "R_ARM_TLS_TPOFF32",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_TPOFF32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_TPOFF32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_TPOFF32 R_ARM = 19\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_COPY",
              "documentation": {
                "identifier": "R_ARM_COPY",
                "newPage": false,
                "searchKey": "elf.R_ARM_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_COPY R_ARM = 20 /* Copy data from shared object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GLOB_DAT",
              "documentation": {
                "identifier": "R_ARM_GLOB_DAT",
                "newPage": false,
                "searchKey": "elf.R_ARM_GLOB_DAT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GLOB_DAT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GLOB_DAT R_ARM = 21 /* Set GOT entry to data address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_JUMP_SLOT",
              "documentation": {
                "identifier": "R_ARM_JUMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_ARM_JUMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_JUMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_JUMP_SLOT R_ARM = 22 /* Set GOT entry to code address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_RELATIVE",
              "documentation": {
                "identifier": "R_ARM_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_ARM_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_RELATIVE R_ARM = 23 /* Add load address of shared object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GOTOFF",
              "documentation": {
                "identifier": "R_ARM_GOTOFF",
                "newPage": false,
                "searchKey": "elf.R_ARM_GOTOFF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GOTOFF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GOTOFF R_ARM = 24 /* Add GOT-relative symbol address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GOTPC",
              "documentation": {
                "identifier": "R_ARM_GOTPC",
                "newPage": false,
                "searchKey": "elf.R_ARM_GOTPC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GOTPC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GOTPC R_ARM = 25 /* Add PC-relative GOT table address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GOT32",
              "documentation": {
                "identifier": "R_ARM_GOT32",
                "newPage": false,
                "searchKey": "elf.R_ARM_GOT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GOT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GOT32 R_ARM = 26 /* Add PC-relative GOT offset. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PLT32",
              "documentation": {
                "identifier": "R_ARM_PLT32",
                "newPage": false,
                "searchKey": "elf.R_ARM_PLT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PLT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PLT32 R_ARM = 27 /* Add PC-relative PLT offset. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_CALL",
              "documentation": {
                "identifier": "R_ARM_CALL",
                "newPage": false,
                "searchKey": "elf.R_ARM_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_CALL R_ARM = 28\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_JUMP24",
              "documentation": {
                "identifier": "R_ARM_JUMP24",
                "newPage": false,
                "searchKey": "elf.R_ARM_JUMP24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_JUMP24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_JUMP24 R_ARM = 29\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_JUMP24",
              "documentation": {
                "identifier": "R_ARM_THM_JUMP24",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_JUMP24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_JUMP24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_JUMP24 R_ARM = 30\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_BASE_ABS",
              "documentation": {
                "identifier": "R_ARM_BASE_ABS",
                "newPage": false,
                "searchKey": "elf.R_ARM_BASE_ABS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_BASE_ABS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_BASE_ABS R_ARM = 31\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_PCREL_7_0",
              "documentation": {
                "identifier": "R_ARM_ALU_PCREL_7_0",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_PCREL_7_0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_PCREL_7_0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_PCREL_7_0 R_ARM = 32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_PCREL_15_8",
              "documentation": {
                "identifier": "R_ARM_ALU_PCREL_15_8",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_PCREL_15_8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_PCREL_15_8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_PCREL_15_8 R_ARM = 33\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_PCREL_23_15",
              "documentation": {
                "identifier": "R_ARM_ALU_PCREL_23_15",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_PCREL_23_15",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_PCREL_23_15"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_PCREL_23_15 R_ARM = 34\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDR_SBREL_11_10_NC",
              "documentation": {
                "identifier": "R_ARM_LDR_SBREL_11_10_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDR_SBREL_11_10_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDR_SBREL_11_10_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDR_SBREL_11_10_NC R_ARM = 35\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_SBREL_19_12_NC",
              "documentation": {
                "identifier": "R_ARM_ALU_SBREL_19_12_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_SBREL_19_12_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_SBREL_19_12_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_SBREL_19_12_NC R_ARM = 36\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_SBREL_27_20_CK",
              "documentation": {
                "identifier": "R_ARM_ALU_SBREL_27_20_CK",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_SBREL_27_20_CK",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_SBREL_27_20_CK"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_SBREL_27_20_CK R_ARM = 37\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TARGET1",
              "documentation": {
                "identifier": "R_ARM_TARGET1",
                "newPage": false,
                "searchKey": "elf.R_ARM_TARGET1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TARGET1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TARGET1 R_ARM = 38\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_SBREL31",
              "documentation": {
                "identifier": "R_ARM_SBREL31",
                "newPage": false,
                "searchKey": "elf.R_ARM_SBREL31",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_SBREL31"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_SBREL31 R_ARM = 39\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_V4BX",
              "documentation": {
                "identifier": "R_ARM_V4BX",
                "newPage": false,
                "searchKey": "elf.R_ARM_V4BX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_V4BX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_V4BX R_ARM = 40\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TARGET2",
              "documentation": {
                "identifier": "R_ARM_TARGET2",
                "newPage": false,
                "searchKey": "elf.R_ARM_TARGET2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TARGET2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TARGET2 R_ARM = 41\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PREL31",
              "documentation": {
                "identifier": "R_ARM_PREL31",
                "newPage": false,
                "searchKey": "elf.R_ARM_PREL31",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PREL31"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PREL31 R_ARM = 42\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_MOVW_ABS_NC",
              "documentation": {
                "identifier": "R_ARM_MOVW_ABS_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_MOVW_ABS_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_MOVW_ABS_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_MOVW_ABS_NC R_ARM = 43\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_MOVT_ABS",
              "documentation": {
                "identifier": "R_ARM_MOVT_ABS",
                "newPage": false,
                "searchKey": "elf.R_ARM_MOVT_ABS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_MOVT_ABS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_MOVT_ABS R_ARM = 44\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_MOVW_PREL_NC",
              "documentation": {
                "identifier": "R_ARM_MOVW_PREL_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_MOVW_PREL_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_MOVW_PREL_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_MOVW_PREL_NC R_ARM = 45\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_MOVT_PREL",
              "documentation": {
                "identifier": "R_ARM_MOVT_PREL",
                "newPage": false,
                "searchKey": "elf.R_ARM_MOVT_PREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_MOVT_PREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_MOVT_PREL R_ARM = 46\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_MOVW_ABS_NC",
              "documentation": {
                "identifier": "R_ARM_THM_MOVW_ABS_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_MOVW_ABS_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_MOVW_ABS_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_MOVW_ABS_NC R_ARM = 47\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_MOVT_ABS",
              "documentation": {
                "identifier": "R_ARM_THM_MOVT_ABS",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_MOVT_ABS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_MOVT_ABS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_MOVT_ABS R_ARM = 48\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_MOVW_PREL_NC",
              "documentation": {
                "identifier": "R_ARM_THM_MOVW_PREL_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_MOVW_PREL_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_MOVW_PREL_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_MOVW_PREL_NC R_ARM = 49\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_MOVT_PREL",
              "documentation": {
                "identifier": "R_ARM_THM_MOVT_PREL",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_MOVT_PREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_MOVT_PREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_MOVT_PREL R_ARM = 50\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_JUMP19",
              "documentation": {
                "identifier": "R_ARM_THM_JUMP19",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_JUMP19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_JUMP19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_JUMP19 R_ARM = 51\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_JUMP6",
              "documentation": {
                "identifier": "R_ARM_THM_JUMP6",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_JUMP6",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_JUMP6"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_JUMP6 R_ARM = 52\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_ALU_PREL_11_0",
              "documentation": {
                "identifier": "R_ARM_THM_ALU_PREL_11_0",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_ALU_PREL_11_0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_ALU_PREL_11_0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_ALU_PREL_11_0 R_ARM = 53\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_PC12",
              "documentation": {
                "identifier": "R_ARM_THM_PC12",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_PC12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_PC12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_PC12 R_ARM = 54\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ABS32_NOI",
              "documentation": {
                "identifier": "R_ARM_ABS32_NOI",
                "newPage": false,
                "searchKey": "elf.R_ARM_ABS32_NOI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ABS32_NOI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ABS32_NOI R_ARM = 55\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_REL32_NOI",
              "documentation": {
                "identifier": "R_ARM_REL32_NOI",
                "newPage": false,
                "searchKey": "elf.R_ARM_REL32_NOI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_REL32_NOI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_REL32_NOI R_ARM = 56\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_PC_G0_NC",
              "documentation": {
                "identifier": "R_ARM_ALU_PC_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_PC_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_PC_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_PC_G0_NC R_ARM = 57\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_PC_G0",
              "documentation": {
                "identifier": "R_ARM_ALU_PC_G0",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_PC_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_PC_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_PC_G0 R_ARM = 58\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_PC_G1_NC",
              "documentation": {
                "identifier": "R_ARM_ALU_PC_G1_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_PC_G1_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_PC_G1_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_PC_G1_NC R_ARM = 59\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_PC_G1",
              "documentation": {
                "identifier": "R_ARM_ALU_PC_G1",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_PC_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_PC_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_PC_G1 R_ARM = 60\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_PC_G2",
              "documentation": {
                "identifier": "R_ARM_ALU_PC_G2",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_PC_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_PC_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_PC_G2 R_ARM = 61\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDR_PC_G1",
              "documentation": {
                "identifier": "R_ARM_LDR_PC_G1",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDR_PC_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDR_PC_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDR_PC_G1 R_ARM = 62\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDR_PC_G2",
              "documentation": {
                "identifier": "R_ARM_LDR_PC_G2",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDR_PC_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDR_PC_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDR_PC_G2 R_ARM = 63\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDRS_PC_G0",
              "documentation": {
                "identifier": "R_ARM_LDRS_PC_G0",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDRS_PC_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDRS_PC_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDRS_PC_G0 R_ARM = 64\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDRS_PC_G1",
              "documentation": {
                "identifier": "R_ARM_LDRS_PC_G1",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDRS_PC_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDRS_PC_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDRS_PC_G1 R_ARM = 65\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDRS_PC_G2",
              "documentation": {
                "identifier": "R_ARM_LDRS_PC_G2",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDRS_PC_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDRS_PC_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDRS_PC_G2 R_ARM = 66\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDC_PC_G0",
              "documentation": {
                "identifier": "R_ARM_LDC_PC_G0",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDC_PC_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDC_PC_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDC_PC_G0 R_ARM = 67\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDC_PC_G1",
              "documentation": {
                "identifier": "R_ARM_LDC_PC_G1",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDC_PC_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDC_PC_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDC_PC_G1 R_ARM = 68\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDC_PC_G2",
              "documentation": {
                "identifier": "R_ARM_LDC_PC_G2",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDC_PC_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDC_PC_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDC_PC_G2 R_ARM = 69\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_SB_G0_NC",
              "documentation": {
                "identifier": "R_ARM_ALU_SB_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_SB_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_SB_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_SB_G0_NC R_ARM = 70\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_SB_G0",
              "documentation": {
                "identifier": "R_ARM_ALU_SB_G0",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_SB_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_SB_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_SB_G0 R_ARM = 71\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_SB_G1_NC",
              "documentation": {
                "identifier": "R_ARM_ALU_SB_G1_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_SB_G1_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_SB_G1_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_SB_G1_NC R_ARM = 72\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_SB_G1",
              "documentation": {
                "identifier": "R_ARM_ALU_SB_G1",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_SB_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_SB_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_SB_G1 R_ARM = 73\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ALU_SB_G2",
              "documentation": {
                "identifier": "R_ARM_ALU_SB_G2",
                "newPage": false,
                "searchKey": "elf.R_ARM_ALU_SB_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ALU_SB_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ALU_SB_G2 R_ARM = 74\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDR_SB_G0",
              "documentation": {
                "identifier": "R_ARM_LDR_SB_G0",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDR_SB_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDR_SB_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDR_SB_G0 R_ARM = 75\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDR_SB_G1",
              "documentation": {
                "identifier": "R_ARM_LDR_SB_G1",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDR_SB_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDR_SB_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDR_SB_G1 R_ARM = 76\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDR_SB_G2",
              "documentation": {
                "identifier": "R_ARM_LDR_SB_G2",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDR_SB_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDR_SB_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDR_SB_G2 R_ARM = 77\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDRS_SB_G0",
              "documentation": {
                "identifier": "R_ARM_LDRS_SB_G0",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDRS_SB_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDRS_SB_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDRS_SB_G0 R_ARM = 78\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDRS_SB_G1",
              "documentation": {
                "identifier": "R_ARM_LDRS_SB_G1",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDRS_SB_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDRS_SB_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDRS_SB_G1 R_ARM = 79\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDRS_SB_G2",
              "documentation": {
                "identifier": "R_ARM_LDRS_SB_G2",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDRS_SB_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDRS_SB_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDRS_SB_G2 R_ARM = 80\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDC_SB_G0",
              "documentation": {
                "identifier": "R_ARM_LDC_SB_G0",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDC_SB_G0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDC_SB_G0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDC_SB_G0 R_ARM = 81\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDC_SB_G1",
              "documentation": {
                "identifier": "R_ARM_LDC_SB_G1",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDC_SB_G1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDC_SB_G1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDC_SB_G1 R_ARM = 82\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_LDC_SB_G2",
              "documentation": {
                "identifier": "R_ARM_LDC_SB_G2",
                "newPage": false,
                "searchKey": "elf.R_ARM_LDC_SB_G2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_LDC_SB_G2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_LDC_SB_G2 R_ARM = 83\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_MOVW_BREL_NC",
              "documentation": {
                "identifier": "R_ARM_MOVW_BREL_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_MOVW_BREL_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_MOVW_BREL_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_MOVW_BREL_NC R_ARM = 84\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_MOVT_BREL",
              "documentation": {
                "identifier": "R_ARM_MOVT_BREL",
                "newPage": false,
                "searchKey": "elf.R_ARM_MOVT_BREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_MOVT_BREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_MOVT_BREL R_ARM = 85\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_MOVW_BREL",
              "documentation": {
                "identifier": "R_ARM_MOVW_BREL",
                "newPage": false,
                "searchKey": "elf.R_ARM_MOVW_BREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_MOVW_BREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_MOVW_BREL R_ARM = 86\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_MOVW_BREL_NC",
              "documentation": {
                "identifier": "R_ARM_THM_MOVW_BREL_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_MOVW_BREL_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_MOVW_BREL_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_MOVW_BREL_NC R_ARM = 87\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_MOVT_BREL",
              "documentation": {
                "identifier": "R_ARM_THM_MOVT_BREL",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_MOVT_BREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_MOVT_BREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_MOVT_BREL R_ARM = 88\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_MOVW_BREL",
              "documentation": {
                "identifier": "R_ARM_THM_MOVW_BREL",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_MOVW_BREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_MOVW_BREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_MOVW_BREL R_ARM = 89\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_GOTDESC",
              "documentation": {
                "identifier": "R_ARM_TLS_GOTDESC",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_GOTDESC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_GOTDESC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_GOTDESC R_ARM = 90\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_CALL",
              "documentation": {
                "identifier": "R_ARM_TLS_CALL",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_CALL R_ARM = 91\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_DESCSEQ",
              "documentation": {
                "identifier": "R_ARM_TLS_DESCSEQ",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_DESCSEQ",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_DESCSEQ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_DESCSEQ R_ARM = 92\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_TLS_CALL",
              "documentation": {
                "identifier": "R_ARM_THM_TLS_CALL",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_TLS_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_TLS_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_TLS_CALL R_ARM = 93\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PLT32_ABS",
              "documentation": {
                "identifier": "R_ARM_PLT32_ABS",
                "newPage": false,
                "searchKey": "elf.R_ARM_PLT32_ABS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PLT32_ABS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PLT32_ABS R_ARM = 94\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GOT_ABS",
              "documentation": {
                "identifier": "R_ARM_GOT_ABS",
                "newPage": false,
                "searchKey": "elf.R_ARM_GOT_ABS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GOT_ABS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GOT_ABS R_ARM = 95\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GOT_PREL",
              "documentation": {
                "identifier": "R_ARM_GOT_PREL",
                "newPage": false,
                "searchKey": "elf.R_ARM_GOT_PREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GOT_PREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GOT_PREL R_ARM = 96\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GOT_BREL12",
              "documentation": {
                "identifier": "R_ARM_GOT_BREL12",
                "newPage": false,
                "searchKey": "elf.R_ARM_GOT_BREL12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GOT_BREL12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GOT_BREL12 R_ARM = 97\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GOTOFF12",
              "documentation": {
                "identifier": "R_ARM_GOTOFF12",
                "newPage": false,
                "searchKey": "elf.R_ARM_GOTOFF12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GOTOFF12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GOTOFF12 R_ARM = 98\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GOTRELAX",
              "documentation": {
                "identifier": "R_ARM_GOTRELAX",
                "newPage": false,
                "searchKey": "elf.R_ARM_GOTRELAX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GOTRELAX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GOTRELAX R_ARM = 99\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GNU_VTENTRY",
              "documentation": {
                "identifier": "R_ARM_GNU_VTENTRY",
                "newPage": false,
                "searchKey": "elf.R_ARM_GNU_VTENTRY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GNU_VTENTRY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GNU_VTENTRY R_ARM = 100\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_GNU_VTINHERIT",
              "documentation": {
                "identifier": "R_ARM_GNU_VTINHERIT",
                "newPage": false,
                "searchKey": "elf.R_ARM_GNU_VTINHERIT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_GNU_VTINHERIT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_GNU_VTINHERIT R_ARM = 101\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_JUMP11",
              "documentation": {
                "identifier": "R_ARM_THM_JUMP11",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_JUMP11",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_JUMP11"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_JUMP11 R_ARM = 102\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_JUMP8",
              "documentation": {
                "identifier": "R_ARM_THM_JUMP8",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_JUMP8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_JUMP8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_JUMP8 R_ARM = 103\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_GD32",
              "documentation": {
                "identifier": "R_ARM_TLS_GD32",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_GD32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_GD32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_GD32 R_ARM = 104\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_LDM32",
              "documentation": {
                "identifier": "R_ARM_TLS_LDM32",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_LDM32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_LDM32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_LDM32 R_ARM = 105\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_LDO32",
              "documentation": {
                "identifier": "R_ARM_TLS_LDO32",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_LDO32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_LDO32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_LDO32 R_ARM = 106\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_IE32",
              "documentation": {
                "identifier": "R_ARM_TLS_IE32",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_IE32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_IE32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_IE32 R_ARM = 107\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_LE32",
              "documentation": {
                "identifier": "R_ARM_TLS_LE32",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_LE32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_LE32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_LE32 R_ARM = 108\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_LDO12",
              "documentation": {
                "identifier": "R_ARM_TLS_LDO12",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_LDO12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_LDO12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_LDO12 R_ARM = 109\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_LE12",
              "documentation": {
                "identifier": "R_ARM_TLS_LE12",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_LE12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_LE12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_LE12 R_ARM = 110\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_TLS_IE12GP",
              "documentation": {
                "identifier": "R_ARM_TLS_IE12GP",
                "newPage": false,
                "searchKey": "elf.R_ARM_TLS_IE12GP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_TLS_IE12GP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_TLS_IE12GP R_ARM = 111\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_0",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_0",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_0",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_0 R_ARM = 112\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_1",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_1",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_1",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_1 R_ARM = 113\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_2",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_2",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_2",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_2"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_2 R_ARM = 114\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_3",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_3",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_3",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_3"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_3 R_ARM = 115\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_4",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_4",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_4",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_4"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_4 R_ARM = 116\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_5",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_5",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_5",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_5"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_5 R_ARM = 117\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_6",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_6",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_6",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_6"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_6 R_ARM = 118\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_7",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_7",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_7",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_7"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_7 R_ARM = 119\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_8",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_8",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_8 R_ARM = 120\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_9",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_9",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_9",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_9"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_9 R_ARM = 121\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_10",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_10",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_10 R_ARM = 122\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_11",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_11",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_11",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_11"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_11 R_ARM = 123\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_12",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_12",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_12 R_ARM = 124\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_13",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_13",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_13",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_13"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_13 R_ARM = 125\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_14",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_14",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_14",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_14"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_14 R_ARM = 126\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_PRIVATE_15",
              "documentation": {
                "identifier": "R_ARM_PRIVATE_15",
                "newPage": false,
                "searchKey": "elf.R_ARM_PRIVATE_15",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_PRIVATE_15"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_PRIVATE_15 R_ARM = 127\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_ME_TOO",
              "documentation": {
                "identifier": "R_ARM_ME_TOO",
                "newPage": false,
                "searchKey": "elf.R_ARM_ME_TOO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_ME_TOO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_ME_TOO R_ARM = 128\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_TLS_DESCSEQ16",
              "documentation": {
                "identifier": "R_ARM_THM_TLS_DESCSEQ16",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_TLS_DESCSEQ16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_TLS_DESCSEQ16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_TLS_DESCSEQ16 R_ARM = 129\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_TLS_DESCSEQ32",
              "documentation": {
                "identifier": "R_ARM_THM_TLS_DESCSEQ32",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_TLS_DESCSEQ32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_TLS_DESCSEQ32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_TLS_DESCSEQ32 R_ARM = 130\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_GOT_BREL12",
              "documentation": {
                "identifier": "R_ARM_THM_GOT_BREL12",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_GOT_BREL12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_GOT_BREL12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_GOT_BREL12 R_ARM = 131\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_ALU_ABS_G0_NC",
              "documentation": {
                "identifier": "R_ARM_THM_ALU_ABS_G0_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_ALU_ABS_G0_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_ALU_ABS_G0_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_ALU_ABS_G0_NC R_ARM = 132\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_ALU_ABS_G1_NC",
              "documentation": {
                "identifier": "R_ARM_THM_ALU_ABS_G1_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_ALU_ABS_G1_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_ALU_ABS_G1_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_ALU_ABS_G1_NC R_ARM = 133\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_ALU_ABS_G2_NC",
              "documentation": {
                "identifier": "R_ARM_THM_ALU_ABS_G2_NC",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_ALU_ABS_G2_NC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_ALU_ABS_G2_NC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_ALU_ABS_G2_NC R_ARM = 134\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_ALU_ABS_G3",
              "documentation": {
                "identifier": "R_ARM_THM_ALU_ABS_G3",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_ALU_ABS_G3",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_ALU_ABS_G3"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_ALU_ABS_G3 R_ARM = 135\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_IRELATIVE",
              "documentation": {
                "identifier": "R_ARM_IRELATIVE",
                "newPage": false,
                "searchKey": "elf.R_ARM_IRELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_IRELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_IRELATIVE R_ARM = 160\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_RXPC25",
              "documentation": {
                "identifier": "R_ARM_RXPC25",
                "newPage": false,
                "searchKey": "elf.R_ARM_RXPC25",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_RXPC25"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_RXPC25 R_ARM = 249\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_RSBREL32",
              "documentation": {
                "identifier": "R_ARM_RSBREL32",
                "newPage": false,
                "searchKey": "elf.R_ARM_RSBREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_RSBREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_RSBREL32 R_ARM = 250\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_THM_RPC22",
              "documentation": {
                "identifier": "R_ARM_THM_RPC22",
                "newPage": false,
                "searchKey": "elf.R_ARM_THM_RPC22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_THM_RPC22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_THM_RPC22 R_ARM = 251\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_RREL32",
              "documentation": {
                "identifier": "R_ARM_RREL32",
                "newPage": false,
                "searchKey": "elf.R_ARM_RREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_RREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_RREL32 R_ARM = 252\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_RABS32",
              "documentation": {
                "identifier": "R_ARM_RABS32",
                "newPage": false,
                "searchKey": "elf.R_ARM_RABS32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_RABS32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_RABS32 R_ARM = 253\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_RPC24",
              "documentation": {
                "identifier": "R_ARM_RPC24",
                "newPage": false,
                "searchKey": "elf.R_ARM_RPC24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_RPC24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_RPC24 R_ARM = 254\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM_RBASE",
              "documentation": {
                "identifier": "R_ARM_RBASE",
                "newPage": false,
                "searchKey": "elf.R_ARM_RBASE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_ARM_RBASE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_ARM_RBASE R_ARM = 255\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_NONE",
              "documentation": {
                "identifier": "R_386_NONE",
                "newPage": false,
                "searchKey": "elf.R_386_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_NONE R_386 = 0 /* No relocation. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_32",
              "documentation": {
                "identifier": "R_386_32",
                "newPage": false,
                "searchKey": "elf.R_386_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_32 R_386 = 1 /* Add symbol value. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_PC32",
              "documentation": {
                "identifier": "R_386_PC32",
                "newPage": false,
                "searchKey": "elf.R_386_PC32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_PC32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_PC32 R_386 = 2 /* Add PC-relative symbol value. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_GOT32",
              "documentation": {
                "identifier": "R_386_GOT32",
                "newPage": false,
                "searchKey": "elf.R_386_GOT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_GOT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_GOT32 R_386 = 3 /* Add PC-relative GOT offset. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_PLT32",
              "documentation": {
                "identifier": "R_386_PLT32",
                "newPage": false,
                "searchKey": "elf.R_386_PLT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_PLT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_PLT32 R_386 = 4 /* Add PC-relative PLT offset. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_COPY",
              "documentation": {
                "identifier": "R_386_COPY",
                "newPage": false,
                "searchKey": "elf.R_386_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_COPY R_386 = 5 /* Copy data from shared object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_GLOB_DAT",
              "documentation": {
                "identifier": "R_386_GLOB_DAT",
                "newPage": false,
                "searchKey": "elf.R_386_GLOB_DAT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_GLOB_DAT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_GLOB_DAT R_386 = 6 /* Set GOT entry to data address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_JMP_SLOT",
              "documentation": {
                "identifier": "R_386_JMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_386_JMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_JMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_JMP_SLOT R_386 = 7 /* Set GOT entry to code address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_RELATIVE",
              "documentation": {
                "identifier": "R_386_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_386_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_RELATIVE R_386 = 8 /* Add load address of shared object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_GOTOFF",
              "documentation": {
                "identifier": "R_386_GOTOFF",
                "newPage": false,
                "searchKey": "elf.R_386_GOTOFF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_GOTOFF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_GOTOFF R_386 = 9 /* Add GOT-relative symbol address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_GOTPC",
              "documentation": {
                "identifier": "R_386_GOTPC",
                "newPage": false,
                "searchKey": "elf.R_386_GOTPC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_GOTPC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_GOTPC R_386 = 10 /* Add PC-relative GOT table address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_32PLT",
              "documentation": {
                "identifier": "R_386_32PLT",
                "newPage": false,
                "searchKey": "elf.R_386_32PLT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_32PLT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_32PLT R_386 = 11\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_TPOFF",
              "documentation": {
                "identifier": "R_386_TLS_TPOFF",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_TPOFF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_TPOFF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_TPOFF R_386 = 14 /* Negative offset in static TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_IE",
              "documentation": {
                "identifier": "R_386_TLS_IE",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_IE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_IE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_IE R_386 = 15 /* Absolute address of GOT for -ve static TLS */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_GOTIE",
              "documentation": {
                "identifier": "R_386_TLS_GOTIE",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_GOTIE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_GOTIE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_GOTIE R_386 = 16 /* GOT entry for negative static TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_LE",
              "documentation": {
                "identifier": "R_386_TLS_LE",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_LE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_LE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_LE R_386 = 17 /* Negative offset relative to static TLS */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_GD",
              "documentation": {
                "identifier": "R_386_TLS_GD",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_GD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_GD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_GD R_386 = 18 /* 32 bit offset to GOT (index,off) pair */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_LDM",
              "documentation": {
                "identifier": "R_386_TLS_LDM",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_LDM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_LDM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_LDM R_386 = 19 /* 32 bit offset to GOT (index,zero) pair */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_16",
              "documentation": {
                "identifier": "R_386_16",
                "newPage": false,
                "searchKey": "elf.R_386_16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_16 R_386 = 20\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_PC16",
              "documentation": {
                "identifier": "R_386_PC16",
                "newPage": false,
                "searchKey": "elf.R_386_PC16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_PC16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_PC16 R_386 = 21\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_8",
              "documentation": {
                "identifier": "R_386_8",
                "newPage": false,
                "searchKey": "elf.R_386_8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_8 R_386 = 22\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_PC8",
              "documentation": {
                "identifier": "R_386_PC8",
                "newPage": false,
                "searchKey": "elf.R_386_PC8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_PC8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_PC8 R_386 = 23\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_GD_32",
              "documentation": {
                "identifier": "R_386_TLS_GD_32",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_GD_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_GD_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_GD_32 R_386 = 24 /* 32 bit offset to GOT (index,off) pair */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_GD_PUSH",
              "documentation": {
                "identifier": "R_386_TLS_GD_PUSH",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_GD_PUSH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_GD_PUSH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_GD_PUSH R_386 = 25 /* pushl instruction for Sun ABI GD sequence */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_GD_CALL",
              "documentation": {
                "identifier": "R_386_TLS_GD_CALL",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_GD_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_GD_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_GD_CALL R_386 = 26 /* call instruction for Sun ABI GD sequence */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_GD_POP",
              "documentation": {
                "identifier": "R_386_TLS_GD_POP",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_GD_POP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_GD_POP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_GD_POP R_386 = 27 /* popl instruction for Sun ABI GD sequence */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_LDM_32",
              "documentation": {
                "identifier": "R_386_TLS_LDM_32",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_LDM_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_LDM_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_LDM_32 R_386 = 28 /* 32 bit offset to GOT (index,zero) pair */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_LDM_PUSH",
              "documentation": {
                "identifier": "R_386_TLS_LDM_PUSH",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_LDM_PUSH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_LDM_PUSH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_LDM_PUSH R_386 = 29 /* pushl instruction for Sun ABI LD sequence */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_LDM_CALL",
              "documentation": {
                "identifier": "R_386_TLS_LDM_CALL",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_LDM_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_LDM_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_LDM_CALL R_386 = 30 /* call instruction for Sun ABI LD sequence */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_LDM_POP",
              "documentation": {
                "identifier": "R_386_TLS_LDM_POP",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_LDM_POP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_LDM_POP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_LDM_POP R_386 = 31 /* popl instruction for Sun ABI LD sequence */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_LDO_32",
              "documentation": {
                "identifier": "R_386_TLS_LDO_32",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_LDO_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_LDO_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_LDO_32 R_386 = 32 /* 32 bit offset from start of TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_IE_32",
              "documentation": {
                "identifier": "R_386_TLS_IE_32",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_IE_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_IE_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_IE_32 R_386 = 33 /* 32 bit offset to GOT static TLS offset entry */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_LE_32",
              "documentation": {
                "identifier": "R_386_TLS_LE_32",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_LE_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_LE_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_LE_32 R_386 = 34 /* 32 bit offset within static TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_DTPMOD32",
              "documentation": {
                "identifier": "R_386_TLS_DTPMOD32",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_DTPMOD32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_DTPMOD32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_DTPMOD32 R_386 = 35 /* GOT entry containing TLS index */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_DTPOFF32",
              "documentation": {
                "identifier": "R_386_TLS_DTPOFF32",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_DTPOFF32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_DTPOFF32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_DTPOFF32 R_386 = 36 /* GOT entry containing TLS offset */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_TPOFF32",
              "documentation": {
                "identifier": "R_386_TLS_TPOFF32",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_TPOFF32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_TPOFF32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_TPOFF32 R_386 = 37 /* GOT entry of -ve static TLS offset */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_SIZE32",
              "documentation": {
                "identifier": "R_386_SIZE32",
                "newPage": false,
                "searchKey": "elf.R_386_SIZE32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_SIZE32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_SIZE32 R_386 = 38\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_GOTDESC",
              "documentation": {
                "identifier": "R_386_TLS_GOTDESC",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_GOTDESC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_GOTDESC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_GOTDESC R_386 = 39\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_DESC_CALL",
              "documentation": {
                "identifier": "R_386_TLS_DESC_CALL",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_DESC_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_DESC_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_DESC_CALL R_386 = 40\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_TLS_DESC",
              "documentation": {
                "identifier": "R_386_TLS_DESC",
                "newPage": false,
                "searchKey": "elf.R_386_TLS_DESC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_TLS_DESC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_TLS_DESC R_386 = 41\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_IRELATIVE",
              "documentation": {
                "identifier": "R_386_IRELATIVE",
                "newPage": false,
                "searchKey": "elf.R_386_IRELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_IRELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_IRELATIVE R_386 = 42\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386_GOT32X",
              "documentation": {
                "identifier": "R_386_GOT32X",
                "newPage": false,
                "searchKey": "elf.R_386_GOT32X",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_386_GOT32X"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_386_GOT32X R_386 = 43\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_NONE",
              "documentation": {
                "identifier": "R_MIPS_NONE",
                "newPage": false,
                "searchKey": "elf.R_MIPS_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_NONE R_MIPS = 0\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_16",
              "documentation": {
                "identifier": "R_MIPS_16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_16 R_MIPS = 1\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_32",
              "documentation": {
                "identifier": "R_MIPS_32",
                "newPage": false,
                "searchKey": "elf.R_MIPS_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_32 R_MIPS = 2\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_REL32",
              "documentation": {
                "identifier": "R_MIPS_REL32",
                "newPage": false,
                "searchKey": "elf.R_MIPS_REL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_REL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_REL32 R_MIPS = 3\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_26",
              "documentation": {
                "identifier": "R_MIPS_26",
                "newPage": false,
                "searchKey": "elf.R_MIPS_26",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_26"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_26 R_MIPS = 4\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_HI16",
              "documentation": {
                "identifier": "R_MIPS_HI16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_HI16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_HI16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_HI16 R_MIPS = 5 /* high 16 bits of symbol value */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_LO16",
              "documentation": {
                "identifier": "R_MIPS_LO16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_LO16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_LO16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_LO16 R_MIPS = 6 /* low 16 bits of symbol value */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_GPREL16",
              "documentation": {
                "identifier": "R_MIPS_GPREL16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_GPREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_GPREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_GPREL16 R_MIPS = 7 /* GP-relative reference  */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_LITERAL",
              "documentation": {
                "identifier": "R_MIPS_LITERAL",
                "newPage": false,
                "searchKey": "elf.R_MIPS_LITERAL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_LITERAL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_LITERAL R_MIPS = 8 /* Reference to literal section  */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_GOT16",
              "documentation": {
                "identifier": "R_MIPS_GOT16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_GOT16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_GOT16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_GOT16 R_MIPS = 9 /* Reference to global offset table */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_PC16",
              "documentation": {
                "identifier": "R_MIPS_PC16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_PC16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_PC16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_PC16 R_MIPS = 10 /* 16 bit PC relative reference */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_CALL16",
              "documentation": {
                "identifier": "R_MIPS_CALL16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_CALL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_CALL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_CALL16 R_MIPS = 11 /* 16 bit call through glbl offset tbl */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_GPREL32",
              "documentation": {
                "identifier": "R_MIPS_GPREL32",
                "newPage": false,
                "searchKey": "elf.R_MIPS_GPREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_GPREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_GPREL32 R_MIPS = 12\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_SHIFT5",
              "documentation": {
                "identifier": "R_MIPS_SHIFT5",
                "newPage": false,
                "searchKey": "elf.R_MIPS_SHIFT5",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_SHIFT5"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_SHIFT5 R_MIPS = 16\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_SHIFT6",
              "documentation": {
                "identifier": "R_MIPS_SHIFT6",
                "newPage": false,
                "searchKey": "elf.R_MIPS_SHIFT6",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_SHIFT6"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_SHIFT6 R_MIPS = 17\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_64",
              "documentation": {
                "identifier": "R_MIPS_64",
                "newPage": false,
                "searchKey": "elf.R_MIPS_64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_64 R_MIPS = 18\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_GOT_DISP",
              "documentation": {
                "identifier": "R_MIPS_GOT_DISP",
                "newPage": false,
                "searchKey": "elf.R_MIPS_GOT_DISP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_GOT_DISP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_GOT_DISP R_MIPS = 19\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_GOT_PAGE",
              "documentation": {
                "identifier": "R_MIPS_GOT_PAGE",
                "newPage": false,
                "searchKey": "elf.R_MIPS_GOT_PAGE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_GOT_PAGE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_GOT_PAGE R_MIPS = 20\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_GOT_OFST",
              "documentation": {
                "identifier": "R_MIPS_GOT_OFST",
                "newPage": false,
                "searchKey": "elf.R_MIPS_GOT_OFST",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_GOT_OFST"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_GOT_OFST R_MIPS = 21\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_GOT_HI16",
              "documentation": {
                "identifier": "R_MIPS_GOT_HI16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_GOT_HI16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_GOT_HI16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_GOT_HI16 R_MIPS = 22\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_GOT_LO16",
              "documentation": {
                "identifier": "R_MIPS_GOT_LO16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_GOT_LO16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_GOT_LO16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_GOT_LO16 R_MIPS = 23\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_SUB",
              "documentation": {
                "identifier": "R_MIPS_SUB",
                "newPage": false,
                "searchKey": "elf.R_MIPS_SUB",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_SUB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_SUB R_MIPS = 24\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_INSERT_A",
              "documentation": {
                "identifier": "R_MIPS_INSERT_A",
                "newPage": false,
                "searchKey": "elf.R_MIPS_INSERT_A",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_INSERT_A"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_INSERT_A R_MIPS = 25\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_INSERT_B",
              "documentation": {
                "identifier": "R_MIPS_INSERT_B",
                "newPage": false,
                "searchKey": "elf.R_MIPS_INSERT_B",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_INSERT_B"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_INSERT_B R_MIPS = 26\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_DELETE",
              "documentation": {
                "identifier": "R_MIPS_DELETE",
                "newPage": false,
                "searchKey": "elf.R_MIPS_DELETE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_DELETE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_DELETE R_MIPS = 27\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_HIGHER",
              "documentation": {
                "identifier": "R_MIPS_HIGHER",
                "newPage": false,
                "searchKey": "elf.R_MIPS_HIGHER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_HIGHER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_HIGHER R_MIPS = 28\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_HIGHEST",
              "documentation": {
                "identifier": "R_MIPS_HIGHEST",
                "newPage": false,
                "searchKey": "elf.R_MIPS_HIGHEST",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_HIGHEST"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_HIGHEST R_MIPS = 29\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_CALL_HI16",
              "documentation": {
                "identifier": "R_MIPS_CALL_HI16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_CALL_HI16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_CALL_HI16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_CALL_HI16 R_MIPS = 30\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_CALL_LO16",
              "documentation": {
                "identifier": "R_MIPS_CALL_LO16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_CALL_LO16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_CALL_LO16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_CALL_LO16 R_MIPS = 31\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_SCN_DISP",
              "documentation": {
                "identifier": "R_MIPS_SCN_DISP",
                "newPage": false,
                "searchKey": "elf.R_MIPS_SCN_DISP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_SCN_DISP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_SCN_DISP R_MIPS = 32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_REL16",
              "documentation": {
                "identifier": "R_MIPS_REL16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_REL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_REL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_REL16 R_MIPS = 33\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_ADD_IMMEDIATE",
              "documentation": {
                "identifier": "R_MIPS_ADD_IMMEDIATE",
                "newPage": false,
                "searchKey": "elf.R_MIPS_ADD_IMMEDIATE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_ADD_IMMEDIATE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_ADD_IMMEDIATE R_MIPS = 34\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_PJUMP",
              "documentation": {
                "identifier": "R_MIPS_PJUMP",
                "newPage": false,
                "searchKey": "elf.R_MIPS_PJUMP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_PJUMP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_PJUMP R_MIPS = 35\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_RELGOT",
              "documentation": {
                "identifier": "R_MIPS_RELGOT",
                "newPage": false,
                "searchKey": "elf.R_MIPS_RELGOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_RELGOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_RELGOT R_MIPS = 36\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_JALR",
              "documentation": {
                "identifier": "R_MIPS_JALR",
                "newPage": false,
                "searchKey": "elf.R_MIPS_JALR",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_JALR"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_JALR R_MIPS = 37\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_DTPMOD32",
              "documentation": {
                "identifier": "R_MIPS_TLS_DTPMOD32",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_DTPMOD32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_DTPMOD32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_DTPMOD32 R_MIPS = 38 /* Module number 32 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_DTPREL32",
              "documentation": {
                "identifier": "R_MIPS_TLS_DTPREL32",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_DTPREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_DTPREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_DTPREL32 R_MIPS = 39 /* Module-relative offset 32 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_DTPMOD64",
              "documentation": {
                "identifier": "R_MIPS_TLS_DTPMOD64",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_DTPMOD64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_DTPMOD64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_DTPMOD64 R_MIPS = 40 /* Module number 64 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_DTPREL64",
              "documentation": {
                "identifier": "R_MIPS_TLS_DTPREL64",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_DTPREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_DTPREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_DTPREL64 R_MIPS = 41 /* Module-relative offset 64 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_GD",
              "documentation": {
                "identifier": "R_MIPS_TLS_GD",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_GD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_GD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_GD R_MIPS = 42 /* 16 bit GOT offset for GD */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_LDM",
              "documentation": {
                "identifier": "R_MIPS_TLS_LDM",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_LDM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_LDM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_LDM R_MIPS = 43 /* 16 bit GOT offset for LDM */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_DTPREL_HI16",
              "documentation": {
                "identifier": "R_MIPS_TLS_DTPREL_HI16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_DTPREL_HI16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_DTPREL_HI16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_DTPREL_HI16 R_MIPS = 44 /* Module-relative offset, high 16 bits */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_DTPREL_LO16",
              "documentation": {
                "identifier": "R_MIPS_TLS_DTPREL_LO16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_DTPREL_LO16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_DTPREL_LO16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_DTPREL_LO16 R_MIPS = 45 /* Module-relative offset, low 16 bits */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_GOTTPREL",
              "documentation": {
                "identifier": "R_MIPS_TLS_GOTTPREL",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_GOTTPREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_GOTTPREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_GOTTPREL R_MIPS = 46 /* 16 bit GOT offset for IE */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_TPREL32",
              "documentation": {
                "identifier": "R_MIPS_TLS_TPREL32",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_TPREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_TPREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_TPREL32 R_MIPS = 47 /* TP-relative offset, 32 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_TPREL64",
              "documentation": {
                "identifier": "R_MIPS_TLS_TPREL64",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_TPREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_TPREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_TPREL64 R_MIPS = 48 /* TP-relative offset, 64 bit */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_TPREL_HI16",
              "documentation": {
                "identifier": "R_MIPS_TLS_TPREL_HI16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_TPREL_HI16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_TPREL_HI16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_TPREL_HI16 R_MIPS = 49 /* TP-relative offset, high 16 bits */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS_TLS_TPREL_LO16",
              "documentation": {
                "identifier": "R_MIPS_TLS_TPREL_LO16",
                "newPage": false,
                "searchKey": "elf.R_MIPS_TLS_TPREL_LO16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_MIPS_TLS_TPREL_LO16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_MIPS_TLS_TPREL_LO16 R_MIPS = 50 /* TP-relative offset, low 16 bits */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_NONE",
              "documentation": {
                "identifier": "R_PPC_NONE",
                "newPage": false,
                "searchKey": "elf.R_PPC_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_NONE R_PPC = 0 // R_POWERPC_NONE\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_ADDR32",
              "documentation": {
                "identifier": "R_PPC_ADDR32",
                "newPage": false,
                "searchKey": "elf.R_PPC_ADDR32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_ADDR32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_ADDR32 R_PPC = 1 // R_POWERPC_ADDR32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_ADDR24",
              "documentation": {
                "identifier": "R_PPC_ADDR24",
                "newPage": false,
                "searchKey": "elf.R_PPC_ADDR24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_ADDR24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_ADDR24 R_PPC = 2 // R_POWERPC_ADDR24\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_ADDR16",
              "documentation": {
                "identifier": "R_PPC_ADDR16",
                "newPage": false,
                "searchKey": "elf.R_PPC_ADDR16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_ADDR16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_ADDR16 R_PPC = 3 // R_POWERPC_ADDR16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_ADDR16_LO",
              "documentation": {
                "identifier": "R_PPC_ADDR16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_ADDR16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_ADDR16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_ADDR16_LO R_PPC = 4 // R_POWERPC_ADDR16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_ADDR16_HI",
              "documentation": {
                "identifier": "R_PPC_ADDR16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_ADDR16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_ADDR16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_ADDR16_HI R_PPC = 5 // R_POWERPC_ADDR16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_ADDR16_HA",
              "documentation": {
                "identifier": "R_PPC_ADDR16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_ADDR16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_ADDR16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_ADDR16_HA R_PPC = 6 // R_POWERPC_ADDR16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_ADDR14",
              "documentation": {
                "identifier": "R_PPC_ADDR14",
                "newPage": false,
                "searchKey": "elf.R_PPC_ADDR14",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_ADDR14"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_ADDR14 R_PPC = 7 // R_POWERPC_ADDR14\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_ADDR14_BRTAKEN",
              "documentation": {
                "identifier": "R_PPC_ADDR14_BRTAKEN",
                "newPage": false,
                "searchKey": "elf.R_PPC_ADDR14_BRTAKEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_ADDR14_BRTAKEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_ADDR14_BRTAKEN R_PPC = 8 // R_POWERPC_ADDR14_BRTAKEN\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_ADDR14_BRNTAKEN",
              "documentation": {
                "identifier": "R_PPC_ADDR14_BRNTAKEN",
                "newPage": false,
                "searchKey": "elf.R_PPC_ADDR14_BRNTAKEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_ADDR14_BRNTAKEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_ADDR14_BRNTAKEN R_PPC = 9 // R_POWERPC_ADDR14_BRNTAKEN\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_REL24",
              "documentation": {
                "identifier": "R_PPC_REL24",
                "newPage": false,
                "searchKey": "elf.R_PPC_REL24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_REL24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_REL24 R_PPC = 10 // R_POWERPC_REL24\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_REL14",
              "documentation": {
                "identifier": "R_PPC_REL14",
                "newPage": false,
                "searchKey": "elf.R_PPC_REL14",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_REL14"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_REL14 R_PPC = 11 // R_POWERPC_REL14\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_REL14_BRTAKEN",
              "documentation": {
                "identifier": "R_PPC_REL14_BRTAKEN",
                "newPage": false,
                "searchKey": "elf.R_PPC_REL14_BRTAKEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_REL14_BRTAKEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_REL14_BRTAKEN R_PPC = 12 // R_POWERPC_REL14_BRTAKEN\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_REL14_BRNTAKEN",
              "documentation": {
                "identifier": "R_PPC_REL14_BRNTAKEN",
                "newPage": false,
                "searchKey": "elf.R_PPC_REL14_BRNTAKEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_REL14_BRNTAKEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_REL14_BRNTAKEN R_PPC = 13 // R_POWERPC_REL14_BRNTAKEN\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT16",
              "documentation": {
                "identifier": "R_PPC_GOT16",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT16 R_PPC = 14 // R_POWERPC_GOT16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT16_LO",
              "documentation": {
                "identifier": "R_PPC_GOT16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT16_LO R_PPC = 15 // R_POWERPC_GOT16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT16_HI",
              "documentation": {
                "identifier": "R_PPC_GOT16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT16_HI R_PPC = 16 // R_POWERPC_GOT16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT16_HA",
              "documentation": {
                "identifier": "R_PPC_GOT16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT16_HA R_PPC = 17 // R_POWERPC_GOT16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_PLTREL24",
              "documentation": {
                "identifier": "R_PPC_PLTREL24",
                "newPage": false,
                "searchKey": "elf.R_PPC_PLTREL24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_PLTREL24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_PLTREL24 R_PPC = 18\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_COPY",
              "documentation": {
                "identifier": "R_PPC_COPY",
                "newPage": false,
                "searchKey": "elf.R_PPC_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_COPY R_PPC = 19 // R_POWERPC_COPY\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GLOB_DAT",
              "documentation": {
                "identifier": "R_PPC_GLOB_DAT",
                "newPage": false,
                "searchKey": "elf.R_PPC_GLOB_DAT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GLOB_DAT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GLOB_DAT R_PPC = 20 // R_POWERPC_GLOB_DAT\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_JMP_SLOT",
              "documentation": {
                "identifier": "R_PPC_JMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_PPC_JMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_JMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_JMP_SLOT R_PPC = 21 // R_POWERPC_JMP_SLOT\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_RELATIVE",
              "documentation": {
                "identifier": "R_PPC_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_PPC_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_RELATIVE R_PPC = 22 // R_POWERPC_RELATIVE\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_LOCAL24PC",
              "documentation": {
                "identifier": "R_PPC_LOCAL24PC",
                "newPage": false,
                "searchKey": "elf.R_PPC_LOCAL24PC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_LOCAL24PC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_LOCAL24PC R_PPC = 23\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_UADDR32",
              "documentation": {
                "identifier": "R_PPC_UADDR32",
                "newPage": false,
                "searchKey": "elf.R_PPC_UADDR32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_UADDR32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_UADDR32 R_PPC = 24 // R_POWERPC_UADDR32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_UADDR16",
              "documentation": {
                "identifier": "R_PPC_UADDR16",
                "newPage": false,
                "searchKey": "elf.R_PPC_UADDR16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_UADDR16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_UADDR16 R_PPC = 25 // R_POWERPC_UADDR16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_REL32",
              "documentation": {
                "identifier": "R_PPC_REL32",
                "newPage": false,
                "searchKey": "elf.R_PPC_REL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_REL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_REL32 R_PPC = 26 // R_POWERPC_REL32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_PLT32",
              "documentation": {
                "identifier": "R_PPC_PLT32",
                "newPage": false,
                "searchKey": "elf.R_PPC_PLT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_PLT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_PLT32 R_PPC = 27 // R_POWERPC_PLT32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_PLTREL32",
              "documentation": {
                "identifier": "R_PPC_PLTREL32",
                "newPage": false,
                "searchKey": "elf.R_PPC_PLTREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_PLTREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_PLTREL32 R_PPC = 28 // R_POWERPC_PLTREL32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_PLT16_LO",
              "documentation": {
                "identifier": "R_PPC_PLT16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_PLT16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_PLT16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_PLT16_LO R_PPC = 29 // R_POWERPC_PLT16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_PLT16_HI",
              "documentation": {
                "identifier": "R_PPC_PLT16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_PLT16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_PLT16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_PLT16_HI R_PPC = 30 // R_POWERPC_PLT16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_PLT16_HA",
              "documentation": {
                "identifier": "R_PPC_PLT16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_PLT16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_PLT16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_PLT16_HA R_PPC = 31 // R_POWERPC_PLT16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_SDAREL16",
              "documentation": {
                "identifier": "R_PPC_SDAREL16",
                "newPage": false,
                "searchKey": "elf.R_PPC_SDAREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_SDAREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_SDAREL16 R_PPC = 32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_SECTOFF",
              "documentation": {
                "identifier": "R_PPC_SECTOFF",
                "newPage": false,
                "searchKey": "elf.R_PPC_SECTOFF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_SECTOFF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_SECTOFF R_PPC = 33 // R_POWERPC_SECTOFF\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_SECTOFF_LO",
              "documentation": {
                "identifier": "R_PPC_SECTOFF_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_SECTOFF_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_SECTOFF_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_SECTOFF_LO R_PPC = 34 // R_POWERPC_SECTOFF_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_SECTOFF_HI",
              "documentation": {
                "identifier": "R_PPC_SECTOFF_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_SECTOFF_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_SECTOFF_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_SECTOFF_HI R_PPC = 35 // R_POWERPC_SECTOFF_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_SECTOFF_HA",
              "documentation": {
                "identifier": "R_PPC_SECTOFF_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_SECTOFF_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_SECTOFF_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_SECTOFF_HA R_PPC = 36 // R_POWERPC_SECTOFF_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_TLS",
              "documentation": {
                "identifier": "R_PPC_TLS",
                "newPage": false,
                "searchKey": "elf.R_PPC_TLS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_TLS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_TLS R_PPC = 67 // R_POWERPC_TLS\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_DTPMOD32",
              "documentation": {
                "identifier": "R_PPC_DTPMOD32",
                "newPage": false,
                "searchKey": "elf.R_PPC_DTPMOD32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_DTPMOD32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_DTPMOD32 R_PPC = 68 // R_POWERPC_DTPMOD32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_TPREL16",
              "documentation": {
                "identifier": "R_PPC_TPREL16",
                "newPage": false,
                "searchKey": "elf.R_PPC_TPREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_TPREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_TPREL16 R_PPC = 69 // R_POWERPC_TPREL16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_TPREL16_LO",
              "documentation": {
                "identifier": "R_PPC_TPREL16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_TPREL16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_TPREL16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_TPREL16_LO R_PPC = 70 // R_POWERPC_TPREL16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_TPREL16_HI",
              "documentation": {
                "identifier": "R_PPC_TPREL16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_TPREL16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_TPREL16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_TPREL16_HI R_PPC = 71 // R_POWERPC_TPREL16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_TPREL16_HA",
              "documentation": {
                "identifier": "R_PPC_TPREL16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_TPREL16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_TPREL16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_TPREL16_HA R_PPC = 72 // R_POWERPC_TPREL16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_TPREL32",
              "documentation": {
                "identifier": "R_PPC_TPREL32",
                "newPage": false,
                "searchKey": "elf.R_PPC_TPREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_TPREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_TPREL32 R_PPC = 73 // R_POWERPC_TPREL32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_DTPREL16",
              "documentation": {
                "identifier": "R_PPC_DTPREL16",
                "newPage": false,
                "searchKey": "elf.R_PPC_DTPREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_DTPREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_DTPREL16 R_PPC = 74 // R_POWERPC_DTPREL16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_DTPREL16_LO",
              "documentation": {
                "identifier": "R_PPC_DTPREL16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_DTPREL16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_DTPREL16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_DTPREL16_LO R_PPC = 75 // R_POWERPC_DTPREL16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_DTPREL16_HI",
              "documentation": {
                "identifier": "R_PPC_DTPREL16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_DTPREL16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_DTPREL16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_DTPREL16_HI R_PPC = 76 // R_POWERPC_DTPREL16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_DTPREL16_HA",
              "documentation": {
                "identifier": "R_PPC_DTPREL16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_DTPREL16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_DTPREL16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_DTPREL16_HA R_PPC = 77 // R_POWERPC_DTPREL16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_DTPREL32",
              "documentation": {
                "identifier": "R_PPC_DTPREL32",
                "newPage": false,
                "searchKey": "elf.R_PPC_DTPREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_DTPREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_DTPREL32 R_PPC = 78 // R_POWERPC_DTPREL32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TLSGD16",
              "documentation": {
                "identifier": "R_PPC_GOT_TLSGD16",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TLSGD16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TLSGD16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TLSGD16 R_PPC = 79 // R_POWERPC_GOT_TLSGD16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TLSGD16_LO",
              "documentation": {
                "identifier": "R_PPC_GOT_TLSGD16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TLSGD16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TLSGD16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TLSGD16_LO R_PPC = 80 // R_POWERPC_GOT_TLSGD16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TLSGD16_HI",
              "documentation": {
                "identifier": "R_PPC_GOT_TLSGD16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TLSGD16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TLSGD16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TLSGD16_HI R_PPC = 81 // R_POWERPC_GOT_TLSGD16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TLSGD16_HA",
              "documentation": {
                "identifier": "R_PPC_GOT_TLSGD16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TLSGD16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TLSGD16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TLSGD16_HA R_PPC = 82 // R_POWERPC_GOT_TLSGD16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TLSLD16",
              "documentation": {
                "identifier": "R_PPC_GOT_TLSLD16",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TLSLD16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TLSLD16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TLSLD16 R_PPC = 83 // R_POWERPC_GOT_TLSLD16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TLSLD16_LO",
              "documentation": {
                "identifier": "R_PPC_GOT_TLSLD16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TLSLD16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TLSLD16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TLSLD16_LO R_PPC = 84 // R_POWERPC_GOT_TLSLD16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TLSLD16_HI",
              "documentation": {
                "identifier": "R_PPC_GOT_TLSLD16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TLSLD16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TLSLD16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TLSLD16_HI R_PPC = 85 // R_POWERPC_GOT_TLSLD16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TLSLD16_HA",
              "documentation": {
                "identifier": "R_PPC_GOT_TLSLD16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TLSLD16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TLSLD16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TLSLD16_HA R_PPC = 86 // R_POWERPC_GOT_TLSLD16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TPREL16",
              "documentation": {
                "identifier": "R_PPC_GOT_TPREL16",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TPREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TPREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TPREL16 R_PPC = 87 // R_POWERPC_GOT_TPREL16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TPREL16_LO",
              "documentation": {
                "identifier": "R_PPC_GOT_TPREL16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TPREL16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TPREL16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TPREL16_LO R_PPC = 88 // R_POWERPC_GOT_TPREL16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TPREL16_HI",
              "documentation": {
                "identifier": "R_PPC_GOT_TPREL16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TPREL16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TPREL16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TPREL16_HI R_PPC = 89 // R_POWERPC_GOT_TPREL16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_GOT_TPREL16_HA",
              "documentation": {
                "identifier": "R_PPC_GOT_TPREL16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_GOT_TPREL16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_GOT_TPREL16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_GOT_TPREL16_HA R_PPC = 90 // R_POWERPC_GOT_TPREL16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_NADDR32",
              "documentation": {
                "identifier": "R_PPC_EMB_NADDR32",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_NADDR32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_NADDR32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_NADDR32 R_PPC = 101\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_NADDR16",
              "documentation": {
                "identifier": "R_PPC_EMB_NADDR16",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_NADDR16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_NADDR16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_NADDR16 R_PPC = 102\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_NADDR16_LO",
              "documentation": {
                "identifier": "R_PPC_EMB_NADDR16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_NADDR16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_NADDR16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_NADDR16_LO R_PPC = 103\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_NADDR16_HI",
              "documentation": {
                "identifier": "R_PPC_EMB_NADDR16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_NADDR16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_NADDR16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_NADDR16_HI R_PPC = 104\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_NADDR16_HA",
              "documentation": {
                "identifier": "R_PPC_EMB_NADDR16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_NADDR16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_NADDR16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_NADDR16_HA R_PPC = 105\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_SDAI16",
              "documentation": {
                "identifier": "R_PPC_EMB_SDAI16",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_SDAI16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_SDAI16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_SDAI16 R_PPC = 106\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_SDA2I16",
              "documentation": {
                "identifier": "R_PPC_EMB_SDA2I16",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_SDA2I16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_SDA2I16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_SDA2I16 R_PPC = 107\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_SDA2REL",
              "documentation": {
                "identifier": "R_PPC_EMB_SDA2REL",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_SDA2REL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_SDA2REL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_SDA2REL R_PPC = 108\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_SDA21",
              "documentation": {
                "identifier": "R_PPC_EMB_SDA21",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_SDA21",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_SDA21"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_SDA21 R_PPC = 109\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_MRKREF",
              "documentation": {
                "identifier": "R_PPC_EMB_MRKREF",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_MRKREF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_MRKREF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_MRKREF R_PPC = 110\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_RELSEC16",
              "documentation": {
                "identifier": "R_PPC_EMB_RELSEC16",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_RELSEC16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_RELSEC16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_RELSEC16 R_PPC = 111\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_RELST_LO",
              "documentation": {
                "identifier": "R_PPC_EMB_RELST_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_RELST_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_RELST_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_RELST_LO R_PPC = 112\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_RELST_HI",
              "documentation": {
                "identifier": "R_PPC_EMB_RELST_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_RELST_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_RELST_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_RELST_HI R_PPC = 113\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_RELST_HA",
              "documentation": {
                "identifier": "R_PPC_EMB_RELST_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_RELST_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_RELST_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_RELST_HA R_PPC = 114\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_BIT_FLD",
              "documentation": {
                "identifier": "R_PPC_EMB_BIT_FLD",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_BIT_FLD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_BIT_FLD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_BIT_FLD R_PPC = 115\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC_EMB_RELSDA",
              "documentation": {
                "identifier": "R_PPC_EMB_RELSDA",
                "newPage": false,
                "searchKey": "elf.R_PPC_EMB_RELSDA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC_EMB_RELSDA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC_EMB_RELSDA R_PPC = 116\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_NONE",
              "documentation": {
                "identifier": "R_PPC64_NONE",
                "newPage": false,
                "searchKey": "elf.R_PPC64_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_NONE R_PPC64 = 0 // R_POWERPC_NONE\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR32",
              "documentation": {
                "identifier": "R_PPC64_ADDR32",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR32 R_PPC64 = 1 // R_POWERPC_ADDR32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR24",
              "documentation": {
                "identifier": "R_PPC64_ADDR24",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR24 R_PPC64 = 2 // R_POWERPC_ADDR24\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16",
              "documentation": {
                "identifier": "R_PPC64_ADDR16",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16 R_PPC64 = 3 // R_POWERPC_ADDR16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_LO",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_LO R_PPC64 = 4 // R_POWERPC_ADDR16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_HI",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_HI R_PPC64 = 5 // R_POWERPC_ADDR16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_HA",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_HA R_PPC64 = 6 // R_POWERPC_ADDR16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR14",
              "documentation": {
                "identifier": "R_PPC64_ADDR14",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR14",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR14"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR14 R_PPC64 = 7 // R_POWERPC_ADDR14\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR14_BRTAKEN",
              "documentation": {
                "identifier": "R_PPC64_ADDR14_BRTAKEN",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR14_BRTAKEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR14_BRTAKEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR14_BRTAKEN R_PPC64 = 8 // R_POWERPC_ADDR14_BRTAKEN\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR14_BRNTAKEN",
              "documentation": {
                "identifier": "R_PPC64_ADDR14_BRNTAKEN",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR14_BRNTAKEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR14_BRNTAKEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR14_BRNTAKEN R_PPC64 = 9 // R_POWERPC_ADDR14_BRNTAKEN\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL24",
              "documentation": {
                "identifier": "R_PPC64_REL24",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL24",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL24"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL24 R_PPC64 = 10 // R_POWERPC_REL24\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL14",
              "documentation": {
                "identifier": "R_PPC64_REL14",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL14",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL14"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL14 R_PPC64 = 11 // R_POWERPC_REL14\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL14_BRTAKEN",
              "documentation": {
                "identifier": "R_PPC64_REL14_BRTAKEN",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL14_BRTAKEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL14_BRTAKEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL14_BRTAKEN R_PPC64 = 12 // R_POWERPC_REL14_BRTAKEN\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL14_BRNTAKEN",
              "documentation": {
                "identifier": "R_PPC64_REL14_BRNTAKEN",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL14_BRNTAKEN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL14_BRNTAKEN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL14_BRNTAKEN R_PPC64 = 13 // R_POWERPC_REL14_BRNTAKEN\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT16",
              "documentation": {
                "identifier": "R_PPC64_GOT16",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT16 R_PPC64 = 14 // R_POWERPC_GOT16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT16_LO",
              "documentation": {
                "identifier": "R_PPC64_GOT16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT16_LO R_PPC64 = 15 // R_POWERPC_GOT16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT16_HI",
              "documentation": {
                "identifier": "R_PPC64_GOT16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT16_HI R_PPC64 = 16 // R_POWERPC_GOT16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT16_HA",
              "documentation": {
                "identifier": "R_PPC64_GOT16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT16_HA R_PPC64 = 17 // R_POWERPC_GOT16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_JMP_SLOT",
              "documentation": {
                "identifier": "R_PPC64_JMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_PPC64_JMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_JMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_JMP_SLOT R_PPC64 = 21 // R_POWERPC_JMP_SLOT\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL32",
              "documentation": {
                "identifier": "R_PPC64_REL32",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL32 R_PPC64 = 26 // R_POWERPC_REL32\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR64",
              "documentation": {
                "identifier": "R_PPC64_ADDR64",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR64 R_PPC64 = 38\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_HIGHER",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_HIGHER",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_HIGHER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_HIGHER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_HIGHER R_PPC64 = 39\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_HIGHERA",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_HIGHERA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_HIGHERA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_HIGHERA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_HIGHERA R_PPC64 = 40\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_HIGHEST",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_HIGHEST",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_HIGHEST",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_HIGHEST"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_HIGHEST R_PPC64 = 41\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_HIGHESTA",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_HIGHESTA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_HIGHESTA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_HIGHESTA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_HIGHESTA R_PPC64 = 42\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL64",
              "documentation": {
                "identifier": "R_PPC64_REL64",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL64 R_PPC64 = 44\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TOC16",
              "documentation": {
                "identifier": "R_PPC64_TOC16",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TOC16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TOC16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TOC16 R_PPC64 = 47\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TOC16_LO",
              "documentation": {
                "identifier": "R_PPC64_TOC16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TOC16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TOC16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TOC16_LO R_PPC64 = 48\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TOC16_HI",
              "documentation": {
                "identifier": "R_PPC64_TOC16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TOC16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TOC16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TOC16_HI R_PPC64 = 49\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TOC16_HA",
              "documentation": {
                "identifier": "R_PPC64_TOC16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TOC16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TOC16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TOC16_HA R_PPC64 = 50\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TOC",
              "documentation": {
                "identifier": "R_PPC64_TOC",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TOC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TOC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TOC R_PPC64 = 51\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_PLTGOT16",
              "documentation": {
                "identifier": "R_PPC64_PLTGOT16",
                "newPage": false,
                "searchKey": "elf.R_PPC64_PLTGOT16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_PLTGOT16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_PLTGOT16 R_PPC64 = 52\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_PLTGOT16_LO",
              "documentation": {
                "identifier": "R_PPC64_PLTGOT16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC64_PLTGOT16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_PLTGOT16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_PLTGOT16_LO R_PPC64 = 53\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_PLTGOT16_HI",
              "documentation": {
                "identifier": "R_PPC64_PLTGOT16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_PLTGOT16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_PLTGOT16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_PLTGOT16_HI R_PPC64 = 54\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_PLTGOT16_HA",
              "documentation": {
                "identifier": "R_PPC64_PLTGOT16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_PLTGOT16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_PLTGOT16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_PLTGOT16_HA R_PPC64 = 55\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_DS",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_DS R_PPC64 = 56\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_LO_DS R_PPC64 = 57\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT16_DS",
              "documentation": {
                "identifier": "R_PPC64_GOT16_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT16_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT16_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT16_DS R_PPC64 = 58\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT16_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_GOT16_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT16_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT16_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT16_LO_DS R_PPC64 = 59\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_PLT16_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_PLT16_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_PLT16_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_PLT16_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_PLT16_LO_DS R_PPC64 = 60\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_SECTOFF_DS",
              "documentation": {
                "identifier": "R_PPC64_SECTOFF_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_SECTOFF_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_SECTOFF_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_SECTOFF_DS R_PPC64 = 61\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_SECTOFF_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_SECTOFF_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_SECTOFF_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_SECTOFF_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_SECTOFF_LO_DS R_PPC64 = 61\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TOC16_DS",
              "documentation": {
                "identifier": "R_PPC64_TOC16_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TOC16_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TOC16_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TOC16_DS R_PPC64 = 63\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TOC16_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_TOC16_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TOC16_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TOC16_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TOC16_LO_DS R_PPC64 = 64\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_PLTGOT16_DS",
              "documentation": {
                "identifier": "R_PPC64_PLTGOT16_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_PLTGOT16_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_PLTGOT16_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_PLTGOT16_DS R_PPC64 = 65\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_PLTGOT_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_PLTGOT_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_PLTGOT_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_PLTGOT_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_PLTGOT_LO_DS R_PPC64 = 66\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TLS",
              "documentation": {
                "identifier": "R_PPC64_TLS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TLS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TLS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TLS R_PPC64 = 67 // R_POWERPC_TLS\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPMOD64",
              "documentation": {
                "identifier": "R_PPC64_DTPMOD64",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPMOD64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPMOD64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPMOD64 R_PPC64 = 68 // R_POWERPC_DTPMOD64\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16",
              "documentation": {
                "identifier": "R_PPC64_TPREL16",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16 R_PPC64 = 69 // R_POWERPC_TPREL16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_LO",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_LO R_PPC64 = 70 // R_POWERPC_TPREL16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_HI",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_HI R_PPC64 = 71 // R_POWERPC_TPREL16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_HA",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_HA R_PPC64 = 72 // R_POWERPC_TPREL16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL64",
              "documentation": {
                "identifier": "R_PPC64_TPREL64",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL64 R_PPC64 = 73 // R_POWERPC_TPREL64\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16 R_PPC64 = 74 // R_POWERPC_DTPREL16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_LO",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_LO R_PPC64 = 75 // R_POWERPC_DTPREL16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_HI",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_HI R_PPC64 = 76 // R_POWERPC_DTPREL16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_HA",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_HA R_PPC64 = 77 // R_POWERPC_DTPREL16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL64",
              "documentation": {
                "identifier": "R_PPC64_DTPREL64",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL64 R_PPC64 = 78 // R_POWERPC_DTPREL64\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TLSGD16",
              "documentation": {
                "identifier": "R_PPC64_GOT_TLSGD16",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TLSGD16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TLSGD16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TLSGD16 R_PPC64 = 79 // R_POWERPC_GOT_TLSGD16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TLSGD16_LO",
              "documentation": {
                "identifier": "R_PPC64_GOT_TLSGD16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TLSGD16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TLSGD16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TLSGD16_LO R_PPC64 = 80 // R_POWERPC_GOT_TLSGD16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TLSGD16_HI",
              "documentation": {
                "identifier": "R_PPC64_GOT_TLSGD16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TLSGD16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TLSGD16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TLSGD16_HI R_PPC64 = 81 // R_POWERPC_GOT_TLSGD16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TLSGD16_HA",
              "documentation": {
                "identifier": "R_PPC64_GOT_TLSGD16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TLSGD16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TLSGD16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TLSGD16_HA R_PPC64 = 82 // R_POWERPC_GOT_TLSGD16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TLSLD16",
              "documentation": {
                "identifier": "R_PPC64_GOT_TLSLD16",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TLSLD16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TLSLD16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TLSLD16 R_PPC64 = 83 // R_POWERPC_GOT_TLSLD16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TLSLD16_LO",
              "documentation": {
                "identifier": "R_PPC64_GOT_TLSLD16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TLSLD16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TLSLD16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TLSLD16_LO R_PPC64 = 84 // R_POWERPC_GOT_TLSLD16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TLSLD16_HI",
              "documentation": {
                "identifier": "R_PPC64_GOT_TLSLD16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TLSLD16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TLSLD16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TLSLD16_HI R_PPC64 = 85 // R_POWERPC_GOT_TLSLD16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TLSLD16_HA",
              "documentation": {
                "identifier": "R_PPC64_GOT_TLSLD16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TLSLD16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TLSLD16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TLSLD16_HA R_PPC64 = 86 // R_POWERPC_GOT_TLSLD16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TPREL16_DS",
              "documentation": {
                "identifier": "R_PPC64_GOT_TPREL16_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TPREL16_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TPREL16_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TPREL16_DS R_PPC64 = 87 // R_POWERPC_GOT_TPREL16_DS\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TPREL16_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_GOT_TPREL16_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TPREL16_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TPREL16_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TPREL16_LO_DS R_PPC64 = 88 // R_POWERPC_GOT_TPREL16_LO_DS\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TPREL16_HI",
              "documentation": {
                "identifier": "R_PPC64_GOT_TPREL16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TPREL16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TPREL16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TPREL16_HI R_PPC64 = 89 // R_POWERPC_GOT_TPREL16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_TPREL16_HA",
              "documentation": {
                "identifier": "R_PPC64_GOT_TPREL16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_TPREL16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_TPREL16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_TPREL16_HA R_PPC64 = 90 // R_POWERPC_GOT_TPREL16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_DTPREL16_DS",
              "documentation": {
                "identifier": "R_PPC64_GOT_DTPREL16_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_DTPREL16_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_DTPREL16_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_DTPREL16_DS R_PPC64 = 91 // R_POWERPC_GOT_DTPREL16_DS\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_DTPREL16_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_GOT_DTPREL16_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_DTPREL16_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_DTPREL16_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_DTPREL16_LO_DS R_PPC64 = 92 // R_POWERPC_GOT_DTPREL16_LO_DS\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_DTPREL16_HI",
              "documentation": {
                "identifier": "R_PPC64_GOT_DTPREL16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_DTPREL16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_DTPREL16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_DTPREL16_HI R_PPC64 = 93 // R_POWERPC_GOT_DTPREL16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_GOT_DTPREL16_HA",
              "documentation": {
                "identifier": "R_PPC64_GOT_DTPREL16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_GOT_DTPREL16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_GOT_DTPREL16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_GOT_DTPREL16_HA R_PPC64 = 94 // R_POWERPC_GOT_DTPREL16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_DS",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_DS R_PPC64 = 95\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_LO_DS R_PPC64 = 96\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_HIGHER",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_HIGHER",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_HIGHER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_HIGHER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_HIGHER R_PPC64 = 97\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_HIGHERA",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_HIGHERA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_HIGHERA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_HIGHERA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_HIGHERA R_PPC64 = 98\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_HIGHEST",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_HIGHEST",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_HIGHEST",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_HIGHEST"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_HIGHEST R_PPC64 = 99\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_HIGHESTA",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_HIGHESTA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_HIGHESTA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_HIGHESTA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_HIGHESTA R_PPC64 = 100\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_DS",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_DS R_PPC64 = 101\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_LO_DS",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_LO_DS",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_LO_DS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_LO_DS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_LO_DS R_PPC64 = 102\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_HIGHER",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_HIGHER",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_HIGHER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_HIGHER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_HIGHER R_PPC64 = 103\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_HIGHERA",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_HIGHERA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_HIGHERA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_HIGHERA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_HIGHERA R_PPC64 = 104\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_HIGHEST",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_HIGHEST",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_HIGHEST",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_HIGHEST"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_HIGHEST R_PPC64 = 105\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_HIGHESTA",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_HIGHESTA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_HIGHESTA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_HIGHESTA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_HIGHESTA R_PPC64 = 106\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TLSGD",
              "documentation": {
                "identifier": "R_PPC64_TLSGD",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TLSGD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TLSGD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TLSGD R_PPC64 = 107\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TLSLD",
              "documentation": {
                "identifier": "R_PPC64_TLSLD",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TLSLD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TLSLD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TLSLD R_PPC64 = 108\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TOCSAVE",
              "documentation": {
                "identifier": "R_PPC64_TOCSAVE",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TOCSAVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TOCSAVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TOCSAVE R_PPC64 = 109\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_HIGH",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_HIGH",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_HIGH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_HIGH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_HIGH R_PPC64 = 110\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR16_HIGHA",
              "documentation": {
                "identifier": "R_PPC64_ADDR16_HIGHA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR16_HIGHA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR16_HIGHA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR16_HIGHA R_PPC64 = 111\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_HIGH",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_HIGH",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_HIGH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_HIGH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_HIGH R_PPC64 = 112\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_TPREL16_HIGHA",
              "documentation": {
                "identifier": "R_PPC64_TPREL16_HIGHA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_TPREL16_HIGHA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_TPREL16_HIGHA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_TPREL16_HIGHA R_PPC64 = 113\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_HIGH",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_HIGH",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_HIGH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_HIGH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_HIGH R_PPC64 = 114\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_DTPREL16_HIGHA",
              "documentation": {
                "identifier": "R_PPC64_DTPREL16_HIGHA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_DTPREL16_HIGHA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_DTPREL16_HIGHA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_DTPREL16_HIGHA R_PPC64 = 115\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL24_NOTOC",
              "documentation": {
                "identifier": "R_PPC64_REL24_NOTOC",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL24_NOTOC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL24_NOTOC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL24_NOTOC R_PPC64 = 116\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ADDR64_LOCAL",
              "documentation": {
                "identifier": "R_PPC64_ADDR64_LOCAL",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ADDR64_LOCAL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ADDR64_LOCAL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ADDR64_LOCAL R_PPC64 = 117\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_ENTRY",
              "documentation": {
                "identifier": "R_PPC64_ENTRY",
                "newPage": false,
                "searchKey": "elf.R_PPC64_ENTRY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_ENTRY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_ENTRY R_PPC64 = 118\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL16DX_HA",
              "documentation": {
                "identifier": "R_PPC64_REL16DX_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL16DX_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL16DX_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL16DX_HA R_PPC64 = 246 // R_POWERPC_REL16DX_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_JMP_IREL",
              "documentation": {
                "identifier": "R_PPC64_JMP_IREL",
                "newPage": false,
                "searchKey": "elf.R_PPC64_JMP_IREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_JMP_IREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_JMP_IREL R_PPC64 = 247\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_IRELATIVE",
              "documentation": {
                "identifier": "R_PPC64_IRELATIVE",
                "newPage": false,
                "searchKey": "elf.R_PPC64_IRELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_IRELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_IRELATIVE R_PPC64 = 248 // R_POWERPC_IRELATIVE\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL16",
              "documentation": {
                "identifier": "R_PPC64_REL16",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL16 R_PPC64 = 249 // R_POWERPC_REL16\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL16_LO",
              "documentation": {
                "identifier": "R_PPC64_REL16_LO",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL16_LO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL16_LO"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL16_LO R_PPC64 = 250 // R_POWERPC_REL16_LO\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL16_HI",
              "documentation": {
                "identifier": "R_PPC64_REL16_HI",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL16_HI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL16_HI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL16_HI R_PPC64 = 251 // R_POWERPC_REL16_HI\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64_REL16_HA",
              "documentation": {
                "identifier": "R_PPC64_REL16_HA",
                "newPage": false,
                "searchKey": "elf.R_PPC64_REL16_HA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_PPC64_REL16_HA"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_PPC64_REL16_HA R_PPC64 = 252 // R_POWERPC_REL16_HA\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_NONE",
              "documentation": {
                "identifier": "R_RISCV_NONE",
                "newPage": false,
                "searchKey": "elf.R_RISCV_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_NONE R_RISCV = 0 /* No relocation. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_32",
              "documentation": {
                "identifier": "R_RISCV_32",
                "newPage": false,
                "searchKey": "elf.R_RISCV_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_32 R_RISCV = 1 /* Add 32 bit zero extended symbol value */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_64",
              "documentation": {
                "identifier": "R_RISCV_64",
                "newPage": false,
                "searchKey": "elf.R_RISCV_64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_64 R_RISCV = 2 /* Add 64 bit symbol value. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_RELATIVE",
              "documentation": {
                "identifier": "R_RISCV_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_RISCV_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_RELATIVE R_RISCV = 3 /* Add load address of shared object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_COPY",
              "documentation": {
                "identifier": "R_RISCV_COPY",
                "newPage": false,
                "searchKey": "elf.R_RISCV_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_COPY R_RISCV = 4 /* Copy data from shared object. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_JUMP_SLOT",
              "documentation": {
                "identifier": "R_RISCV_JUMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_RISCV_JUMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_JUMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_JUMP_SLOT R_RISCV = 5 /* Set GOT entry to code address. */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TLS_DTPMOD32",
              "documentation": {
                "identifier": "R_RISCV_TLS_DTPMOD32",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TLS_DTPMOD32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TLS_DTPMOD32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TLS_DTPMOD32 R_RISCV = 6 /* 32 bit ID of module containing symbol */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TLS_DTPMOD64",
              "documentation": {
                "identifier": "R_RISCV_TLS_DTPMOD64",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TLS_DTPMOD64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TLS_DTPMOD64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TLS_DTPMOD64 R_RISCV = 7 /* ID of module containing symbol */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TLS_DTPREL32",
              "documentation": {
                "identifier": "R_RISCV_TLS_DTPREL32",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TLS_DTPREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TLS_DTPREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TLS_DTPREL32 R_RISCV = 8 /* 32 bit relative offset in TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TLS_DTPREL64",
              "documentation": {
                "identifier": "R_RISCV_TLS_DTPREL64",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TLS_DTPREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TLS_DTPREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TLS_DTPREL64 R_RISCV = 9 /* Relative offset in TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TLS_TPREL32",
              "documentation": {
                "identifier": "R_RISCV_TLS_TPREL32",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TLS_TPREL32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TLS_TPREL32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TLS_TPREL32 R_RISCV = 10 /* 32 bit relative offset in static TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TLS_TPREL64",
              "documentation": {
                "identifier": "R_RISCV_TLS_TPREL64",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TLS_TPREL64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TLS_TPREL64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TLS_TPREL64 R_RISCV = 11 /* Relative offset in static TLS block */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_BRANCH",
              "documentation": {
                "identifier": "R_RISCV_BRANCH",
                "newPage": false,
                "searchKey": "elf.R_RISCV_BRANCH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_BRANCH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_BRANCH R_RISCV = 16 /* PC-relative branch */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_JAL",
              "documentation": {
                "identifier": "R_RISCV_JAL",
                "newPage": false,
                "searchKey": "elf.R_RISCV_JAL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_JAL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_JAL R_RISCV = 17 /* PC-relative jump */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_CALL",
              "documentation": {
                "identifier": "R_RISCV_CALL",
                "newPage": false,
                "searchKey": "elf.R_RISCV_CALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_CALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_CALL R_RISCV = 18 /* PC-relative call */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_CALL_PLT",
              "documentation": {
                "identifier": "R_RISCV_CALL_PLT",
                "newPage": false,
                "searchKey": "elf.R_RISCV_CALL_PLT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_CALL_PLT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_CALL_PLT R_RISCV = 19 /* PC-relative call (PLT) */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_GOT_HI20",
              "documentation": {
                "identifier": "R_RISCV_GOT_HI20",
                "newPage": false,
                "searchKey": "elf.R_RISCV_GOT_HI20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_GOT_HI20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_GOT_HI20 R_RISCV = 20 /* PC-relative GOT reference */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TLS_GOT_HI20",
              "documentation": {
                "identifier": "R_RISCV_TLS_GOT_HI20",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TLS_GOT_HI20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TLS_GOT_HI20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TLS_GOT_HI20 R_RISCV = 21 /* PC-relative TLS IE GOT offset */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TLS_GD_HI20",
              "documentation": {
                "identifier": "R_RISCV_TLS_GD_HI20",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TLS_GD_HI20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TLS_GD_HI20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TLS_GD_HI20 R_RISCV = 22 /* PC-relative TLS GD reference */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_PCREL_HI20",
              "documentation": {
                "identifier": "R_RISCV_PCREL_HI20",
                "newPage": false,
                "searchKey": "elf.R_RISCV_PCREL_HI20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_PCREL_HI20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_PCREL_HI20 R_RISCV = 23 /* PC-relative reference */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_PCREL_LO12_I",
              "documentation": {
                "identifier": "R_RISCV_PCREL_LO12_I",
                "newPage": false,
                "searchKey": "elf.R_RISCV_PCREL_LO12_I",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_PCREL_LO12_I"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_PCREL_LO12_I R_RISCV = 24 /* PC-relative reference */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_PCREL_LO12_S",
              "documentation": {
                "identifier": "R_RISCV_PCREL_LO12_S",
                "newPage": false,
                "searchKey": "elf.R_RISCV_PCREL_LO12_S",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_PCREL_LO12_S"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_PCREL_LO12_S R_RISCV = 25 /* PC-relative reference */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_HI20",
              "documentation": {
                "identifier": "R_RISCV_HI20",
                "newPage": false,
                "searchKey": "elf.R_RISCV_HI20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_HI20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_HI20 R_RISCV = 26 /* Absolute address */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_LO12_I",
              "documentation": {
                "identifier": "R_RISCV_LO12_I",
                "newPage": false,
                "searchKey": "elf.R_RISCV_LO12_I",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_LO12_I"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_LO12_I R_RISCV = 27 /* Absolute address */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_LO12_S",
              "documentation": {
                "identifier": "R_RISCV_LO12_S",
                "newPage": false,
                "searchKey": "elf.R_RISCV_LO12_S",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_LO12_S"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_LO12_S R_RISCV = 28 /* Absolute address */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TPREL_HI20",
              "documentation": {
                "identifier": "R_RISCV_TPREL_HI20",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TPREL_HI20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TPREL_HI20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TPREL_HI20 R_RISCV = 29 /* TLS LE thread offset */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TPREL_LO12_I",
              "documentation": {
                "identifier": "R_RISCV_TPREL_LO12_I",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TPREL_LO12_I",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TPREL_LO12_I"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TPREL_LO12_I R_RISCV = 30 /* TLS LE thread offset */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TPREL_LO12_S",
              "documentation": {
                "identifier": "R_RISCV_TPREL_LO12_S",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TPREL_LO12_S",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TPREL_LO12_S"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TPREL_LO12_S R_RISCV = 31 /* TLS LE thread offset */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TPREL_ADD",
              "documentation": {
                "identifier": "R_RISCV_TPREL_ADD",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TPREL_ADD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TPREL_ADD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TPREL_ADD R_RISCV = 32 /* TLS LE thread usage */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_ADD8",
              "documentation": {
                "identifier": "R_RISCV_ADD8",
                "newPage": false,
                "searchKey": "elf.R_RISCV_ADD8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_ADD8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_ADD8 R_RISCV = 33 /* 8-bit label addition */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_ADD16",
              "documentation": {
                "identifier": "R_RISCV_ADD16",
                "newPage": false,
                "searchKey": "elf.R_RISCV_ADD16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_ADD16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_ADD16 R_RISCV = 34 /* 16-bit label addition */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_ADD32",
              "documentation": {
                "identifier": "R_RISCV_ADD32",
                "newPage": false,
                "searchKey": "elf.R_RISCV_ADD32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_ADD32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_ADD32 R_RISCV = 35 /* 32-bit label addition */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_ADD64",
              "documentation": {
                "identifier": "R_RISCV_ADD64",
                "newPage": false,
                "searchKey": "elf.R_RISCV_ADD64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_ADD64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_ADD64 R_RISCV = 36 /* 64-bit label addition */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_SUB8",
              "documentation": {
                "identifier": "R_RISCV_SUB8",
                "newPage": false,
                "searchKey": "elf.R_RISCV_SUB8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_SUB8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_SUB8 R_RISCV = 37 /* 8-bit label subtraction */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_SUB16",
              "documentation": {
                "identifier": "R_RISCV_SUB16",
                "newPage": false,
                "searchKey": "elf.R_RISCV_SUB16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_SUB16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_SUB16 R_RISCV = 38 /* 16-bit label subtraction */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_SUB32",
              "documentation": {
                "identifier": "R_RISCV_SUB32",
                "newPage": false,
                "searchKey": "elf.R_RISCV_SUB32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_SUB32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_SUB32 R_RISCV = 39 /* 32-bit label subtraction */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_SUB64",
              "documentation": {
                "identifier": "R_RISCV_SUB64",
                "newPage": false,
                "searchKey": "elf.R_RISCV_SUB64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_SUB64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_SUB64 R_RISCV = 40 /* 64-bit label subtraction */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_GNU_VTINHERIT",
              "documentation": {
                "identifier": "R_RISCV_GNU_VTINHERIT",
                "newPage": false,
                "searchKey": "elf.R_RISCV_GNU_VTINHERIT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_GNU_VTINHERIT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_GNU_VTINHERIT R_RISCV = 41 /* GNU C++ vtable hierarchy */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_GNU_VTENTRY",
              "documentation": {
                "identifier": "R_RISCV_GNU_VTENTRY",
                "newPage": false,
                "searchKey": "elf.R_RISCV_GNU_VTENTRY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_GNU_VTENTRY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_GNU_VTENTRY R_RISCV = 42 /* GNU C++ vtable member usage */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_ALIGN",
              "documentation": {
                "identifier": "R_RISCV_ALIGN",
                "newPage": false,
                "searchKey": "elf.R_RISCV_ALIGN",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_ALIGN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_ALIGN R_RISCV = 43 /* Alignment statement */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_RVC_BRANCH",
              "documentation": {
                "identifier": "R_RISCV_RVC_BRANCH",
                "newPage": false,
                "searchKey": "elf.R_RISCV_RVC_BRANCH",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_RVC_BRANCH"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_RVC_BRANCH R_RISCV = 44 /* PC-relative branch offset */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_RVC_JUMP",
              "documentation": {
                "identifier": "R_RISCV_RVC_JUMP",
                "newPage": false,
                "searchKey": "elf.R_RISCV_RVC_JUMP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_RVC_JUMP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_RVC_JUMP R_RISCV = 45 /* PC-relative jump offset */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_RVC_LUI",
              "documentation": {
                "identifier": "R_RISCV_RVC_LUI",
                "newPage": false,
                "searchKey": "elf.R_RISCV_RVC_LUI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_RVC_LUI"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_RVC_LUI R_RISCV = 46 /* Absolute address */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_GPREL_I",
              "documentation": {
                "identifier": "R_RISCV_GPREL_I",
                "newPage": false,
                "searchKey": "elf.R_RISCV_GPREL_I",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_GPREL_I"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_GPREL_I R_RISCV = 47 /* GP-relative reference */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_GPREL_S",
              "documentation": {
                "identifier": "R_RISCV_GPREL_S",
                "newPage": false,
                "searchKey": "elf.R_RISCV_GPREL_S",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_GPREL_S"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_GPREL_S R_RISCV = 48 /* GP-relative reference */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TPREL_I",
              "documentation": {
                "identifier": "R_RISCV_TPREL_I",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TPREL_I",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TPREL_I"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TPREL_I R_RISCV = 49 /* TP-relative TLS LE load */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_TPREL_S",
              "documentation": {
                "identifier": "R_RISCV_TPREL_S",
                "newPage": false,
                "searchKey": "elf.R_RISCV_TPREL_S",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_TPREL_S"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_TPREL_S R_RISCV = 50 /* TP-relative TLS LE store */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_RELAX",
              "documentation": {
                "identifier": "R_RISCV_RELAX",
                "newPage": false,
                "searchKey": "elf.R_RISCV_RELAX",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_RELAX"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_RELAX R_RISCV = 51 /* Instruction pair can be relaxed */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_SUB6",
              "documentation": {
                "identifier": "R_RISCV_SUB6",
                "newPage": false,
                "searchKey": "elf.R_RISCV_SUB6",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_SUB6"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_SUB6 R_RISCV = 52 /* Local label subtraction */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_SET6",
              "documentation": {
                "identifier": "R_RISCV_SET6",
                "newPage": false,
                "searchKey": "elf.R_RISCV_SET6",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_SET6"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_SET6 R_RISCV = 53 /* Local label subtraction */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_SET8",
              "documentation": {
                "identifier": "R_RISCV_SET8",
                "newPage": false,
                "searchKey": "elf.R_RISCV_SET8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_SET8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_SET8 R_RISCV = 54 /* Local label subtraction */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_SET16",
              "documentation": {
                "identifier": "R_RISCV_SET16",
                "newPage": false,
                "searchKey": "elf.R_RISCV_SET16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_SET16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_SET16 R_RISCV = 55 /* Local label subtraction */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_SET32",
              "documentation": {
                "identifier": "R_RISCV_SET32",
                "newPage": false,
                "searchKey": "elf.R_RISCV_SET32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_SET32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_SET32 R_RISCV = 56 /* Local label subtraction */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV_32_PCREL",
              "documentation": {
                "identifier": "R_RISCV_32_PCREL",
                "newPage": false,
                "searchKey": "elf.R_RISCV_32_PCREL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_RISCV_32_PCREL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_RISCV_32_PCREL R_RISCV = 57 /* 32-bit PC relative */\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_NONE",
              "documentation": {
                "identifier": "R_390_NONE",
                "newPage": false,
                "searchKey": "elf.R_390_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_NONE R_390 = 0\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_8",
              "documentation": {
                "identifier": "R_390_8",
                "newPage": false,
                "searchKey": "elf.R_390_8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_8 R_390 = 1\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_12",
              "documentation": {
                "identifier": "R_390_12",
                "newPage": false,
                "searchKey": "elf.R_390_12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_12 R_390 = 2\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_16",
              "documentation": {
                "identifier": "R_390_16",
                "newPage": false,
                "searchKey": "elf.R_390_16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_16 R_390 = 3\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_32",
              "documentation": {
                "identifier": "R_390_32",
                "newPage": false,
                "searchKey": "elf.R_390_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_32 R_390 = 4\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_PC32",
              "documentation": {
                "identifier": "R_390_PC32",
                "newPage": false,
                "searchKey": "elf.R_390_PC32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_PC32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_PC32 R_390 = 5\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOT12",
              "documentation": {
                "identifier": "R_390_GOT12",
                "newPage": false,
                "searchKey": "elf.R_390_GOT12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOT12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOT12 R_390 = 6\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOT32",
              "documentation": {
                "identifier": "R_390_GOT32",
                "newPage": false,
                "searchKey": "elf.R_390_GOT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOT32 R_390 = 7\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_PLT32",
              "documentation": {
                "identifier": "R_390_PLT32",
                "newPage": false,
                "searchKey": "elf.R_390_PLT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_PLT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_PLT32 R_390 = 8\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_COPY",
              "documentation": {
                "identifier": "R_390_COPY",
                "newPage": false,
                "searchKey": "elf.R_390_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_COPY R_390 = 9\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GLOB_DAT",
              "documentation": {
                "identifier": "R_390_GLOB_DAT",
                "newPage": false,
                "searchKey": "elf.R_390_GLOB_DAT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GLOB_DAT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GLOB_DAT R_390 = 10\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_JMP_SLOT",
              "documentation": {
                "identifier": "R_390_JMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_390_JMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_JMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_JMP_SLOT R_390 = 11\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_RELATIVE",
              "documentation": {
                "identifier": "R_390_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_390_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_RELATIVE R_390 = 12\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTOFF",
              "documentation": {
                "identifier": "R_390_GOTOFF",
                "newPage": false,
                "searchKey": "elf.R_390_GOTOFF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTOFF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTOFF R_390 = 13\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPC",
              "documentation": {
                "identifier": "R_390_GOTPC",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPC R_390 = 14\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOT16",
              "documentation": {
                "identifier": "R_390_GOT16",
                "newPage": false,
                "searchKey": "elf.R_390_GOT16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOT16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOT16 R_390 = 15\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_PC16",
              "documentation": {
                "identifier": "R_390_PC16",
                "newPage": false,
                "searchKey": "elf.R_390_PC16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_PC16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_PC16 R_390 = 16\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_PC16DBL",
              "documentation": {
                "identifier": "R_390_PC16DBL",
                "newPage": false,
                "searchKey": "elf.R_390_PC16DBL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_PC16DBL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_PC16DBL R_390 = 17\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_PLT16DBL",
              "documentation": {
                "identifier": "R_390_PLT16DBL",
                "newPage": false,
                "searchKey": "elf.R_390_PLT16DBL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_PLT16DBL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_PLT16DBL R_390 = 18\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_PC32DBL",
              "documentation": {
                "identifier": "R_390_PC32DBL",
                "newPage": false,
                "searchKey": "elf.R_390_PC32DBL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_PC32DBL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_PC32DBL R_390 = 19\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_PLT32DBL",
              "documentation": {
                "identifier": "R_390_PLT32DBL",
                "newPage": false,
                "searchKey": "elf.R_390_PLT32DBL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_PLT32DBL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_PLT32DBL R_390 = 20\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPCDBL",
              "documentation": {
                "identifier": "R_390_GOTPCDBL",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPCDBL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPCDBL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPCDBL R_390 = 21\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_64",
              "documentation": {
                "identifier": "R_390_64",
                "newPage": false,
                "searchKey": "elf.R_390_64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_64 R_390 = 22\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_PC64",
              "documentation": {
                "identifier": "R_390_PC64",
                "newPage": false,
                "searchKey": "elf.R_390_PC64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_PC64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_PC64 R_390 = 23\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOT64",
              "documentation": {
                "identifier": "R_390_GOT64",
                "newPage": false,
                "searchKey": "elf.R_390_GOT64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOT64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOT64 R_390 = 24\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_PLT64",
              "documentation": {
                "identifier": "R_390_PLT64",
                "newPage": false,
                "searchKey": "elf.R_390_PLT64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_PLT64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_PLT64 R_390 = 25\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTENT",
              "documentation": {
                "identifier": "R_390_GOTENT",
                "newPage": false,
                "searchKey": "elf.R_390_GOTENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTENT R_390 = 26\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTOFF16",
              "documentation": {
                "identifier": "R_390_GOTOFF16",
                "newPage": false,
                "searchKey": "elf.R_390_GOTOFF16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTOFF16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTOFF16 R_390 = 27\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTOFF64",
              "documentation": {
                "identifier": "R_390_GOTOFF64",
                "newPage": false,
                "searchKey": "elf.R_390_GOTOFF64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTOFF64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTOFF64 R_390 = 28\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPLT12",
              "documentation": {
                "identifier": "R_390_GOTPLT12",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPLT12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPLT12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPLT12 R_390 = 29\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPLT16",
              "documentation": {
                "identifier": "R_390_GOTPLT16",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPLT16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPLT16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPLT16 R_390 = 30\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPLT32",
              "documentation": {
                "identifier": "R_390_GOTPLT32",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPLT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPLT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPLT32 R_390 = 31\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPLT64",
              "documentation": {
                "identifier": "R_390_GOTPLT64",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPLT64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPLT64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPLT64 R_390 = 32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPLTENT",
              "documentation": {
                "identifier": "R_390_GOTPLTENT",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPLTENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPLTENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPLTENT R_390 = 33\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPLTOFF16",
              "documentation": {
                "identifier": "R_390_GOTPLTOFF16",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPLTOFF16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPLTOFF16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPLTOFF16 R_390 = 34\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPLTOFF32",
              "documentation": {
                "identifier": "R_390_GOTPLTOFF32",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPLTOFF32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPLTOFF32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPLTOFF32 R_390 = 35\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPLTOFF64",
              "documentation": {
                "identifier": "R_390_GOTPLTOFF64",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPLTOFF64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPLTOFF64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPLTOFF64 R_390 = 36\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_LOAD",
              "documentation": {
                "identifier": "R_390_TLS_LOAD",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_LOAD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_LOAD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_LOAD R_390 = 37\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_GDCALL",
              "documentation": {
                "identifier": "R_390_TLS_GDCALL",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_GDCALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_GDCALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_GDCALL R_390 = 38\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_LDCALL",
              "documentation": {
                "identifier": "R_390_TLS_LDCALL",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_LDCALL",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_LDCALL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_LDCALL R_390 = 39\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_GD32",
              "documentation": {
                "identifier": "R_390_TLS_GD32",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_GD32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_GD32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_GD32 R_390 = 40\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_GD64",
              "documentation": {
                "identifier": "R_390_TLS_GD64",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_GD64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_GD64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_GD64 R_390 = 41\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_GOTIE12",
              "documentation": {
                "identifier": "R_390_TLS_GOTIE12",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_GOTIE12",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_GOTIE12"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_GOTIE12 R_390 = 42\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_GOTIE32",
              "documentation": {
                "identifier": "R_390_TLS_GOTIE32",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_GOTIE32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_GOTIE32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_GOTIE32 R_390 = 43\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_GOTIE64",
              "documentation": {
                "identifier": "R_390_TLS_GOTIE64",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_GOTIE64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_GOTIE64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_GOTIE64 R_390 = 44\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_LDM32",
              "documentation": {
                "identifier": "R_390_TLS_LDM32",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_LDM32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_LDM32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_LDM32 R_390 = 45\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_LDM64",
              "documentation": {
                "identifier": "R_390_TLS_LDM64",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_LDM64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_LDM64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_LDM64 R_390 = 46\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_IE32",
              "documentation": {
                "identifier": "R_390_TLS_IE32",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_IE32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_IE32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_IE32 R_390 = 47\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_IE64",
              "documentation": {
                "identifier": "R_390_TLS_IE64",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_IE64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_IE64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_IE64 R_390 = 48\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_IEENT",
              "documentation": {
                "identifier": "R_390_TLS_IEENT",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_IEENT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_IEENT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_IEENT R_390 = 49\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_LE32",
              "documentation": {
                "identifier": "R_390_TLS_LE32",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_LE32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_LE32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_LE32 R_390 = 50\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_LE64",
              "documentation": {
                "identifier": "R_390_TLS_LE64",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_LE64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_LE64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_LE64 R_390 = 51\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_LDO32",
              "documentation": {
                "identifier": "R_390_TLS_LDO32",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_LDO32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_LDO32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_LDO32 R_390 = 52\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_LDO64",
              "documentation": {
                "identifier": "R_390_TLS_LDO64",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_LDO64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_LDO64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_LDO64 R_390 = 53\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_DTPMOD",
              "documentation": {
                "identifier": "R_390_TLS_DTPMOD",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_DTPMOD",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_DTPMOD"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_DTPMOD R_390 = 54\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_DTPOFF",
              "documentation": {
                "identifier": "R_390_TLS_DTPOFF",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_DTPOFF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_DTPOFF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_DTPOFF R_390 = 55\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_TPOFF",
              "documentation": {
                "identifier": "R_390_TLS_TPOFF",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_TPOFF",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_TPOFF"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_TPOFF R_390 = 56\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_20",
              "documentation": {
                "identifier": "R_390_20",
                "newPage": false,
                "searchKey": "elf.R_390_20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_20 R_390 = 57\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOT20",
              "documentation": {
                "identifier": "R_390_GOT20",
                "newPage": false,
                "searchKey": "elf.R_390_GOT20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOT20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOT20 R_390 = 58\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_GOTPLT20",
              "documentation": {
                "identifier": "R_390_GOTPLT20",
                "newPage": false,
                "searchKey": "elf.R_390_GOTPLT20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_GOTPLT20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_GOTPLT20 R_390 = 59\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390_TLS_GOTIE20",
              "documentation": {
                "identifier": "R_390_TLS_GOTIE20",
                "newPage": false,
                "searchKey": "elf.R_390_TLS_GOTIE20",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_390_TLS_GOTIE20"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_390_TLS_GOTIE20 R_390 = 60\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_NONE",
              "documentation": {
                "identifier": "R_SPARC_NONE",
                "newPage": false,
                "searchKey": "elf.R_SPARC_NONE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_NONE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_NONE R_SPARC = 0\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_8",
              "documentation": {
                "identifier": "R_SPARC_8",
                "newPage": false,
                "searchKey": "elf.R_SPARC_8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_8 R_SPARC = 1\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_16",
              "documentation": {
                "identifier": "R_SPARC_16",
                "newPage": false,
                "searchKey": "elf.R_SPARC_16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_16 R_SPARC = 2\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_32",
              "documentation": {
                "identifier": "R_SPARC_32",
                "newPage": false,
                "searchKey": "elf.R_SPARC_32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_32 R_SPARC = 3\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_DISP8",
              "documentation": {
                "identifier": "R_SPARC_DISP8",
                "newPage": false,
                "searchKey": "elf.R_SPARC_DISP8",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_DISP8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_DISP8 R_SPARC = 4\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_DISP16",
              "documentation": {
                "identifier": "R_SPARC_DISP16",
                "newPage": false,
                "searchKey": "elf.R_SPARC_DISP16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_DISP16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_DISP16 R_SPARC = 5\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_DISP32",
              "documentation": {
                "identifier": "R_SPARC_DISP32",
                "newPage": false,
                "searchKey": "elf.R_SPARC_DISP32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_DISP32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_DISP32 R_SPARC = 6\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_WDISP30",
              "documentation": {
                "identifier": "R_SPARC_WDISP30",
                "newPage": false,
                "searchKey": "elf.R_SPARC_WDISP30",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_WDISP30"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_WDISP30 R_SPARC = 7\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_WDISP22",
              "documentation": {
                "identifier": "R_SPARC_WDISP22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_WDISP22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_WDISP22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_WDISP22 R_SPARC = 8\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_HI22",
              "documentation": {
                "identifier": "R_SPARC_HI22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_HI22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_HI22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_HI22 R_SPARC = 9\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_22",
              "documentation": {
                "identifier": "R_SPARC_22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_22 R_SPARC = 10\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_13",
              "documentation": {
                "identifier": "R_SPARC_13",
                "newPage": false,
                "searchKey": "elf.R_SPARC_13",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_13"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_13 R_SPARC = 11\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_LO10",
              "documentation": {
                "identifier": "R_SPARC_LO10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_LO10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_LO10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_LO10 R_SPARC = 12\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_GOT10",
              "documentation": {
                "identifier": "R_SPARC_GOT10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_GOT10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_GOT10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_GOT10 R_SPARC = 13\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_GOT13",
              "documentation": {
                "identifier": "R_SPARC_GOT13",
                "newPage": false,
                "searchKey": "elf.R_SPARC_GOT13",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_GOT13"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_GOT13 R_SPARC = 14\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_GOT22",
              "documentation": {
                "identifier": "R_SPARC_GOT22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_GOT22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_GOT22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_GOT22 R_SPARC = 15\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PC10",
              "documentation": {
                "identifier": "R_SPARC_PC10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PC10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PC10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PC10 R_SPARC = 16\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PC22",
              "documentation": {
                "identifier": "R_SPARC_PC22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PC22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PC22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PC22 R_SPARC = 17\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_WPLT30",
              "documentation": {
                "identifier": "R_SPARC_WPLT30",
                "newPage": false,
                "searchKey": "elf.R_SPARC_WPLT30",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_WPLT30"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_WPLT30 R_SPARC = 18\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_COPY",
              "documentation": {
                "identifier": "R_SPARC_COPY",
                "newPage": false,
                "searchKey": "elf.R_SPARC_COPY",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_COPY"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_COPY R_SPARC = 19\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_GLOB_DAT",
              "documentation": {
                "identifier": "R_SPARC_GLOB_DAT",
                "newPage": false,
                "searchKey": "elf.R_SPARC_GLOB_DAT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_GLOB_DAT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_GLOB_DAT R_SPARC = 20\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_JMP_SLOT",
              "documentation": {
                "identifier": "R_SPARC_JMP_SLOT",
                "newPage": false,
                "searchKey": "elf.R_SPARC_JMP_SLOT",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_JMP_SLOT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_JMP_SLOT R_SPARC = 21\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_RELATIVE",
              "documentation": {
                "identifier": "R_SPARC_RELATIVE",
                "newPage": false,
                "searchKey": "elf.R_SPARC_RELATIVE",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_RELATIVE"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_RELATIVE R_SPARC = 22\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_UA32",
              "documentation": {
                "identifier": "R_SPARC_UA32",
                "newPage": false,
                "searchKey": "elf.R_SPARC_UA32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_UA32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_UA32 R_SPARC = 23\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PLT32",
              "documentation": {
                "identifier": "R_SPARC_PLT32",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PLT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PLT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PLT32 R_SPARC = 24\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_HIPLT22",
              "documentation": {
                "identifier": "R_SPARC_HIPLT22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_HIPLT22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_HIPLT22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_HIPLT22 R_SPARC = 25\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_LOPLT10",
              "documentation": {
                "identifier": "R_SPARC_LOPLT10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_LOPLT10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_LOPLT10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_LOPLT10 R_SPARC = 26\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PCPLT32",
              "documentation": {
                "identifier": "R_SPARC_PCPLT32",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PCPLT32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PCPLT32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PCPLT32 R_SPARC = 27\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PCPLT22",
              "documentation": {
                "identifier": "R_SPARC_PCPLT22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PCPLT22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PCPLT22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PCPLT22 R_SPARC = 28\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PCPLT10",
              "documentation": {
                "identifier": "R_SPARC_PCPLT10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PCPLT10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PCPLT10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PCPLT10 R_SPARC = 29\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_10",
              "documentation": {
                "identifier": "R_SPARC_10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_10 R_SPARC = 30\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_11",
              "documentation": {
                "identifier": "R_SPARC_11",
                "newPage": false,
                "searchKey": "elf.R_SPARC_11",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_11"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_11 R_SPARC = 31\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_64",
              "documentation": {
                "identifier": "R_SPARC_64",
                "newPage": false,
                "searchKey": "elf.R_SPARC_64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_64 R_SPARC = 32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_OLO10",
              "documentation": {
                "identifier": "R_SPARC_OLO10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_OLO10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_OLO10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_OLO10 R_SPARC = 33\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_HH22",
              "documentation": {
                "identifier": "R_SPARC_HH22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_HH22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_HH22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_HH22 R_SPARC = 34\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_HM10",
              "documentation": {
                "identifier": "R_SPARC_HM10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_HM10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_HM10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_HM10 R_SPARC = 35\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_LM22",
              "documentation": {
                "identifier": "R_SPARC_LM22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_LM22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_LM22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_LM22 R_SPARC = 36\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PC_HH22",
              "documentation": {
                "identifier": "R_SPARC_PC_HH22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PC_HH22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PC_HH22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PC_HH22 R_SPARC = 37\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PC_HM10",
              "documentation": {
                "identifier": "R_SPARC_PC_HM10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PC_HM10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PC_HM10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PC_HM10 R_SPARC = 38\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PC_LM22",
              "documentation": {
                "identifier": "R_SPARC_PC_LM22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PC_LM22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PC_LM22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PC_LM22 R_SPARC = 39\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_WDISP16",
              "documentation": {
                "identifier": "R_SPARC_WDISP16",
                "newPage": false,
                "searchKey": "elf.R_SPARC_WDISP16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_WDISP16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_WDISP16 R_SPARC = 40\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_WDISP19",
              "documentation": {
                "identifier": "R_SPARC_WDISP19",
                "newPage": false,
                "searchKey": "elf.R_SPARC_WDISP19",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_WDISP19"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_WDISP19 R_SPARC = 41\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_GLOB_JMP",
              "documentation": {
                "identifier": "R_SPARC_GLOB_JMP",
                "newPage": false,
                "searchKey": "elf.R_SPARC_GLOB_JMP",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_GLOB_JMP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_GLOB_JMP R_SPARC = 42\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_7",
              "documentation": {
                "identifier": "R_SPARC_7",
                "newPage": false,
                "searchKey": "elf.R_SPARC_7",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_7"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_7 R_SPARC = 43\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_5",
              "documentation": {
                "identifier": "R_SPARC_5",
                "newPage": false,
                "searchKey": "elf.R_SPARC_5",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_5"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_5 R_SPARC = 44\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_6",
              "documentation": {
                "identifier": "R_SPARC_6",
                "newPage": false,
                "searchKey": "elf.R_SPARC_6",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_6"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_6 R_SPARC = 45\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_DISP64",
              "documentation": {
                "identifier": "R_SPARC_DISP64",
                "newPage": false,
                "searchKey": "elf.R_SPARC_DISP64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_DISP64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_DISP64 R_SPARC = 46\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_PLT64",
              "documentation": {
                "identifier": "R_SPARC_PLT64",
                "newPage": false,
                "searchKey": "elf.R_SPARC_PLT64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_PLT64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_PLT64 R_SPARC = 47\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_HIX22",
              "documentation": {
                "identifier": "R_SPARC_HIX22",
                "newPage": false,
                "searchKey": "elf.R_SPARC_HIX22",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_HIX22"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_HIX22 R_SPARC = 48\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_LOX10",
              "documentation": {
                "identifier": "R_SPARC_LOX10",
                "newPage": false,
                "searchKey": "elf.R_SPARC_LOX10",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_LOX10"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_LOX10 R_SPARC = 49\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_H44",
              "documentation": {
                "identifier": "R_SPARC_H44",
                "newPage": false,
                "searchKey": "elf.R_SPARC_H44",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_H44"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_H44 R_SPARC = 50\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_M44",
              "documentation": {
                "identifier": "R_SPARC_M44",
                "newPage": false,
                "searchKey": "elf.R_SPARC_M44",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_M44"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_M44 R_SPARC = 51\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_L44",
              "documentation": {
                "identifier": "R_SPARC_L44",
                "newPage": false,
                "searchKey": "elf.R_SPARC_L44",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_L44"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_L44 R_SPARC = 52\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_REGISTER",
              "documentation": {
                "identifier": "R_SPARC_REGISTER",
                "newPage": false,
                "searchKey": "elf.R_SPARC_REGISTER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_REGISTER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_REGISTER R_SPARC = 53\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_UA64",
              "documentation": {
                "identifier": "R_SPARC_UA64",
                "newPage": false,
                "searchKey": "elf.R_SPARC_UA64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_UA64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_UA64 R_SPARC = 54\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC_UA16",
              "documentation": {
                "identifier": "R_SPARC_UA16",
                "newPage": false,
                "searchKey": "elf.R_SPARC_UA16",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const R_SPARC_UA16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst R_SPARC_UA16 R_SPARC = 55\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ARM_MAGIC_TRAMP_NUMBER",
              "documentation": {
                "identifier": "ARM_MAGIC_TRAMP_NUMBER",
                "newPage": false,
                "searchKey": "elf.ARM_MAGIC_TRAMP_NUMBER",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ARM_MAGIC_TRAMP_NUMBER"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ARM_MAGIC_TRAMP_NUMBER = 0x5c000003\n```\n\nMagic number for the elf trampoline, chosen wisely to be an immediate value. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Sym32Size",
              "documentation": {
                "identifier": "Sym32Size",
                "newPage": false,
                "searchKey": "elf.Sym32Size",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const Sym32Size"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst Sym32Size = 16\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Sym64Size",
              "documentation": {
                "identifier": "Sym64Size",
                "newPage": false,
                "searchKey": "elf.Sym64Size",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const Sym64Size"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst Sym64Size = 24\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#seekStart",
              "documentation": {
                "identifier": "seekStart",
                "newPage": false,
                "searchKey": "elf.seekStart",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "const seekStart"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst seekStart int = 0\n```\n\nseekStart, seekCurrent, seekEnd are copies of io.SeekStart, io.SeekCurrent, and io.SeekEnd. We can't use the ones from package io because we want this code to build with Go 1.4 during cmd/dist bootstrap. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#seekCurrent",
              "documentation": {
                "identifier": "seekCurrent",
                "newPage": false,
                "searchKey": "elf.seekCurrent",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "const seekCurrent"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst seekCurrent int = 1\n```\n\nseekStart, seekCurrent, seekEnd are copies of io.SeekStart, io.SeekCurrent, and io.SeekEnd. We can't use the ones from package io because we want this code to build with Go 1.4 during cmd/dist bootstrap. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#seekEnd",
              "documentation": {
                "identifier": "seekEnd",
                "newPage": false,
                "searchKey": "elf.seekEnd",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "const seekEnd"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst seekEnd int = 2\n```\n\nseekStart, seekCurrent, seekEnd are copies of io.SeekStart, io.SeekCurrent, and io.SeekEnd. We can't use the ones from package io because we want this code to build with Go 1.4 during cmd/dist bootstrap. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/std/debug/elf#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "exported"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/debug/elf#versionStrings",
              "documentation": {
                "identifier": "versionStrings",
                "newPage": false,
                "searchKey": "elf.versionStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var versionStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar versionStrings = []intName{\n\t{0, \"EV_NONE\"},\n\t{1, \"EV_CURRENT\"},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#classStrings",
              "documentation": {
                "identifier": "classStrings",
                "newPage": false,
                "searchKey": "elf.classStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var classStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar classStrings = []intName{\n\t{0, \"ELFCLASSNONE\"},\n\t{1, \"ELFCLASS32\"},\n\t{2, \"ELFCLASS64\"},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#dataStrings",
              "documentation": {
                "identifier": "dataStrings",
                "newPage": false,
                "searchKey": "elf.dataStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var dataStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar dataStrings = []intName{\n\t{0, \"ELFDATANONE\"},\n\t{1, \"ELFDATA2LSB\"},\n\t{2, \"ELFDATA2MSB\"},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#osabiStrings",
              "documentation": {
                "identifier": "osabiStrings",
                "newPage": false,
                "searchKey": "elf.osabiStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var osabiStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar osabiStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#typeStrings",
              "documentation": {
                "identifier": "typeStrings",
                "newPage": false,
                "searchKey": "elf.typeStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var typeStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar typeStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#machineStrings",
              "documentation": {
                "identifier": "machineStrings",
                "newPage": false,
                "searchKey": "elf.machineStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var machineStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar machineStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#shnStrings",
              "documentation": {
                "identifier": "shnStrings",
                "newPage": false,
                "searchKey": "elf.shnStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var shnStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar shnStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#shtStrings",
              "documentation": {
                "identifier": "shtStrings",
                "newPage": false,
                "searchKey": "elf.shtStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var shtStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar shtStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#shfStrings",
              "documentation": {
                "identifier": "shfStrings",
                "newPage": false,
                "searchKey": "elf.shfStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var shfStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar shfStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#compressionStrings",
              "documentation": {
                "identifier": "compressionStrings",
                "newPage": false,
                "searchKey": "elf.compressionStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var compressionStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar compressionStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ptStrings",
              "documentation": {
                "identifier": "ptStrings",
                "newPage": false,
                "searchKey": "elf.ptStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ptStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ptStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#pfStrings",
              "documentation": {
                "identifier": "pfStrings",
                "newPage": false,
                "searchKey": "elf.pfStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var pfStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar pfStrings = []intName{\n\t{0x1, \"PF_X\"},\n\t{0x2, \"PF_W\"},\n\t{0x4, \"PF_R\"},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#dtStrings",
              "documentation": {
                "identifier": "dtStrings",
                "newPage": false,
                "searchKey": "elf.dtStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var dtStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar dtStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#dflagStrings",
              "documentation": {
                "identifier": "dflagStrings",
                "newPage": false,
                "searchKey": "elf.dflagStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var dflagStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar dflagStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ntypeStrings",
              "documentation": {
                "identifier": "ntypeStrings",
                "newPage": false,
                "searchKey": "elf.ntypeStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ntypeStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ntypeStrings = []intName{\n\t{1, \"NT_PRSTATUS\"},\n\t{2, \"NT_FPREGSET\"},\n\t{3, \"NT_PRPSINFO\"},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#stbStrings",
              "documentation": {
                "identifier": "stbStrings",
                "newPage": false,
                "searchKey": "elf.stbStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var stbStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar stbStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#sttStrings",
              "documentation": {
                "identifier": "sttStrings",
                "newPage": false,
                "searchKey": "elf.sttStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var sttStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar sttStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#stvStrings",
              "documentation": {
                "identifier": "stvStrings",
                "newPage": false,
                "searchKey": "elf.stvStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var stvStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar stvStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#rx86_64Strings",
              "documentation": {
                "identifier": "rx86_64Strings",
                "newPage": false,
                "searchKey": "elf.rx86_64Strings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var rx86_64Strings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar rx86_64Strings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#raarch64Strings",
              "documentation": {
                "identifier": "raarch64Strings",
                "newPage": false,
                "searchKey": "elf.raarch64Strings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var raarch64Strings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar raarch64Strings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ralphaStrings",
              "documentation": {
                "identifier": "ralphaStrings",
                "newPage": false,
                "searchKey": "elf.ralphaStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ralphaStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ralphaStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#rarmStrings",
              "documentation": {
                "identifier": "rarmStrings",
                "newPage": false,
                "searchKey": "elf.rarmStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var rarmStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar rarmStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#r386Strings",
              "documentation": {
                "identifier": "r386Strings",
                "newPage": false,
                "searchKey": "elf.r386Strings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var r386Strings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar r386Strings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#rmipsStrings",
              "documentation": {
                "identifier": "rmipsStrings",
                "newPage": false,
                "searchKey": "elf.rmipsStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var rmipsStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar rmipsStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#rppcStrings",
              "documentation": {
                "identifier": "rppcStrings",
                "newPage": false,
                "searchKey": "elf.rppcStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var rppcStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar rppcStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#rppc64Strings",
              "documentation": {
                "identifier": "rppc64Strings",
                "newPage": false,
                "searchKey": "elf.rppc64Strings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var rppc64Strings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar rppc64Strings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#rriscvStrings",
              "documentation": {
                "identifier": "rriscvStrings",
                "newPage": false,
                "searchKey": "elf.rriscvStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var rriscvStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar rriscvStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#r390Strings",
              "documentation": {
                "identifier": "r390Strings",
                "newPage": false,
                "searchKey": "elf.r390Strings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var r390Strings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar r390Strings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#rsparcStrings",
              "documentation": {
                "identifier": "rsparcStrings",
                "newPage": false,
                "searchKey": "elf.rsparcStrings",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var rsparcStrings"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar rsparcStrings = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ErrNoSymbols",
              "documentation": {
                "identifier": "ErrNoSymbols",
                "newPage": false,
                "searchKey": "elf.ErrNoSymbols",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var ErrNoSymbols"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ErrNoSymbols = errors.New(\"no symbol section\")\n```\n\nErrNoSymbols is returned by File.Symbols and File.DynamicSymbols if there is no such section in the File. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#nameTests",
              "documentation": {
                "identifier": "nameTests",
                "newPage": false,
                "searchKey": "elf.nameTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var nameTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar nameTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#fileTests",
              "documentation": {
                "identifier": "fileTests",
                "newPage": false,
                "searchKey": "elf.fileTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var fileTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar fileTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#relocationTests",
              "documentation": {
                "identifier": "relocationTests",
                "newPage": false,
                "searchKey": "elf.relocationTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var relocationTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar relocationTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#symbolsGolden",
              "documentation": {
                "identifier": "symbolsGolden",
                "newPage": false,
                "searchKey": "elf.symbolsGolden",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var symbolsGolden"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar symbolsGolden = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#dynamicSymbolsGolden",
              "documentation": {
                "identifier": "dynamicSymbolsGolden",
                "newPage": false,
                "searchKey": "elf.dynamicSymbolsGolden",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var dynamicSymbolsGolden"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar dynamicSymbolsGolden = ...\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/std/debug/elf#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "exported"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/debug/elf#Version",
              "documentation": {
                "identifier": "Version",
                "newPage": false,
                "searchKey": "elf.Version",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Version byte"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Version byte\n```\n\nVersion is found in Header.Ident[EI_VERSION] and Header.Version. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#Version.String",
                    "documentation": {
                      "identifier": "Version.String",
                      "newPage": false,
                      "searchKey": "elf.Version.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Version) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Version) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#Version.GoString",
                    "documentation": {
                      "identifier": "Version.GoString",
                      "newPage": false,
                      "searchKey": "elf.Version.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Version) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Version) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Class",
              "documentation": {
                "identifier": "Class",
                "newPage": false,
                "searchKey": "elf.Class",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Class byte"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Class byte\n```\n\nClass is found in Header.Ident[EI_CLASS] and Header.Class. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#Class.String",
                    "documentation": {
                      "identifier": "Class.String",
                      "newPage": false,
                      "searchKey": "elf.Class.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Class) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Class) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#Class.GoString",
                    "documentation": {
                      "identifier": "Class.GoString",
                      "newPage": false,
                      "searchKey": "elf.Class.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Class) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Class) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Data",
              "documentation": {
                "identifier": "Data",
                "newPage": false,
                "searchKey": "elf.Data",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Data byte"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Data byte\n```\n\nData is found in Header.Ident[EI_DATA] and Header.Data. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#Data.String",
                    "documentation": {
                      "identifier": "Data.String",
                      "newPage": false,
                      "searchKey": "elf.Data.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Data) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Data) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#Data.GoString",
                    "documentation": {
                      "identifier": "Data.GoString",
                      "newPage": false,
                      "searchKey": "elf.Data.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Data) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Data) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#OSABI",
              "documentation": {
                "identifier": "OSABI",
                "newPage": false,
                "searchKey": "elf.OSABI",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type OSABI byte"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype OSABI byte\n```\n\nOSABI is found in Header.Ident[EI_OSABI] and Header.OSABI. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#OSABI.String",
                    "documentation": {
                      "identifier": "OSABI.String",
                      "newPage": false,
                      "searchKey": "elf.OSABI.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i OSABI) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i OSABI) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#OSABI.GoString",
                    "documentation": {
                      "identifier": "OSABI.GoString",
                      "newPage": false,
                      "searchKey": "elf.OSABI.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i OSABI) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i OSABI) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Type",
              "documentation": {
                "identifier": "Type",
                "newPage": false,
                "searchKey": "elf.Type",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Type uint16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Type uint16\n```\n\nType is found in Header.Type. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#Type.String",
                    "documentation": {
                      "identifier": "Type.String",
                      "newPage": false,
                      "searchKey": "elf.Type.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Type) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Type) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#Type.GoString",
                    "documentation": {
                      "identifier": "Type.GoString",
                      "newPage": false,
                      "searchKey": "elf.Type.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Type) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Type) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Machine",
              "documentation": {
                "identifier": "Machine",
                "newPage": false,
                "searchKey": "elf.Machine",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Machine uint16"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Machine uint16\n```\n\nMachine is found in Header.Machine. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#Machine.String",
                    "documentation": {
                      "identifier": "Machine.String",
                      "newPage": false,
                      "searchKey": "elf.Machine.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Machine) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Machine) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#Machine.GoString",
                    "documentation": {
                      "identifier": "Machine.GoString",
                      "newPage": false,
                      "searchKey": "elf.Machine.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i Machine) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i Machine) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SectionIndex",
              "documentation": {
                "identifier": "SectionIndex",
                "newPage": false,
                "searchKey": "elf.SectionIndex",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type SectionIndex int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype SectionIndex int\n```\n\nSpecial section indices. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#SectionIndex.String",
                    "documentation": {
                      "identifier": "SectionIndex.String",
                      "newPage": false,
                      "searchKey": "elf.SectionIndex.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SectionIndex) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SectionIndex) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#SectionIndex.GoString",
                    "documentation": {
                      "identifier": "SectionIndex.GoString",
                      "newPage": false,
                      "searchKey": "elf.SectionIndex.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SectionIndex) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SectionIndex) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SectionType",
              "documentation": {
                "identifier": "SectionType",
                "newPage": false,
                "searchKey": "elf.SectionType",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type SectionType uint32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype SectionType uint32\n```\n\nSection type. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#SectionType.String",
                    "documentation": {
                      "identifier": "SectionType.String",
                      "newPage": false,
                      "searchKey": "elf.SectionType.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SectionType) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SectionType) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#SectionType.GoString",
                    "documentation": {
                      "identifier": "SectionType.GoString",
                      "newPage": false,
                      "searchKey": "elf.SectionType.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SectionType) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SectionType) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SectionFlag",
              "documentation": {
                "identifier": "SectionFlag",
                "newPage": false,
                "searchKey": "elf.SectionFlag",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type SectionFlag uint32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype SectionFlag uint32\n```\n\nSection flags. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#SectionFlag.String",
                    "documentation": {
                      "identifier": "SectionFlag.String",
                      "newPage": false,
                      "searchKey": "elf.SectionFlag.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SectionFlag) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SectionFlag) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#SectionFlag.GoString",
                    "documentation": {
                      "identifier": "SectionFlag.GoString",
                      "newPage": false,
                      "searchKey": "elf.SectionFlag.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SectionFlag) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SectionFlag) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#CompressionType",
              "documentation": {
                "identifier": "CompressionType",
                "newPage": false,
                "searchKey": "elf.CompressionType",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type CompressionType int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype CompressionType int\n```\n\nSection compression type. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#CompressionType.String",
                    "documentation": {
                      "identifier": "CompressionType.String",
                      "newPage": false,
                      "searchKey": "elf.CompressionType.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i CompressionType) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i CompressionType) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#CompressionType.GoString",
                    "documentation": {
                      "identifier": "CompressionType.GoString",
                      "newPage": false,
                      "searchKey": "elf.CompressionType.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i CompressionType) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i CompressionType) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ProgType",
              "documentation": {
                "identifier": "ProgType",
                "newPage": false,
                "searchKey": "elf.ProgType",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ProgType int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ProgType int\n```\n\nProg.Type \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#ProgType.String",
                    "documentation": {
                      "identifier": "ProgType.String",
                      "newPage": false,
                      "searchKey": "elf.ProgType.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i ProgType) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i ProgType) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#ProgType.GoString",
                    "documentation": {
                      "identifier": "ProgType.GoString",
                      "newPage": false,
                      "searchKey": "elf.ProgType.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i ProgType) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i ProgType) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ProgFlag",
              "documentation": {
                "identifier": "ProgFlag",
                "newPage": false,
                "searchKey": "elf.ProgFlag",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ProgFlag uint32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ProgFlag uint32\n```\n\nProg.Flag \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#ProgFlag.String",
                    "documentation": {
                      "identifier": "ProgFlag.String",
                      "newPage": false,
                      "searchKey": "elf.ProgFlag.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i ProgFlag) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i ProgFlag) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#ProgFlag.GoString",
                    "documentation": {
                      "identifier": "ProgFlag.GoString",
                      "newPage": false,
                      "searchKey": "elf.ProgFlag.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i ProgFlag) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i ProgFlag) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DynTag",
              "documentation": {
                "identifier": "DynTag",
                "newPage": false,
                "searchKey": "elf.DynTag",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type DynTag int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DynTag int\n```\n\nDyn.Tag \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#DynTag.String",
                    "documentation": {
                      "identifier": "DynTag.String",
                      "newPage": false,
                      "searchKey": "elf.DynTag.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i DynTag) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i DynTag) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#DynTag.GoString",
                    "documentation": {
                      "identifier": "DynTag.GoString",
                      "newPage": false,
                      "searchKey": "elf.DynTag.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i DynTag) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i DynTag) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#DynFlag",
              "documentation": {
                "identifier": "DynFlag",
                "newPage": false,
                "searchKey": "elf.DynFlag",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type DynFlag int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DynFlag int\n```\n\nDT_FLAGS values. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#DynFlag.String",
                    "documentation": {
                      "identifier": "DynFlag.String",
                      "newPage": false,
                      "searchKey": "elf.DynFlag.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i DynFlag) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i DynFlag) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#DynFlag.GoString",
                    "documentation": {
                      "identifier": "DynFlag.GoString",
                      "newPage": false,
                      "searchKey": "elf.DynFlag.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i DynFlag) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i DynFlag) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#NType",
              "documentation": {
                "identifier": "NType",
                "newPage": false,
                "searchKey": "elf.NType",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type NType int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype NType int\n```\n\nNType values; used in core files. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#NType.String",
                    "documentation": {
                      "identifier": "NType.String",
                      "newPage": false,
                      "searchKey": "elf.NType.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i NType) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i NType) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#NType.GoString",
                    "documentation": {
                      "identifier": "NType.GoString",
                      "newPage": false,
                      "searchKey": "elf.NType.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i NType) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i NType) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SymBind",
              "documentation": {
                "identifier": "SymBind",
                "newPage": false,
                "searchKey": "elf.SymBind",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type SymBind int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype SymBind int\n```\n\nSymbol Binding - ELFNN_ST_BIND - st_info \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#ST_BIND",
                    "documentation": {
                      "identifier": "ST_BIND",
                      "newPage": false,
                      "searchKey": "elf.ST_BIND",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func ST_BIND(info uint8) SymBind"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc ST_BIND(info uint8) SymBind\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#SymBind.String",
                    "documentation": {
                      "identifier": "SymBind.String",
                      "newPage": false,
                      "searchKey": "elf.SymBind.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SymBind) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SymBind) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#SymBind.GoString",
                    "documentation": {
                      "identifier": "SymBind.GoString",
                      "newPage": false,
                      "searchKey": "elf.SymBind.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SymBind) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SymBind) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SymType",
              "documentation": {
                "identifier": "SymType",
                "newPage": false,
                "searchKey": "elf.SymType",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type SymType int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype SymType int\n```\n\nSymbol type - ELFNN_ST_TYPE - st_info \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#ST_TYPE",
                    "documentation": {
                      "identifier": "ST_TYPE",
                      "newPage": false,
                      "searchKey": "elf.ST_TYPE",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func ST_TYPE(info uint8) SymType"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc ST_TYPE(info uint8) SymType\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#SymType.String",
                    "documentation": {
                      "identifier": "SymType.String",
                      "newPage": false,
                      "searchKey": "elf.SymType.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SymType) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SymType) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#SymType.GoString",
                    "documentation": {
                      "identifier": "SymType.GoString",
                      "newPage": false,
                      "searchKey": "elf.SymType.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SymType) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SymType) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SymVis",
              "documentation": {
                "identifier": "SymVis",
                "newPage": false,
                "searchKey": "elf.SymVis",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type SymVis int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype SymVis int\n```\n\nSymbol visibility - ELFNN_ST_VISIBILITY - st_other \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#ST_VISIBILITY",
                    "documentation": {
                      "identifier": "ST_VISIBILITY",
                      "newPage": false,
                      "searchKey": "elf.ST_VISIBILITY",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func ST_VISIBILITY(other uint8) SymVis"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc ST_VISIBILITY(other uint8) SymVis\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#SymVis.String",
                    "documentation": {
                      "identifier": "SymVis.String",
                      "newPage": false,
                      "searchKey": "elf.SymVis.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SymVis) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SymVis) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#SymVis.GoString",
                    "documentation": {
                      "identifier": "SymVis.GoString",
                      "newPage": false,
                      "searchKey": "elf.SymVis.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i SymVis) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i SymVis) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_X86_64",
              "documentation": {
                "identifier": "R_X86_64",
                "newPage": false,
                "searchKey": "elf.R_X86_64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_X86_64 int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_X86_64 int\n```\n\nRelocation types for x86-64. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_X86_64.String",
                    "documentation": {
                      "identifier": "R_X86_64.String",
                      "newPage": false,
                      "searchKey": "elf.R_X86_64.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_X86_64) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_X86_64) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_X86_64.GoString",
                    "documentation": {
                      "identifier": "R_X86_64.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_X86_64.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_X86_64) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_X86_64) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_AARCH64",
              "documentation": {
                "identifier": "R_AARCH64",
                "newPage": false,
                "searchKey": "elf.R_AARCH64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_AARCH64 int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_AARCH64 int\n```\n\nRelocation types for AArch64 (aka arm64) \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_AARCH64.String",
                    "documentation": {
                      "identifier": "R_AARCH64.String",
                      "newPage": false,
                      "searchKey": "elf.R_AARCH64.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_AARCH64) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_AARCH64) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_AARCH64.GoString",
                    "documentation": {
                      "identifier": "R_AARCH64.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_AARCH64.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_AARCH64) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_AARCH64) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ALPHA",
              "documentation": {
                "identifier": "R_ALPHA",
                "newPage": false,
                "searchKey": "elf.R_ALPHA",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_ALPHA int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_ALPHA int\n```\n\nRelocation types for Alpha. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_ALPHA.String",
                    "documentation": {
                      "identifier": "R_ALPHA.String",
                      "newPage": false,
                      "searchKey": "elf.R_ALPHA.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_ALPHA) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_ALPHA) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_ALPHA.GoString",
                    "documentation": {
                      "identifier": "R_ALPHA.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_ALPHA.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_ALPHA) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_ALPHA) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_ARM",
              "documentation": {
                "identifier": "R_ARM",
                "newPage": false,
                "searchKey": "elf.R_ARM",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_ARM int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_ARM int\n```\n\nRelocation types for ARM. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_ARM.String",
                    "documentation": {
                      "identifier": "R_ARM.String",
                      "newPage": false,
                      "searchKey": "elf.R_ARM.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_ARM) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_ARM) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_ARM.GoString",
                    "documentation": {
                      "identifier": "R_ARM.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_ARM.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_ARM) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_ARM) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_386",
              "documentation": {
                "identifier": "R_386",
                "newPage": false,
                "searchKey": "elf.R_386",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_386 int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_386 int\n```\n\nRelocation types for 386. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_386.String",
                    "documentation": {
                      "identifier": "R_386.String",
                      "newPage": false,
                      "searchKey": "elf.R_386.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_386) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_386) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_386.GoString",
                    "documentation": {
                      "identifier": "R_386.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_386.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_386) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_386) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_MIPS",
              "documentation": {
                "identifier": "R_MIPS",
                "newPage": false,
                "searchKey": "elf.R_MIPS",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_MIPS int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_MIPS int\n```\n\nRelocation types for MIPS. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_MIPS.String",
                    "documentation": {
                      "identifier": "R_MIPS.String",
                      "newPage": false,
                      "searchKey": "elf.R_MIPS.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_MIPS) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_MIPS) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_MIPS.GoString",
                    "documentation": {
                      "identifier": "R_MIPS.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_MIPS.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_MIPS) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_MIPS) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC",
              "documentation": {
                "identifier": "R_PPC",
                "newPage": false,
                "searchKey": "elf.R_PPC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_PPC int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_PPC int\n```\n\nRelocation types for PowerPC. \n\nValues that are shared by both R_PPC and R_PPC64 are prefixed with R_POWERPC_ in the ELF standard. For the R_PPC type, the relevant shared relocations have been renamed with the prefix R_PPC_. The original name follows the value in a comment. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_PPC.String",
                    "documentation": {
                      "identifier": "R_PPC.String",
                      "newPage": false,
                      "searchKey": "elf.R_PPC.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_PPC) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_PPC) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_PPC.GoString",
                    "documentation": {
                      "identifier": "R_PPC.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_PPC.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_PPC) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_PPC) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_PPC64",
              "documentation": {
                "identifier": "R_PPC64",
                "newPage": false,
                "searchKey": "elf.R_PPC64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_PPC64 int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_PPC64 int\n```\n\nRelocation types for 64-bit PowerPC or Power Architecture processors. \n\nValues that are shared by both R_PPC and R_PPC64 are prefixed with R_POWERPC_ in the ELF standard. For the R_PPC64 type, the relevant shared relocations have been renamed with the prefix R_PPC64_. The original name follows the value in a comment. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_PPC64.String",
                    "documentation": {
                      "identifier": "R_PPC64.String",
                      "newPage": false,
                      "searchKey": "elf.R_PPC64.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_PPC64) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_PPC64) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_PPC64.GoString",
                    "documentation": {
                      "identifier": "R_PPC64.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_PPC64.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_PPC64) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_PPC64) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_RISCV",
              "documentation": {
                "identifier": "R_RISCV",
                "newPage": false,
                "searchKey": "elf.R_RISCV",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_RISCV int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_RISCV int\n```\n\nRelocation types for RISC-V processors. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_RISCV.String",
                    "documentation": {
                      "identifier": "R_RISCV.String",
                      "newPage": false,
                      "searchKey": "elf.R_RISCV.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_RISCV) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_RISCV) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_RISCV.GoString",
                    "documentation": {
                      "identifier": "R_RISCV.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_RISCV.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_RISCV) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_RISCV) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_390",
              "documentation": {
                "identifier": "R_390",
                "newPage": false,
                "searchKey": "elf.R_390",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_390 int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_390 int\n```\n\nRelocation types for s390x processors. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_390.String",
                    "documentation": {
                      "identifier": "R_390.String",
                      "newPage": false,
                      "searchKey": "elf.R_390.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_390) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_390) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_390.GoString",
                    "documentation": {
                      "identifier": "R_390.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_390.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_390) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_390) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SPARC",
              "documentation": {
                "identifier": "R_SPARC",
                "newPage": false,
                "searchKey": "elf.R_SPARC",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type R_SPARC int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype R_SPARC int\n```\n\nRelocation types for SPARC. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_SPARC.String",
                    "documentation": {
                      "identifier": "R_SPARC.String",
                      "newPage": false,
                      "searchKey": "elf.R_SPARC.String",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_SPARC) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_SPARC) String() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#R_SPARC.GoString",
                    "documentation": {
                      "identifier": "R_SPARC.GoString",
                      "newPage": false,
                      "searchKey": "elf.R_SPARC.GoString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (i R_SPARC) GoString() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (i R_SPARC) GoString() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Header32",
              "documentation": {
                "identifier": "Header32",
                "newPage": false,
                "searchKey": "elf.Header32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Header32 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Header32 struct {\n\tIdent     [EI_NIDENT]byte /* File identification. */\n\tType      uint16          /* File type. */\n\tMachine   uint16          /* Machine architecture. */\n\tVersion   uint32          /* ELF format version. */\n\tEntry     uint32          /* Entry point. */\n\tPhoff     uint32          /* Program header file offset. */\n\tShoff     uint32          /* Section header file offset. */\n\tFlags     uint32          /* Architecture-specific flags. */\n\tEhsize    uint16          /* Size of ELF header in bytes. */\n\tPhentsize uint16          /* Size of program header entry. */\n\tPhnum     uint16          /* Number of program header entries. */\n\tShentsize uint16          /* Size of section header entry. */\n\tShnum     uint16          /* Number of section header entries. */\n\tShstrndx  uint16          /* Section name strings section. */\n}\n```\n\nELF32 File header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Section32",
              "documentation": {
                "identifier": "Section32",
                "newPage": false,
                "searchKey": "elf.Section32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Section32 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Section32 struct {\n\tName      uint32 /* Section name (index into the section header string table). */\n\tType      uint32 /* Section type. */\n\tFlags     uint32 /* Section flags. */\n\tAddr      uint32 /* Address in memory image. */\n\tOff       uint32 /* Offset in file. */\n\tSize      uint32 /* Size in bytes. */\n\tLink      uint32 /* Index of a related section. */\n\tInfo      uint32 /* Depends on section type. */\n\tAddralign uint32 /* Alignment in bytes. */\n\tEntsize   uint32 /* Size of each entry in section. */\n}\n```\n\nELF32 Section header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Prog32",
              "documentation": {
                "identifier": "Prog32",
                "newPage": false,
                "searchKey": "elf.Prog32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Prog32 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Prog32 struct {\n\tType   uint32 /* Entry type. */\n\tOff    uint32 /* File offset of contents. */\n\tVaddr  uint32 /* Virtual address in memory image. */\n\tPaddr  uint32 /* Physical address (not used). */\n\tFilesz uint32 /* Size of contents in file. */\n\tMemsz  uint32 /* Size of contents in memory. */\n\tFlags  uint32 /* Access permission flags. */\n\tAlign  uint32 /* Alignment in memory and file. */\n}\n```\n\nELF32 Program header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Dyn32",
              "documentation": {
                "identifier": "Dyn32",
                "newPage": false,
                "searchKey": "elf.Dyn32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Dyn32 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Dyn32 struct {\n\tTag int32  /* Entry type. */\n\tVal uint32 /* Integer/Address value. */\n}\n```\n\nELF32 Dynamic structure. The \".dynamic\" section contains an array of them. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Chdr32",
              "documentation": {
                "identifier": "Chdr32",
                "newPage": false,
                "searchKey": "elf.Chdr32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Chdr32 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Chdr32 struct {\n\tType      uint32\n\tSize      uint32\n\tAddralign uint32\n}\n```\n\nELF32 Compression header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Rel32",
              "documentation": {
                "identifier": "Rel32",
                "newPage": false,
                "searchKey": "elf.Rel32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Rel32 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Rel32 struct {\n\tOff  uint32 /* Location to be relocated. */\n\tInfo uint32 /* Relocation type and symbol index. */\n}\n```\n\nELF32 Relocations that don't need an addend field. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Rela32",
              "documentation": {
                "identifier": "Rela32",
                "newPage": false,
                "searchKey": "elf.Rela32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Rela32 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Rela32 struct {\n\tOff    uint32 /* Location to be relocated. */\n\tInfo   uint32 /* Relocation type and symbol index. */\n\tAddend int32  /* Addend. */\n}\n```\n\nELF32 Relocations that need an addend field. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Sym32",
              "documentation": {
                "identifier": "Sym32",
                "newPage": false,
                "searchKey": "elf.Sym32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Sym32 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Sym32 struct {\n\tName  uint32\n\tValue uint32\n\tSize  uint32\n\tInfo  uint8\n\tOther uint8\n\tShndx uint16\n}\n```\n\nELF32 Symbol. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Header64",
              "documentation": {
                "identifier": "Header64",
                "newPage": false,
                "searchKey": "elf.Header64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Header64 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Header64 struct {\n\tIdent     [EI_NIDENT]byte /* File identification. */\n\tType      uint16          /* File type. */\n\tMachine   uint16          /* Machine architecture. */\n\tVersion   uint32          /* ELF format version. */\n\tEntry     uint64          /* Entry point. */\n\tPhoff     uint64          /* Program header file offset. */\n\tShoff     uint64          /* Section header file offset. */\n\tFlags     uint32          /* Architecture-specific flags. */\n\tEhsize    uint16          /* Size of ELF header in bytes. */\n\tPhentsize uint16          /* Size of program header entry. */\n\tPhnum     uint16          /* Number of program header entries. */\n\tShentsize uint16          /* Size of section header entry. */\n\tShnum     uint16          /* Number of section header entries. */\n\tShstrndx  uint16          /* Section name strings section. */\n}\n```\n\nELF64 file header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Section64",
              "documentation": {
                "identifier": "Section64",
                "newPage": false,
                "searchKey": "elf.Section64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Section64 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Section64 struct {\n\tName      uint32 /* Section name (index into the section header string table). */\n\tType      uint32 /* Section type. */\n\tFlags     uint64 /* Section flags. */\n\tAddr      uint64 /* Address in memory image. */\n\tOff       uint64 /* Offset in file. */\n\tSize      uint64 /* Size in bytes. */\n\tLink      uint32 /* Index of a related section. */\n\tInfo      uint32 /* Depends on section type. */\n\tAddralign uint64 /* Alignment in bytes. */\n\tEntsize   uint64 /* Size of each entry in section. */\n}\n```\n\nELF64 Section header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Prog64",
              "documentation": {
                "identifier": "Prog64",
                "newPage": false,
                "searchKey": "elf.Prog64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Prog64 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Prog64 struct {\n\tType   uint32 /* Entry type. */\n\tFlags  uint32 /* Access permission flags. */\n\tOff    uint64 /* File offset of contents. */\n\tVaddr  uint64 /* Virtual address in memory image. */\n\tPaddr  uint64 /* Physical address (not used). */\n\tFilesz uint64 /* Size of contents in file. */\n\tMemsz  uint64 /* Size of contents in memory. */\n\tAlign  uint64 /* Alignment in memory and file. */\n}\n```\n\nELF64 Program header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Dyn64",
              "documentation": {
                "identifier": "Dyn64",
                "newPage": false,
                "searchKey": "elf.Dyn64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Dyn64 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Dyn64 struct {\n\tTag int64  /* Entry type. */\n\tVal uint64 /* Integer/address value */\n}\n```\n\nELF64 Dynamic structure. The \".dynamic\" section contains an array of them. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Chdr64",
              "documentation": {
                "identifier": "Chdr64",
                "newPage": false,
                "searchKey": "elf.Chdr64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Chdr64 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Chdr64 struct {\n\tType      uint32\n\t_         uint32 /* Reserved. */\n\tSize      uint64\n\tAddralign uint64\n}\n```\n\nELF64 Compression header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Rel64",
              "documentation": {
                "identifier": "Rel64",
                "newPage": false,
                "searchKey": "elf.Rel64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Rel64 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Rel64 struct {\n\tOff  uint64 /* Location to be relocated. */\n\tInfo uint64 /* Relocation type and symbol index. */\n}\n```\n\nELF64 relocations that don't need an addend field. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Rela64",
              "documentation": {
                "identifier": "Rela64",
                "newPage": false,
                "searchKey": "elf.Rela64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Rela64 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Rela64 struct {\n\tOff    uint64 /* Location to be relocated. */\n\tInfo   uint64 /* Relocation type and symbol index. */\n\tAddend int64  /* Addend. */\n}\n```\n\nELF64 relocations that need an addend field. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Sym64",
              "documentation": {
                "identifier": "Sym64",
                "newPage": false,
                "searchKey": "elf.Sym64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Sym64 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Sym64 struct {\n\tName  uint32 /* String table index of name. */\n\tInfo  uint8  /* Type and binding information. */\n\tOther uint8  /* Reserved (not used). */\n\tShndx uint16 /* Section index of symbol. */\n\tValue uint64 /* Symbol value. */\n\tSize  uint64 /* Size of associated object. */\n}\n```\n\nELF64 symbol table entries. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#intName",
              "documentation": {
                "identifier": "intName",
                "newPage": false,
                "searchKey": "elf.intName",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type intName struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype intName struct {\n\ti uint32\n\ts string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#FileHeader",
              "documentation": {
                "identifier": "FileHeader",
                "newPage": false,
                "searchKey": "elf.FileHeader",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type FileHeader struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype FileHeader struct {\n\tClass      Class\n\tData       Data\n\tVersion    Version\n\tOSABI      OSABI\n\tABIVersion uint8\n\tByteOrder  binary.ByteOrder\n\tType       Type\n\tMachine    Machine\n\tEntry      uint64\n}\n```\n\nA FileHeader represents an ELF file header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#File",
              "documentation": {
                "identifier": "File",
                "newPage": false,
                "searchKey": "elf.File",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type File struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype File struct {\n\tFileHeader\n\tSections  []*Section\n\tProgs     []*Prog\n\tcloser    io.Closer\n\tgnuNeed   []verneed\n\tgnuVersym []byte\n}\n```\n\nA File represents an open ELF file. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#Open",
                    "documentation": {
                      "identifier": "Open",
                      "newPage": false,
                      "searchKey": "elf.Open",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func Open(name string) (*File, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc Open(name string) (*File, error)\n```\n\nOpen opens the named file using os.Open and prepares it for use as an ELF binary. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#NewFile",
                    "documentation": {
                      "identifier": "NewFile",
                      "newPage": false,
                      "searchKey": "elf.NewFile",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewFile(r io.ReaderAt) (*File, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewFile(r io.ReaderAt) (*File, error)\n```\n\nNewFile creates a new File for accessing an ELF binary in an underlying reader. The ELF binary is expected to start at position 0 in the ReaderAt. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.stringTable",
                    "documentation": {
                      "identifier": "File.stringTable",
                      "newPage": false,
                      "searchKey": "elf.File.stringTable",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) stringTable(link uint32) ([]byte, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) stringTable(link uint32) ([]byte, error)\n```\n\nstringTable reads and returns the string table given by the specified link value. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.Close",
                    "documentation": {
                      "identifier": "File.Close",
                      "newPage": false,
                      "searchKey": "elf.File.Close",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) Close() error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) Close() error\n```\n\nClose closes the File. If the File was created using NewFile directly instead of Open, Close has no effect. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.SectionByType",
                    "documentation": {
                      "identifier": "File.SectionByType",
                      "newPage": false,
                      "searchKey": "elf.File.SectionByType",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) SectionByType(typ SectionType) *Section"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) SectionByType(typ SectionType) *Section\n```\n\nSectionByType returns the first section in f with the given type, or nil if there is no such section. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.getSymbols",
                    "documentation": {
                      "identifier": "File.getSymbols",
                      "newPage": false,
                      "searchKey": "elf.File.getSymbols",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) getSymbols(typ SectionType) ([]Symbol, []byte, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) getSymbols(typ SectionType) ([]Symbol, []byte, error)\n```\n\ngetSymbols returns a slice of Symbols from parsing the symbol table with the given type, along with the associated string table. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.getSymbols32",
                    "documentation": {
                      "identifier": "File.getSymbols32",
                      "newPage": false,
                      "searchKey": "elf.File.getSymbols32",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) getSymbols32(typ SectionType) ([]Symbol, []byte, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) getSymbols32(typ SectionType) ([]Symbol, []byte, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.getSymbols64",
                    "documentation": {
                      "identifier": "File.getSymbols64",
                      "newPage": false,
                      "searchKey": "elf.File.getSymbols64",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) getSymbols64(typ SectionType) ([]Symbol, []byte, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) getSymbols64(typ SectionType) ([]Symbol, []byte, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.Section",
                    "documentation": {
                      "identifier": "File.Section",
                      "newPage": false,
                      "searchKey": "elf.File.Section",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) Section(name string) *Section"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) Section(name string) *Section\n```\n\nSection returns a section with the given name, or nil if no such section exists. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocations",
                    "documentation": {
                      "identifier": "File.applyRelocations",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocations",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocations(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocations(dst []byte, rels []byte) error\n```\n\napplyRelocations applies relocations to dst. rels is a relocations section in REL or RELA format. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationsAMD64",
                    "documentation": {
                      "identifier": "File.applyRelocationsAMD64",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationsAMD64",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationsAMD64(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationsAMD64(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocations386",
                    "documentation": {
                      "identifier": "File.applyRelocations386",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocations386",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocations386(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocations386(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationsARM",
                    "documentation": {
                      "identifier": "File.applyRelocationsARM",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationsARM",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationsARM(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationsARM(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationsARM64",
                    "documentation": {
                      "identifier": "File.applyRelocationsARM64",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationsARM64",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationsARM64(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationsARM64(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationsPPC",
                    "documentation": {
                      "identifier": "File.applyRelocationsPPC",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationsPPC",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationsPPC(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationsPPC(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationsPPC64",
                    "documentation": {
                      "identifier": "File.applyRelocationsPPC64",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationsPPC64",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationsPPC64(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationsPPC64(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationsMIPS",
                    "documentation": {
                      "identifier": "File.applyRelocationsMIPS",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationsMIPS",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationsMIPS(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationsMIPS(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationsMIPS64",
                    "documentation": {
                      "identifier": "File.applyRelocationsMIPS64",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationsMIPS64",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationsMIPS64(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationsMIPS64(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationsRISCV64",
                    "documentation": {
                      "identifier": "File.applyRelocationsRISCV64",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationsRISCV64",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationsRISCV64(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationsRISCV64(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationss390x",
                    "documentation": {
                      "identifier": "File.applyRelocationss390x",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationss390x",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationss390x(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationss390x(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.applyRelocationsSPARC64",
                    "documentation": {
                      "identifier": "File.applyRelocationsSPARC64",
                      "newPage": false,
                      "searchKey": "elf.File.applyRelocationsSPARC64",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) applyRelocationsSPARC64(dst []byte, rels []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) applyRelocationsSPARC64(dst []byte, rels []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.DWARF",
                    "documentation": {
                      "identifier": "File.DWARF",
                      "newPage": false,
                      "searchKey": "elf.File.DWARF",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) DWARF() (*dwarf.Data, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) DWARF() (*dwarf.Data, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.Symbols",
                    "documentation": {
                      "identifier": "File.Symbols",
                      "newPage": false,
                      "searchKey": "elf.File.Symbols",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) Symbols() ([]Symbol, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) Symbols() ([]Symbol, error)\n```\n\nSymbols returns the symbol table for f. The symbols will be listed in the order they appear in f. \n\nFor compatibility with Go 1.0, Symbols omits the null symbol at index 0. After retrieving the symbols as symtab, an externally supplied index x corresponds to symtab[x-1], not symtab[x]. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.DynamicSymbols",
                    "documentation": {
                      "identifier": "File.DynamicSymbols",
                      "newPage": false,
                      "searchKey": "elf.File.DynamicSymbols",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) DynamicSymbols() ([]Symbol, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) DynamicSymbols() ([]Symbol, error)\n```\n\nDynamicSymbols returns the dynamic symbol table for f. The symbols will be listed in the order they appear in f. \n\nIf f has a symbol version table, the returned Symbols will have initialized Version and Library fields. \n\nFor compatibility with Symbols, DynamicSymbols omits the null symbol at index 0. After retrieving the symbols as symtab, an externally supplied index x corresponds to symtab[x-1], not symtab[x]. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.ImportedSymbols",
                    "documentation": {
                      "identifier": "File.ImportedSymbols",
                      "newPage": false,
                      "searchKey": "elf.File.ImportedSymbols",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) ImportedSymbols() ([]ImportedSymbol, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) ImportedSymbols() ([]ImportedSymbol, error)\n```\n\nImportedSymbols returns the names of all symbols referred to by the binary f that are expected to be satisfied by other libraries at dynamic load time. It does not return weak symbols. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.gnuVersionInit",
                    "documentation": {
                      "identifier": "File.gnuVersionInit",
                      "newPage": false,
                      "searchKey": "elf.File.gnuVersionInit",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) gnuVersionInit(str []byte) bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) gnuVersionInit(str []byte) bool\n```\n\ngnuVersionInit parses the GNU version tables for use by calls to gnuVersion. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.gnuVersion",
                    "documentation": {
                      "identifier": "File.gnuVersion",
                      "newPage": false,
                      "searchKey": "elf.File.gnuVersion",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) gnuVersion(i int) (library string, version string)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) gnuVersion(i int) (library string, version string)\n```\n\ngnuVersion adds Library and Version information to sym, which came from offset i of the symbol table. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.ImportedLibraries",
                    "documentation": {
                      "identifier": "File.ImportedLibraries",
                      "newPage": false,
                      "searchKey": "elf.File.ImportedLibraries",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) ImportedLibraries() ([]string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) ImportedLibraries() ([]string, error)\n```\n\nImportedLibraries returns the names of all libraries referred to by the binary f that are expected to be linked with the binary at dynamic link time. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#File.DynString",
                    "documentation": {
                      "identifier": "File.DynString",
                      "newPage": false,
                      "searchKey": "elf.File.DynString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *File) DynString(tag DynTag) ([]string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *File) DynString(tag DynTag) ([]string, error)\n```\n\nDynString returns the strings listed for the given tag in the file's dynamic section. \n\nThe tag must be one that takes string values: DT_NEEDED, DT_SONAME, DT_RPATH, or DT_RUNPATH. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#SectionHeader",
              "documentation": {
                "identifier": "SectionHeader",
                "newPage": false,
                "searchKey": "elf.SectionHeader",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type SectionHeader struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype SectionHeader struct {\n\tName      string\n\tType      SectionType\n\tFlags     SectionFlag\n\tAddr      uint64\n\tOffset    uint64\n\tSize      uint64\n\tLink      uint32\n\tInfo      uint32\n\tAddralign uint64\n\tEntsize   uint64\n\n\t// FileSize is the size of this section in the file in bytes.\n\t// If a section is compressed, FileSize is the size of the\n\t// compressed data, while Size (above) is the size of the\n\t// uncompressed data.\n\tFileSize uint64\n}\n```\n\nA SectionHeader represents a single ELF section header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Section",
              "documentation": {
                "identifier": "Section",
                "newPage": false,
                "searchKey": "elf.Section",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Section struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Section struct {\n\tSectionHeader\n\n\t// Embed ReaderAt for ReadAt method.\n\t// Do not embed SectionReader directly\n\t// to avoid having Read and Seek.\n\t// If a client wants Read and Seek it must use\n\t// Open() to avoid fighting over the seek offset\n\t// with other clients.\n\t//\n\t// ReaderAt may be nil if the section is not easily available\n\t// in a random-access form. For example, a compressed section\n\t// may have a nil ReaderAt.\n\tio.ReaderAt\n\tsr *io.SectionReader\n\n\tcompressionType   CompressionType\n\tcompressionOffset int64\n}\n```\n\nA Section represents a single section in an ELF file. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#Section.Data",
                    "documentation": {
                      "identifier": "Section.Data",
                      "newPage": false,
                      "searchKey": "elf.Section.Data",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Section) Data() ([]byte, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Section) Data() ([]byte, error)\n```\n\nData reads and returns the contents of the ELF section. Even if the section is stored compressed in the ELF file, Data returns uncompressed data. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#Section.Open",
                    "documentation": {
                      "identifier": "Section.Open",
                      "newPage": false,
                      "searchKey": "elf.Section.Open",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Section) Open() io.ReadSeeker"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Section) Open() io.ReadSeeker\n```\n\nOpen returns a new ReadSeeker reading the ELF section. Even if the section is stored compressed in the ELF file, the ReadSeeker reads uncompressed data. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ProgHeader",
              "documentation": {
                "identifier": "ProgHeader",
                "newPage": false,
                "searchKey": "elf.ProgHeader",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ProgHeader struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ProgHeader struct {\n\tType   ProgType\n\tFlags  ProgFlag\n\tOff    uint64\n\tVaddr  uint64\n\tPaddr  uint64\n\tFilesz uint64\n\tMemsz  uint64\n\tAlign  uint64\n}\n```\n\nA ProgHeader represents a single ELF program header. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Prog",
              "documentation": {
                "identifier": "Prog",
                "newPage": false,
                "searchKey": "elf.Prog",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Prog struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Prog struct {\n\tProgHeader\n\n\t// Embed ReaderAt for ReadAt method.\n\t// Do not embed SectionReader directly\n\t// to avoid having Read and Seek.\n\t// If a client wants Read and Seek it must use\n\t// Open() to avoid fighting over the seek offset\n\t// with other clients.\n\tio.ReaderAt\n\tsr *io.SectionReader\n}\n```\n\nA Prog represents a single ELF program header in an ELF binary. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#Prog.Open",
                    "documentation": {
                      "identifier": "Prog.Open",
                      "newPage": false,
                      "searchKey": "elf.Prog.Open",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p *Prog) Open() io.ReadSeeker"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p *Prog) Open() io.ReadSeeker\n```\n\nOpen returns a new ReadSeeker reading the ELF program body. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#Symbol",
              "documentation": {
                "identifier": "Symbol",
                "newPage": false,
                "searchKey": "elf.Symbol",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Symbol struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Symbol struct {\n\tName        string\n\tInfo, Other byte\n\tSection     SectionIndex\n\tValue, Size uint64\n\n\t// Version and Library are present only for the dynamic symbol\n\t// table.\n\tVersion string\n\tLibrary string\n}\n```\n\nA Symbol represents an entry in an ELF symbol table section. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#FormatError",
              "documentation": {
                "identifier": "FormatError",
                "newPage": false,
                "searchKey": "elf.FormatError",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type FormatError struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype FormatError struct {\n\toff int64\n\tmsg string\n\tval interface{}\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#FormatError.Error",
                    "documentation": {
                      "identifier": "FormatError.Error",
                      "newPage": false,
                      "searchKey": "elf.FormatError.Error",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e *FormatError) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e *FormatError) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ImportedSymbol",
              "documentation": {
                "identifier": "ImportedSymbol",
                "newPage": false,
                "searchKey": "elf.ImportedSymbol",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ImportedSymbol struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ImportedSymbol struct {\n\tName    string\n\tVersion string\n\tLibrary string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#verneed",
              "documentation": {
                "identifier": "verneed",
                "newPage": false,
                "searchKey": "elf.verneed",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type verneed struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype verneed struct {\n\tFile string\n\tName string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#errorReader",
              "documentation": {
                "identifier": "errorReader",
                "newPage": false,
                "searchKey": "elf.errorReader",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type errorReader struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype errorReader struct {\n\terror\n}\n```\n\nerrorReader returns error from all operations. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#errorReader.Read",
                    "documentation": {
                      "identifier": "errorReader.Read",
                      "newPage": false,
                      "searchKey": "elf.errorReader.Read",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r errorReader) Read(p []byte) (n int, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r errorReader) Read(p []byte) (n int, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#errorReader.ReadAt",
                    "documentation": {
                      "identifier": "errorReader.ReadAt",
                      "newPage": false,
                      "searchKey": "elf.errorReader.ReadAt",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r errorReader) ReadAt(p []byte, off int64) (n int, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r errorReader) ReadAt(p []byte, off int64) (n int, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#errorReader.Seek",
                    "documentation": {
                      "identifier": "errorReader.Seek",
                      "newPage": false,
                      "searchKey": "elf.errorReader.Seek",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r errorReader) Seek(offset int64, whence int) (int64, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r errorReader) Seek(offset int64, whence int) (int64, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#errorReader.Close",
                    "documentation": {
                      "identifier": "errorReader.Close",
                      "newPage": false,
                      "searchKey": "elf.errorReader.Close",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r errorReader) Close() error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r errorReader) Close() error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#readSeekerFromReader",
              "documentation": {
                "identifier": "readSeekerFromReader",
                "newPage": false,
                "searchKey": "elf.readSeekerFromReader",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type readSeekerFromReader struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype readSeekerFromReader struct {\n\treset  func() (io.Reader, error)\n\tr      io.Reader\n\tsize   int64\n\toffset int64\n}\n```\n\nreadSeekerFromReader converts an io.Reader into an io.ReadSeeker. In general Seek may not be efficient, but it is optimized for common cases such as seeking to the end to find the length of the data. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/debug/elf#readSeekerFromReader.start",
                    "documentation": {
                      "identifier": "readSeekerFromReader.start",
                      "newPage": false,
                      "searchKey": "elf.readSeekerFromReader.start",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *readSeekerFromReader) start()"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *readSeekerFromReader) start()\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#readSeekerFromReader.Read",
                    "documentation": {
                      "identifier": "readSeekerFromReader.Read",
                      "newPage": false,
                      "searchKey": "elf.readSeekerFromReader.Read",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *readSeekerFromReader) Read(p []byte) (n int, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *readSeekerFromReader) Read(p []byte) (n int, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/debug/elf#readSeekerFromReader.Seek",
                    "documentation": {
                      "identifier": "readSeekerFromReader.Seek",
                      "newPage": false,
                      "searchKey": "elf.readSeekerFromReader.Seek",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *readSeekerFromReader) Seek(offset int64, whence int) (int64, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *readSeekerFromReader) Seek(offset int64, whence int) (int64, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#nameTest",
              "documentation": {
                "identifier": "nameTest",
                "newPage": false,
                "searchKey": "elf.nameTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type nameTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype nameTest struct {\n\tval interface{}\n\tstr string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#fileTest",
              "documentation": {
                "identifier": "fileTest",
                "newPage": false,
                "searchKey": "elf.fileTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type fileTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype fileTest struct {\n\tfile     string\n\thdr      FileHeader\n\tsections []SectionHeader\n\tprogs    []ProgHeader\n\tneeded   []string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#relocationTestEntry",
              "documentation": {
                "identifier": "relocationTestEntry",
                "newPage": false,
                "searchKey": "elf.relocationTestEntry",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type relocationTestEntry struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype relocationTestEntry struct {\n\tentryNumber int\n\tentry       *dwarf.Entry\n\tpcRanges    [][2]uint64\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#relocationTest",
              "documentation": {
                "identifier": "relocationTest",
                "newPage": false,
                "searchKey": "elf.relocationTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type relocationTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype relocationTest struct {\n\tfile    string\n\tentries []relocationTestEntry\n}\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/std/debug/elf#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "exported"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/debug/elf#R_SYM32",
              "documentation": {
                "identifier": "R_SYM32",
                "newPage": false,
                "searchKey": "elf.R_SYM32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func R_SYM32(info uint32) uint32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc R_SYM32(info uint32) uint32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_TYPE32",
              "documentation": {
                "identifier": "R_TYPE32",
                "newPage": false,
                "searchKey": "elf.R_TYPE32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func R_TYPE32(info uint32) uint32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc R_TYPE32(info uint32) uint32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_INFO32",
              "documentation": {
                "identifier": "R_INFO32",
                "newPage": false,
                "searchKey": "elf.R_INFO32",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func R_INFO32(sym, typ uint32) uint32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc R_INFO32(sym, typ uint32) uint32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#ST_INFO",
              "documentation": {
                "identifier": "ST_INFO",
                "newPage": false,
                "searchKey": "elf.ST_INFO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ST_INFO(bind SymBind, typ SymType) uint8"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ST_INFO(bind SymBind, typ SymType) uint8\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_SYM64",
              "documentation": {
                "identifier": "R_SYM64",
                "newPage": false,
                "searchKey": "elf.R_SYM64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func R_SYM64(info uint64) uint32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc R_SYM64(info uint64) uint32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_TYPE64",
              "documentation": {
                "identifier": "R_TYPE64",
                "newPage": false,
                "searchKey": "elf.R_TYPE64",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func R_TYPE64(info uint64) uint32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc R_TYPE64(info uint64) uint32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#R_INFO",
              "documentation": {
                "identifier": "R_INFO",
                "newPage": false,
                "searchKey": "elf.R_INFO",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func R_INFO(sym, typ uint32) uint64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc R_INFO(sym, typ uint32) uint64\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#stringName",
              "documentation": {
                "identifier": "stringName",
                "newPage": false,
                "searchKey": "elf.stringName",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func stringName(i uint32, names []intName, goSyntax bool) string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc stringName(i uint32, names []intName, goSyntax bool) string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#flagName",
              "documentation": {
                "identifier": "flagName",
                "newPage": false,
                "searchKey": "elf.flagName",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func flagName(i uint32, names []intName, goSyntax bool) string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc flagName(i uint32, names []intName, goSyntax bool) string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#getString",
              "documentation": {
                "identifier": "getString",
                "newPage": false,
                "searchKey": "elf.getString",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func getString(section []byte, start int) (string, bool)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc getString(section []byte, start int) (string, bool)\n```\n\ngetString extracts a string from an ELF string table. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#canApplyRelocation",
              "documentation": {
                "identifier": "canApplyRelocation",
                "newPage": false,
                "searchKey": "elf.canApplyRelocation",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func canApplyRelocation(sym *Symbol) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc canApplyRelocation(sym *Symbol) bool\n```\n\ncanApplyRelocation reports whether we should try to apply a relocation to a DWARF data section, given a pointer to the symbol targeted by the relocation. Most relocations in DWARF data tend to be section-relative, but some target non-section symbols (for example, low_PC attrs on subprogram or compilation unit DIEs that target function symbols). \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#TestNames",
              "documentation": {
                "identifier": "TestNames",
                "newPage": false,
                "searchKey": "elf.TestNames",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNames(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNames(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#TestOpen",
              "documentation": {
                "identifier": "TestOpen",
                "newPage": false,
                "searchKey": "elf.TestOpen",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestOpen(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestOpen(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#decompress",
              "documentation": {
                "identifier": "decompress",
                "newPage": false,
                "searchKey": "elf.decompress",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func decompress(gz string) (io.ReaderAt, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc decompress(gz string) (io.ReaderAt, error)\n```\n\nelf.NewFile requires io.ReaderAt, which compress/gzip cannot provide. Decompress the file to a bytes.Reader. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#TestDWARFRelocations",
              "documentation": {
                "identifier": "TestDWARFRelocations",
                "newPage": false,
                "searchKey": "elf.TestDWARFRelocations",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDWARFRelocations(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDWARFRelocations(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#TestCompressedDWARF",
              "documentation": {
                "identifier": "TestCompressedDWARF",
                "newPage": false,
                "searchKey": "elf.TestCompressedDWARF",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCompressedDWARF(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCompressedDWARF(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#TestCompressedSection",
              "documentation": {
                "identifier": "TestCompressedSection",
                "newPage": false,
                "searchKey": "elf.TestCompressedSection",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCompressedSection(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCompressedSection(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#TestNoSectionOverlaps",
              "documentation": {
                "identifier": "TestNoSectionOverlaps",
                "newPage": false,
                "searchKey": "elf.TestNoSectionOverlaps",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNoSectionOverlaps(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNoSectionOverlaps(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#TestIssue10996",
              "documentation": {
                "identifier": "TestIssue10996",
                "newPage": false,
                "searchKey": "elf.TestIssue10996",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestIssue10996(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestIssue10996(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/debug/elf#TestSymbols",
              "documentation": {
                "identifier": "TestSymbols",
                "newPage": false,
                "searchKey": "elf.TestSymbols",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSymbols(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSymbols(t *testing.T)\n```\n\nTODO: remove duplicate code \n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
