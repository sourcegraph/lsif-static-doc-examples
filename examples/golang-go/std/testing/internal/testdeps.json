{
  "pathID": "/std/testing/internal/testdeps",
  "documentation": {
    "identifier": "testdeps",
    "newPage": true,
    "searchKey": "std/testing/internal/testdeps",
    "tags": []
  },
  "label": {
    "kind": "plaintext",
    "value": "Package testdeps"
  },
  "detail": {
    "kind": "markdown",
    "value": "Package testdeps provides access to dependencies needed by test execution. \n\nThis package is imported by the generated main package, which passes TestDeps into testing.Main. This allows tests to use packages at run time without making those packages direct dependencies of package testing. Direct dependencies of package testing are harder to write tests for. \n\n"
  },
  "children": [
    {
      "node": {
        "pathID": "/std/testing/internal/testdeps#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/testing/internal/testdeps#matchPat",
              "documentation": {
                "identifier": "matchPat",
                "newPage": false,
                "searchKey": "testdeps.matchPat",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var matchPat"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar matchPat string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/testing/internal/testdeps#matchRe",
              "documentation": {
                "identifier": "matchRe",
                "newPage": false,
                "searchKey": "testdeps.matchRe",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var matchRe"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar matchRe *regexp.Regexp\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/testing/internal/testdeps#ImportPath",
              "documentation": {
                "identifier": "ImportPath",
                "newPage": false,
                "searchKey": "testdeps.ImportPath",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var ImportPath"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ImportPath string\n```\n\nImportPath is the import path of the testing binary, set by the generated main function. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/std/testing/internal/testdeps#log",
              "documentation": {
                "identifier": "log",
                "newPage": false,
                "searchKey": "testdeps.log",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var log"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar log testLog\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/std/testing/internal/testdeps#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/std/testing/internal/testdeps#TestDeps",
              "documentation": {
                "identifier": "TestDeps",
                "newPage": false,
                "searchKey": "testdeps.TestDeps",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type TestDeps struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype TestDeps struct{}\n```\n\nTestDeps is an implementation of the testing.testDeps interface, suitable for passing to testing.MainStart. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#TestDeps.MatchString",
                    "documentation": {
                      "identifier": "TestDeps.MatchString",
                      "newPage": false,
                      "searchKey": "testdeps.TestDeps.MatchString",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (TestDeps) MatchString(pat, str string) (result bool, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (TestDeps) MatchString(pat, str string) (result bool, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#TestDeps.StartCPUProfile",
                    "documentation": {
                      "identifier": "TestDeps.StartCPUProfile",
                      "newPage": false,
                      "searchKey": "testdeps.TestDeps.StartCPUProfile",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (TestDeps) StartCPUProfile(w io.Writer) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (TestDeps) StartCPUProfile(w io.Writer) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#TestDeps.StopCPUProfile",
                    "documentation": {
                      "identifier": "TestDeps.StopCPUProfile",
                      "newPage": false,
                      "searchKey": "testdeps.TestDeps.StopCPUProfile",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (TestDeps) StopCPUProfile()"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (TestDeps) StopCPUProfile()\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#TestDeps.WriteProfileTo",
                    "documentation": {
                      "identifier": "TestDeps.WriteProfileTo",
                      "newPage": false,
                      "searchKey": "testdeps.TestDeps.WriteProfileTo",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (TestDeps) WriteProfileTo(name string, w io.Writer, debug int) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (TestDeps) WriteProfileTo(name string, w io.Writer, debug int) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#TestDeps.ImportPath",
                    "documentation": {
                      "identifier": "TestDeps.ImportPath",
                      "newPage": false,
                      "searchKey": "testdeps.TestDeps.ImportPath",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (TestDeps) ImportPath() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (TestDeps) ImportPath() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#TestDeps.StartTestLog",
                    "documentation": {
                      "identifier": "TestDeps.StartTestLog",
                      "newPage": false,
                      "searchKey": "testdeps.TestDeps.StartTestLog",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (TestDeps) StartTestLog(w io.Writer)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (TestDeps) StartTestLog(w io.Writer)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#TestDeps.StopTestLog",
                    "documentation": {
                      "identifier": "TestDeps.StopTestLog",
                      "newPage": false,
                      "searchKey": "testdeps.TestDeps.StopTestLog",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (TestDeps) StopTestLog() error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (TestDeps) StopTestLog() error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#TestDeps.SetPanicOnExit0",
                    "documentation": {
                      "identifier": "TestDeps.SetPanicOnExit0",
                      "newPage": false,
                      "searchKey": "testdeps.TestDeps.SetPanicOnExit0",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (TestDeps) SetPanicOnExit0(v bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (TestDeps) SetPanicOnExit0(v bool)\n```\n\nSetPanicOnExit0 tells the os package whether to panic on os.Exit(0). \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/std/testing/internal/testdeps#testLog",
              "documentation": {
                "identifier": "testLog",
                "newPage": false,
                "searchKey": "testdeps.testLog",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type testLog struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype testLog struct {\n\tmu  sync.Mutex\n\tw   *bufio.Writer\n\tset bool\n}\n```\n\ntestLog implements testlog.Interface, logging actions by package os. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#testLog.Getenv",
                    "documentation": {
                      "identifier": "testLog.Getenv",
                      "newPage": false,
                      "searchKey": "testdeps.testLog.Getenv",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (l *testLog) Getenv(key string)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (l *testLog) Getenv(key string)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#testLog.Open",
                    "documentation": {
                      "identifier": "testLog.Open",
                      "newPage": false,
                      "searchKey": "testdeps.testLog.Open",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (l *testLog) Open(name string)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (l *testLog) Open(name string)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#testLog.Stat",
                    "documentation": {
                      "identifier": "testLog.Stat",
                      "newPage": false,
                      "searchKey": "testdeps.testLog.Stat",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (l *testLog) Stat(name string)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (l *testLog) Stat(name string)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#testLog.Chdir",
                    "documentation": {
                      "identifier": "testLog.Chdir",
                      "newPage": false,
                      "searchKey": "testdeps.testLog.Chdir",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (l *testLog) Chdir(name string)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (l *testLog) Chdir(name string)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/std/testing/internal/testdeps#testLog.add",
                    "documentation": {
                      "identifier": "testLog.add",
                      "newPage": false,
                      "searchKey": "testdeps.testLog.add",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (l *testLog) add(op, name string)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (l *testLog) add(op, name string)\n```\n\nadd adds the (op, name) pair to the test log. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    }
  ]
}
