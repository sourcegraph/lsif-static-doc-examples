{
  "pathID": "/runtime/internal/math",
  "documentation": {
    "identifier": "math",
    "newPage": true,
    "searchKey": "runtime/internal/math",
    "tags": [
      "package",
      "private"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package math"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/runtime/internal/math#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/runtime/internal/math#MaxUintptr",
              "documentation": {
                "identifier": "MaxUintptr",
                "newPage": false,
                "searchKey": "math.MaxUintptr",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const MaxUintptr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst MaxUintptr = ^uintptr(0)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/runtime/internal/math#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/runtime/internal/math#Mul64",
              "documentation": {
                "identifier": "Mul64",
                "newPage": false,
                "searchKey": "math.Mul64",
                "tags": [
                  "method"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func Mul64(x, y uint64) (hi, lo uint64)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Mul64(x, y uint64) (hi, lo uint64)\n```\n\nMul64 returns the 128-bit product of x and y: (hi, lo) = x * y with the product bits' upper half returned in hi and the lower half returned in lo. This is a copy from math/bits.Mul64 On supported platforms this is an intrinsic lowered by the compiler. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/runtime/internal/math#MulUintptr",
              "documentation": {
                "identifier": "MulUintptr",
                "newPage": false,
                "searchKey": "math.MulUintptr",
                "tags": [
                  "method"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func MulUintptr(a, b uintptr) (uintptr, bool)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc MulUintptr(a, b uintptr) (uintptr, bool)\n```\n\nMulUintptr returns a * b and whether the multiplication overflowed. On supported platforms this is an intrinsic lowered by the compiler. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
