{
  "pathID": "/unicode",
  "documentation": {
    "identifier": "unicode",
    "newPage": true,
    "searchKey": "unicode",
    "tags": [
      "package"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package unicode"
  },
  "detail": {
    "kind": "markdown",
    "value": "Package unicode provides data and functions to test some properties of Unicode code points. \n\n"
  },
  "children": [
    {
      "node": {
        "pathID": "/unicode#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/unicode#LowerCase",
              "documentation": {
                "identifier": "LowerCase",
                "newPage": false,
                "searchKey": "unicode.LowerCase",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const LowerCase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst LowerCase\n```\n\nIndices into the Delta arrays inside CaseRanges for case mapping. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#MaxASCII",
              "documentation": {
                "identifier": "MaxASCII",
                "newPage": false,
                "searchKey": "unicode.MaxASCII",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const MaxASCII"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst MaxASCII = '\\u007F' // maximum ASCII value.\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#MaxCase",
              "documentation": {
                "identifier": "MaxCase",
                "newPage": false,
                "searchKey": "unicode.MaxCase",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const MaxCase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst MaxCase\n```\n\nIndices into the Delta arrays inside CaseRanges for case mapping. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#MaxLatin1",
              "documentation": {
                "identifier": "MaxLatin1",
                "newPage": false,
                "searchKey": "unicode.MaxLatin1",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const MaxLatin1"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst MaxLatin1 = '\\u00FF' // maximum Latin-1 value.\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#MaxRune",
              "documentation": {
                "identifier": "MaxRune",
                "newPage": false,
                "searchKey": "unicode.MaxRune",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const MaxRune"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst MaxRune = '\\U0010FFFF' // Maximum valid Unicode code point.\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#ReplacementChar",
              "documentation": {
                "identifier": "ReplacementChar",
                "newPage": false,
                "searchKey": "unicode.ReplacementChar",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const ReplacementChar"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst ReplacementChar = '\\uFFFD' // Represents invalid code points.\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#TitleCase",
              "documentation": {
                "identifier": "TitleCase",
                "newPage": false,
                "searchKey": "unicode.TitleCase",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const TitleCase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst TitleCase\n```\n\nIndices into the Delta arrays inside CaseRanges for case mapping. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#UpperCase",
              "documentation": {
                "identifier": "UpperCase",
                "newPage": false,
                "searchKey": "unicode.UpperCase",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const UpperCase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst UpperCase = iota\n```\n\nIndices into the Delta arrays inside CaseRanges for case mapping. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#UpperLower",
              "documentation": {
                "identifier": "UpperLower",
                "newPage": false,
                "searchKey": "unicode.UpperLower",
                "tags": [
                  "constant",
                  "number"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const UpperLower"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst UpperLower = MaxRune + 1 // (Cannot be a valid delta.)\n\n```\n\nIf the Delta field of a CaseRange is UpperLower, it means this CaseRange represents a sequence of the form (say) Upper Lower Upper Lower. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Version",
              "documentation": {
                "identifier": "Version",
                "newPage": false,
                "searchKey": "unicode.Version",
                "tags": [
                  "constant",
                  "string"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const Version"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst Version = \"13.0.0\"\n```\n\nVersion is the Unicode edition from which the tables are derived. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#linearMax",
              "documentation": {
                "identifier": "linearMax",
                "newPage": false,
                "searchKey": "unicode.linearMax",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const linearMax"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst linearMax = 18\n```\n\nlinearMax is the maximum size table for linear search for non-Latin1 rune. Derived by running 'go test -calibrate'. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pC",
              "documentation": {
                "identifier": "pC",
                "newPage": false,
                "searchKey": "unicode.pC",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pC = 1 << iota // a control character.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pLl",
              "documentation": {
                "identifier": "pLl",
                "newPage": false,
                "searchKey": "unicode.pLl",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pLl"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pLl // a lower-case letter.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pLmask",
              "documentation": {
                "identifier": "pLmask",
                "newPage": false,
                "searchKey": "unicode.pLmask",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pLmask"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pLmask = pLo\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pLo",
              "documentation": {
                "identifier": "pLo",
                "newPage": false,
                "searchKey": "unicode.pLo",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pLo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pLo = pLl | pLu // a letter that is neither upper nor lower case.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pLu",
              "documentation": {
                "identifier": "pLu",
                "newPage": false,
                "searchKey": "unicode.pLu",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pLu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pLu // an upper-case letter.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pN",
              "documentation": {
                "identifier": "pN",
                "newPage": false,
                "searchKey": "unicode.pN",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pN"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pN // a numeral.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pP",
              "documentation": {
                "identifier": "pP",
                "newPage": false,
                "searchKey": "unicode.pP",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pP"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pP // a punctuation character.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pS",
              "documentation": {
                "identifier": "pS",
                "newPage": false,
                "searchKey": "unicode.pS",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pS"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pS // a symbolic character.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pZ",
              "documentation": {
                "identifier": "pZ",
                "newPage": false,
                "searchKey": "unicode.pZ",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pZ"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pZ // a spacing character.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pg",
              "documentation": {
                "identifier": "pg",
                "newPage": false,
                "searchKey": "unicode.pg",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pg"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pg = pp | pZ // a graphical character according to the Unicode definition.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#pp",
              "documentation": {
                "identifier": "pp",
                "newPage": false,
                "searchKey": "unicode.pp",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const pp"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst pp // a printable character according to Go's definition.\n\n```\n\nBit masks for each code point under U+0100, for fast lookup. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/unicode#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/unicode#ASCII_Hex_Digit",
              "documentation": {
                "identifier": "ASCII_Hex_Digit",
                "newPage": false,
                "searchKey": "unicode.ASCII_Hex_Digit",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var ASCII_Hex_Digit"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ASCII_Hex_Digit // ASCII_Hex_Digit is the set of Unicode characters with property ASCII_Hex_Digit.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Adlam",
              "documentation": {
                "identifier": "Adlam",
                "newPage": false,
                "searchKey": "unicode.Adlam",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Adlam"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Adlam = _Adlam // Adlam is the set of Unicode characters in script Adlam.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Ahom",
              "documentation": {
                "identifier": "Ahom",
                "newPage": false,
                "searchKey": "unicode.Ahom",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Ahom"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Ahom = _Ahom // Ahom is the set of Unicode characters in script Ahom.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Anatolian_Hieroglyphs",
              "documentation": {
                "identifier": "Anatolian_Hieroglyphs",
                "newPage": false,
                "searchKey": "unicode.Anatolian_Hieroglyphs",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Anatolian_Hieroglyphs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Anatolian_Hieroglyphs // Anatolian_Hieroglyphs is the set of Unicode characters in script Anatolian_Hieroglyphs.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Arabic",
              "documentation": {
                "identifier": "Arabic",
                "newPage": false,
                "searchKey": "unicode.Arabic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Arabic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Arabic = _Arabic // Arabic is the set of Unicode characters in script Arabic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Armenian",
              "documentation": {
                "identifier": "Armenian",
                "newPage": false,
                "searchKey": "unicode.Armenian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Armenian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Armenian = _Armenian // Armenian is the set of Unicode characters in script Armenian.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Avestan",
              "documentation": {
                "identifier": "Avestan",
                "newPage": false,
                "searchKey": "unicode.Avestan",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Avestan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Avestan = _Avestan // Avestan is the set of Unicode characters in script Avestan.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#AzeriCase",
              "documentation": {
                "identifier": "AzeriCase",
                "newPage": false,
                "searchKey": "unicode.AzeriCase",
                "tags": [
                  "variable",
                  "array",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var AzeriCase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar AzeriCase SpecialCase = _TurkishCase\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Balinese",
              "documentation": {
                "identifier": "Balinese",
                "newPage": false,
                "searchKey": "unicode.Balinese",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Balinese"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Balinese = _Balinese // Balinese is the set of Unicode characters in script Balinese.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Bamum",
              "documentation": {
                "identifier": "Bamum",
                "newPage": false,
                "searchKey": "unicode.Bamum",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Bamum"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Bamum = _Bamum // Bamum is the set of Unicode characters in script Bamum.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Bassa_Vah",
              "documentation": {
                "identifier": "Bassa_Vah",
                "newPage": false,
                "searchKey": "unicode.Bassa_Vah",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Bassa_Vah"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Bassa_Vah = _Bassa_Vah // Bassa_Vah is the set of Unicode characters in script Bassa_Vah.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Batak",
              "documentation": {
                "identifier": "Batak",
                "newPage": false,
                "searchKey": "unicode.Batak",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Batak"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Batak = _Batak // Batak is the set of Unicode characters in script Batak.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Bengali",
              "documentation": {
                "identifier": "Bengali",
                "newPage": false,
                "searchKey": "unicode.Bengali",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Bengali"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Bengali = _Bengali // Bengali is the set of Unicode characters in script Bengali.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Bhaiksuki",
              "documentation": {
                "identifier": "Bhaiksuki",
                "newPage": false,
                "searchKey": "unicode.Bhaiksuki",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Bhaiksuki"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Bhaiksuki = _Bhaiksuki // Bhaiksuki is the set of Unicode characters in script Bhaiksuki.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Bidi_Control",
              "documentation": {
                "identifier": "Bidi_Control",
                "newPage": false,
                "searchKey": "unicode.Bidi_Control",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Bidi_Control"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Bidi_Control // Bidi_Control is the set of Unicode characters with property Bidi_Control.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Bopomofo",
              "documentation": {
                "identifier": "Bopomofo",
                "newPage": false,
                "searchKey": "unicode.Bopomofo",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Bopomofo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Bopomofo = _Bopomofo // Bopomofo is the set of Unicode characters in script Bopomofo.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Brahmi",
              "documentation": {
                "identifier": "Brahmi",
                "newPage": false,
                "searchKey": "unicode.Brahmi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Brahmi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Brahmi = _Brahmi // Brahmi is the set of Unicode characters in script Brahmi.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Braille",
              "documentation": {
                "identifier": "Braille",
                "newPage": false,
                "searchKey": "unicode.Braille",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Braille"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Braille = _Braille // Braille is the set of Unicode characters in script Braille.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Buginese",
              "documentation": {
                "identifier": "Buginese",
                "newPage": false,
                "searchKey": "unicode.Buginese",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Buginese"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Buginese = _Buginese // Buginese is the set of Unicode characters in script Buginese.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Buhid",
              "documentation": {
                "identifier": "Buhid",
                "newPage": false,
                "searchKey": "unicode.Buhid",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Buhid"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Buhid = _Buhid // Buhid is the set of Unicode characters in script Buhid.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#C",
              "documentation": {
                "identifier": "C",
                "newPage": false,
                "searchKey": "unicode.C",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var C"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar C = _C\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Canadian_Aboriginal",
              "documentation": {
                "identifier": "Canadian_Aboriginal",
                "newPage": false,
                "searchKey": "unicode.Canadian_Aboriginal",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Canadian_Aboriginal"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Canadian_Aboriginal // Canadian_Aboriginal is the set of Unicode characters in script Canadian_Aboriginal.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Carian",
              "documentation": {
                "identifier": "Carian",
                "newPage": false,
                "searchKey": "unicode.Carian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Carian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Carian = _Carian // Carian is the set of Unicode characters in script Carian.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#CaseRanges",
              "documentation": {
                "identifier": "CaseRanges",
                "newPage": false,
                "searchKey": "unicode.CaseRanges",
                "tags": [
                  "variable",
                  "array",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var CaseRanges"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar CaseRanges = _CaseRanges\n```\n\nCaseRanges is the table describing case mappings for all letters with non-self mappings. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Categories",
              "documentation": {
                "identifier": "Categories",
                "newPage": false,
                "searchKey": "unicode.Categories",
                "tags": [
                  "variable",
                  "object"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Categories"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Categories = ...\n```\n\nCategories is the set of Unicode category tables. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Caucasian_Albanian",
              "documentation": {
                "identifier": "Caucasian_Albanian",
                "newPage": false,
                "searchKey": "unicode.Caucasian_Albanian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Caucasian_Albanian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Caucasian_Albanian // Caucasian_Albanian is the set of Unicode characters in script Caucasian_Albanian.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Cc",
              "documentation": {
                "identifier": "Cc",
                "newPage": false,
                "searchKey": "unicode.Cc",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Cc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Cc = _Cc // Cc is the set of Unicode characters in category Cc (Other, control).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Cf",
              "documentation": {
                "identifier": "Cf",
                "newPage": false,
                "searchKey": "unicode.Cf",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Cf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Cf = _Cf // Cf is the set of Unicode characters in category Cf (Other, format).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Chakma",
              "documentation": {
                "identifier": "Chakma",
                "newPage": false,
                "searchKey": "unicode.Chakma",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Chakma"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Chakma = _Chakma // Chakma is the set of Unicode characters in script Chakma.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Cham",
              "documentation": {
                "identifier": "Cham",
                "newPage": false,
                "searchKey": "unicode.Cham",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Cham"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Cham = _Cham // Cham is the set of Unicode characters in script Cham.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Cherokee",
              "documentation": {
                "identifier": "Cherokee",
                "newPage": false,
                "searchKey": "unicode.Cherokee",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Cherokee"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Cherokee = _Cherokee // Cherokee is the set of Unicode characters in script Cherokee.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Chorasmian",
              "documentation": {
                "identifier": "Chorasmian",
                "newPage": false,
                "searchKey": "unicode.Chorasmian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Chorasmian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Chorasmian = _Chorasmian // Chorasmian is the set of Unicode characters in script Chorasmian.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Co",
              "documentation": {
                "identifier": "Co",
                "newPage": false,
                "searchKey": "unicode.Co",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Co"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Co = _Co // Co is the set of Unicode characters in category Co (Other, private use).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Common",
              "documentation": {
                "identifier": "Common",
                "newPage": false,
                "searchKey": "unicode.Common",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Common"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Common = _Common // Common is the set of Unicode characters in script Common.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Coptic",
              "documentation": {
                "identifier": "Coptic",
                "newPage": false,
                "searchKey": "unicode.Coptic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Coptic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Coptic = _Coptic // Coptic is the set of Unicode characters in script Coptic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Cs",
              "documentation": {
                "identifier": "Cs",
                "newPage": false,
                "searchKey": "unicode.Cs",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Cs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Cs = _Cs // Cs is the set of Unicode characters in category Cs (Other, surrogate).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Cuneiform",
              "documentation": {
                "identifier": "Cuneiform",
                "newPage": false,
                "searchKey": "unicode.Cuneiform",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Cuneiform"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Cuneiform = _Cuneiform // Cuneiform is the set of Unicode characters in script Cuneiform.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Cypriot",
              "documentation": {
                "identifier": "Cypriot",
                "newPage": false,
                "searchKey": "unicode.Cypriot",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Cypriot"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Cypriot = _Cypriot // Cypriot is the set of Unicode characters in script Cypriot.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Cyrillic",
              "documentation": {
                "identifier": "Cyrillic",
                "newPage": false,
                "searchKey": "unicode.Cyrillic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Cyrillic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Cyrillic = _Cyrillic // Cyrillic is the set of Unicode characters in script Cyrillic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Dash",
              "documentation": {
                "identifier": "Dash",
                "newPage": false,
                "searchKey": "unicode.Dash",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Dash"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Dash = _Dash // Dash is the set of Unicode characters with property Dash.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Deprecated",
              "documentation": {
                "identifier": "Deprecated",
                "newPage": false,
                "searchKey": "unicode.Deprecated",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Deprecated"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Deprecated // Deprecated is the set of Unicode characters with property Deprecated.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Deseret",
              "documentation": {
                "identifier": "Deseret",
                "newPage": false,
                "searchKey": "unicode.Deseret",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Deseret"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Deseret = _Deseret // Deseret is the set of Unicode characters in script Deseret.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Devanagari",
              "documentation": {
                "identifier": "Devanagari",
                "newPage": false,
                "searchKey": "unicode.Devanagari",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Devanagari"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Devanagari = _Devanagari // Devanagari is the set of Unicode characters in script Devanagari.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Diacritic",
              "documentation": {
                "identifier": "Diacritic",
                "newPage": false,
                "searchKey": "unicode.Diacritic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Diacritic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Diacritic = _Diacritic // Diacritic is the set of Unicode characters with property Diacritic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Digit",
              "documentation": {
                "identifier": "Digit",
                "newPage": false,
                "searchKey": "unicode.Digit",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Digit"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Digit = _Nd // Digit is the set of Unicode characters with the \"decimal digit\" property.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Dives_Akuru",
              "documentation": {
                "identifier": "Dives_Akuru",
                "newPage": false,
                "searchKey": "unicode.Dives_Akuru",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Dives_Akuru"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Dives_Akuru // Dives_Akuru is the set of Unicode characters in script Dives_Akuru.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Dogra",
              "documentation": {
                "identifier": "Dogra",
                "newPage": false,
                "searchKey": "unicode.Dogra",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Dogra"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Dogra = _Dogra // Dogra is the set of Unicode characters in script Dogra.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Duployan",
              "documentation": {
                "identifier": "Duployan",
                "newPage": false,
                "searchKey": "unicode.Duployan",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Duployan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Duployan = _Duployan // Duployan is the set of Unicode characters in script Duployan.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Egyptian_Hieroglyphs",
              "documentation": {
                "identifier": "Egyptian_Hieroglyphs",
                "newPage": false,
                "searchKey": "unicode.Egyptian_Hieroglyphs",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Egyptian_Hieroglyphs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Egyptian_Hieroglyphs // Egyptian_Hieroglyphs is the set of Unicode characters in script Egyptian_Hieroglyphs.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Elbasan",
              "documentation": {
                "identifier": "Elbasan",
                "newPage": false,
                "searchKey": "unicode.Elbasan",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Elbasan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Elbasan = _Elbasan // Elbasan is the set of Unicode characters in script Elbasan.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Elymaic",
              "documentation": {
                "identifier": "Elymaic",
                "newPage": false,
                "searchKey": "unicode.Elymaic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Elymaic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Elymaic = _Elymaic // Elymaic is the set of Unicode characters in script Elymaic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Ethiopic",
              "documentation": {
                "identifier": "Ethiopic",
                "newPage": false,
                "searchKey": "unicode.Ethiopic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Ethiopic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Ethiopic = _Ethiopic // Ethiopic is the set of Unicode characters in script Ethiopic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Extender",
              "documentation": {
                "identifier": "Extender",
                "newPage": false,
                "searchKey": "unicode.Extender",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Extender"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Extender = _Extender // Extender is the set of Unicode characters with property Extender.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#FoldCategory",
              "documentation": {
                "identifier": "FoldCategory",
                "newPage": false,
                "searchKey": "unicode.FoldCategory",
                "tags": [
                  "variable",
                  "object"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var FoldCategory"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar FoldCategory = ...\n```\n\nFoldCategory maps a category name to a table of code points outside the category that are equivalent under simple case folding to code points inside the category. If there is no entry for a category name, there are no such points. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#FoldScript",
              "documentation": {
                "identifier": "FoldScript",
                "newPage": false,
                "searchKey": "unicode.FoldScript",
                "tags": [
                  "variable",
                  "object"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var FoldScript"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar FoldScript = ...\n```\n\nFoldScript maps a script name to a table of code points outside the script that are equivalent under simple case folding to code points inside the script. If there is no entry for a script name, there are no such points. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Georgian",
              "documentation": {
                "identifier": "Georgian",
                "newPage": false,
                "searchKey": "unicode.Georgian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Georgian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Georgian = _Georgian // Georgian is the set of Unicode characters in script Georgian.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Glagolitic",
              "documentation": {
                "identifier": "Glagolitic",
                "newPage": false,
                "searchKey": "unicode.Glagolitic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Glagolitic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Glagolitic = _Glagolitic // Glagolitic is the set of Unicode characters in script Glagolitic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Gothic",
              "documentation": {
                "identifier": "Gothic",
                "newPage": false,
                "searchKey": "unicode.Gothic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Gothic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Gothic = _Gothic // Gothic is the set of Unicode characters in script Gothic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Grantha",
              "documentation": {
                "identifier": "Grantha",
                "newPage": false,
                "searchKey": "unicode.Grantha",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Grantha"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Grantha = _Grantha // Grantha is the set of Unicode characters in script Grantha.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#GraphicRanges",
              "documentation": {
                "identifier": "GraphicRanges",
                "newPage": false,
                "searchKey": "unicode.GraphicRanges",
                "tags": [
                  "variable",
                  "array",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var GraphicRanges"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar GraphicRanges = []*RangeTable{\n\tL, M, N, P, S, Zs,\n}\n```\n\nGraphicRanges defines the set of graphic characters according to Unicode. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Greek",
              "documentation": {
                "identifier": "Greek",
                "newPage": false,
                "searchKey": "unicode.Greek",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Greek"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Greek = _Greek // Greek is the set of Unicode characters in script Greek.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Gujarati",
              "documentation": {
                "identifier": "Gujarati",
                "newPage": false,
                "searchKey": "unicode.Gujarati",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Gujarati"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Gujarati = _Gujarati // Gujarati is the set of Unicode characters in script Gujarati.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Gunjala_Gondi",
              "documentation": {
                "identifier": "Gunjala_Gondi",
                "newPage": false,
                "searchKey": "unicode.Gunjala_Gondi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Gunjala_Gondi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Gunjala_Gondi // Gunjala_Gondi is the set of Unicode characters in script Gunjala_Gondi.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Gurmukhi",
              "documentation": {
                "identifier": "Gurmukhi",
                "newPage": false,
                "searchKey": "unicode.Gurmukhi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Gurmukhi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Gurmukhi = _Gurmukhi // Gurmukhi is the set of Unicode characters in script Gurmukhi.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Han",
              "documentation": {
                "identifier": "Han",
                "newPage": false,
                "searchKey": "unicode.Han",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Han"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Han = _Han // Han is the set of Unicode characters in script Han.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Hangul",
              "documentation": {
                "identifier": "Hangul",
                "newPage": false,
                "searchKey": "unicode.Hangul",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Hangul"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Hangul = _Hangul // Hangul is the set of Unicode characters in script Hangul.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Hanifi_Rohingya",
              "documentation": {
                "identifier": "Hanifi_Rohingya",
                "newPage": false,
                "searchKey": "unicode.Hanifi_Rohingya",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Hanifi_Rohingya"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Hanifi_Rohingya // Hanifi_Rohingya is the set of Unicode characters in script Hanifi_Rohingya.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Hanunoo",
              "documentation": {
                "identifier": "Hanunoo",
                "newPage": false,
                "searchKey": "unicode.Hanunoo",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Hanunoo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Hanunoo = _Hanunoo // Hanunoo is the set of Unicode characters in script Hanunoo.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Hatran",
              "documentation": {
                "identifier": "Hatran",
                "newPage": false,
                "searchKey": "unicode.Hatran",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Hatran"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Hatran = _Hatran // Hatran is the set of Unicode characters in script Hatran.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Hebrew",
              "documentation": {
                "identifier": "Hebrew",
                "newPage": false,
                "searchKey": "unicode.Hebrew",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Hebrew"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Hebrew = _Hebrew // Hebrew is the set of Unicode characters in script Hebrew.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Hex_Digit",
              "documentation": {
                "identifier": "Hex_Digit",
                "newPage": false,
                "searchKey": "unicode.Hex_Digit",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Hex_Digit"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Hex_Digit = _Hex_Digit // Hex_Digit is the set of Unicode characters with property Hex_Digit.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Hiragana",
              "documentation": {
                "identifier": "Hiragana",
                "newPage": false,
                "searchKey": "unicode.Hiragana",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Hiragana"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Hiragana = _Hiragana // Hiragana is the set of Unicode characters in script Hiragana.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Hyphen",
              "documentation": {
                "identifier": "Hyphen",
                "newPage": false,
                "searchKey": "unicode.Hyphen",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Hyphen"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Hyphen = _Hyphen // Hyphen is the set of Unicode characters with property Hyphen.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IDS_Binary_Operator",
              "documentation": {
                "identifier": "IDS_Binary_Operator",
                "newPage": false,
                "searchKey": "unicode.IDS_Binary_Operator",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var IDS_Binary_Operator"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar IDS_Binary_Operator // IDS_Binary_Operator is the set of Unicode characters with property IDS_Binary_Operator.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IDS_Trinary_Operator",
              "documentation": {
                "identifier": "IDS_Trinary_Operator",
                "newPage": false,
                "searchKey": "unicode.IDS_Trinary_Operator",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var IDS_Trinary_Operator"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar IDS_Trinary_Operator // IDS_Trinary_Operator is the set of Unicode characters with property IDS_Trinary_Operator.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Ideographic",
              "documentation": {
                "identifier": "Ideographic",
                "newPage": false,
                "searchKey": "unicode.Ideographic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Ideographic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Ideographic // Ideographic is the set of Unicode characters with property Ideographic.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Imperial_Aramaic",
              "documentation": {
                "identifier": "Imperial_Aramaic",
                "newPage": false,
                "searchKey": "unicode.Imperial_Aramaic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Imperial_Aramaic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Imperial_Aramaic // Imperial_Aramaic is the set of Unicode characters in script Imperial_Aramaic.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Inherited",
              "documentation": {
                "identifier": "Inherited",
                "newPage": false,
                "searchKey": "unicode.Inherited",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Inherited"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Inherited = _Inherited // Inherited is the set of Unicode characters in script Inherited.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Inscriptional_Pahlavi",
              "documentation": {
                "identifier": "Inscriptional_Pahlavi",
                "newPage": false,
                "searchKey": "unicode.Inscriptional_Pahlavi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Inscriptional_Pahlavi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Inscriptional_Pahlavi // Inscriptional_Pahlavi is the set of Unicode characters in script Inscriptional_Pahlavi.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Inscriptional_Parthian",
              "documentation": {
                "identifier": "Inscriptional_Parthian",
                "newPage": false,
                "searchKey": "unicode.Inscriptional_Parthian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Inscriptional_Parthian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Inscriptional_Parthian // Inscriptional_Parthian is the set of Unicode characters in script Inscriptional_Parthian.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Javanese",
              "documentation": {
                "identifier": "Javanese",
                "newPage": false,
                "searchKey": "unicode.Javanese",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Javanese"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Javanese = _Javanese // Javanese is the set of Unicode characters in script Javanese.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Join_Control",
              "documentation": {
                "identifier": "Join_Control",
                "newPage": false,
                "searchKey": "unicode.Join_Control",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Join_Control"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Join_Control // Join_Control is the set of Unicode characters with property Join_Control.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Kaithi",
              "documentation": {
                "identifier": "Kaithi",
                "newPage": false,
                "searchKey": "unicode.Kaithi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Kaithi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Kaithi = _Kaithi // Kaithi is the set of Unicode characters in script Kaithi.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Kannada",
              "documentation": {
                "identifier": "Kannada",
                "newPage": false,
                "searchKey": "unicode.Kannada",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Kannada"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Kannada = _Kannada // Kannada is the set of Unicode characters in script Kannada.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Katakana",
              "documentation": {
                "identifier": "Katakana",
                "newPage": false,
                "searchKey": "unicode.Katakana",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Katakana"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Katakana = _Katakana // Katakana is the set of Unicode characters in script Katakana.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Kayah_Li",
              "documentation": {
                "identifier": "Kayah_Li",
                "newPage": false,
                "searchKey": "unicode.Kayah_Li",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Kayah_Li"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Kayah_Li = _Kayah_Li // Kayah_Li is the set of Unicode characters in script Kayah_Li.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Kharoshthi",
              "documentation": {
                "identifier": "Kharoshthi",
                "newPage": false,
                "searchKey": "unicode.Kharoshthi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Kharoshthi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Kharoshthi = _Kharoshthi // Kharoshthi is the set of Unicode characters in script Kharoshthi.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Khitan_Small_Script",
              "documentation": {
                "identifier": "Khitan_Small_Script",
                "newPage": false,
                "searchKey": "unicode.Khitan_Small_Script",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Khitan_Small_Script"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Khitan_Small_Script // Khitan_Small_Script is the set of Unicode characters in script Khitan_Small_Script.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Khmer",
              "documentation": {
                "identifier": "Khmer",
                "newPage": false,
                "searchKey": "unicode.Khmer",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Khmer"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Khmer = _Khmer // Khmer is the set of Unicode characters in script Khmer.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Khojki",
              "documentation": {
                "identifier": "Khojki",
                "newPage": false,
                "searchKey": "unicode.Khojki",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Khojki"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Khojki = _Khojki // Khojki is the set of Unicode characters in script Khojki.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Khudawadi",
              "documentation": {
                "identifier": "Khudawadi",
                "newPage": false,
                "searchKey": "unicode.Khudawadi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Khudawadi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Khudawadi = _Khudawadi // Khudawadi is the set of Unicode characters in script Khudawadi.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#L",
              "documentation": {
                "identifier": "L",
                "newPage": false,
                "searchKey": "unicode.L",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var L"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar L = _L\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lao",
              "documentation": {
                "identifier": "Lao",
                "newPage": false,
                "searchKey": "unicode.Lao",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lao"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lao = _Lao // Lao is the set of Unicode characters in script Lao.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Latin",
              "documentation": {
                "identifier": "Latin",
                "newPage": false,
                "searchKey": "unicode.Latin",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Latin"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Latin = _Latin // Latin is the set of Unicode characters in script Latin.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lepcha",
              "documentation": {
                "identifier": "Lepcha",
                "newPage": false,
                "searchKey": "unicode.Lepcha",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lepcha"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lepcha = _Lepcha // Lepcha is the set of Unicode characters in script Lepcha.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Letter",
              "documentation": {
                "identifier": "Letter",
                "newPage": false,
                "searchKey": "unicode.Letter",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Letter"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Letter = _L // Letter/L is the set of Unicode letters, category L.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Limbu",
              "documentation": {
                "identifier": "Limbu",
                "newPage": false,
                "searchKey": "unicode.Limbu",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Limbu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Limbu = _Limbu // Limbu is the set of Unicode characters in script Limbu.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Linear_A",
              "documentation": {
                "identifier": "Linear_A",
                "newPage": false,
                "searchKey": "unicode.Linear_A",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Linear_A"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Linear_A = _Linear_A // Linear_A is the set of Unicode characters in script Linear_A.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Linear_B",
              "documentation": {
                "identifier": "Linear_B",
                "newPage": false,
                "searchKey": "unicode.Linear_B",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Linear_B"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Linear_B = _Linear_B // Linear_B is the set of Unicode characters in script Linear_B.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lisu",
              "documentation": {
                "identifier": "Lisu",
                "newPage": false,
                "searchKey": "unicode.Lisu",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lisu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lisu = _Lisu // Lisu is the set of Unicode characters in script Lisu.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Ll",
              "documentation": {
                "identifier": "Ll",
                "newPage": false,
                "searchKey": "unicode.Ll",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Ll"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Ll = _Ll // Ll is the set of Unicode characters in category Ll (Letter, lowercase).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lm",
              "documentation": {
                "identifier": "Lm",
                "newPage": false,
                "searchKey": "unicode.Lm",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lm"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lm = _Lm // Lm is the set of Unicode characters in category Lm (Letter, modifier).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lo",
              "documentation": {
                "identifier": "Lo",
                "newPage": false,
                "searchKey": "unicode.Lo",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lo = _Lo // Lo is the set of Unicode characters in category Lo (Letter, other).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Logical_Order_Exception",
              "documentation": {
                "identifier": "Logical_Order_Exception",
                "newPage": false,
                "searchKey": "unicode.Logical_Order_Exception",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Logical_Order_Exception"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Logical_Order_Exception // Logical_Order_Exception is the set of Unicode characters with property Logical_Order_Exception.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lower",
              "documentation": {
                "identifier": "Lower",
                "newPage": false,
                "searchKey": "unicode.Lower",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lower"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lower = _Ll // Lower is the set of Unicode lower case letters.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lt",
              "documentation": {
                "identifier": "Lt",
                "newPage": false,
                "searchKey": "unicode.Lt",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lt"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lt = _Lt // Lt is the set of Unicode characters in category Lt (Letter, titlecase).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lu",
              "documentation": {
                "identifier": "Lu",
                "newPage": false,
                "searchKey": "unicode.Lu",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lu = _Lu // Lu is the set of Unicode characters in category Lu (Letter, uppercase).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lycian",
              "documentation": {
                "identifier": "Lycian",
                "newPage": false,
                "searchKey": "unicode.Lycian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lycian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lycian = _Lycian // Lycian is the set of Unicode characters in script Lycian.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Lydian",
              "documentation": {
                "identifier": "Lydian",
                "newPage": false,
                "searchKey": "unicode.Lydian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Lydian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Lydian = _Lydian // Lydian is the set of Unicode characters in script Lydian.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#M",
              "documentation": {
                "identifier": "M",
                "newPage": false,
                "searchKey": "unicode.M",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var M"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar M = _M\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Mahajani",
              "documentation": {
                "identifier": "Mahajani",
                "newPage": false,
                "searchKey": "unicode.Mahajani",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Mahajani"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Mahajani = _Mahajani // Mahajani is the set of Unicode characters in script Mahajani.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Makasar",
              "documentation": {
                "identifier": "Makasar",
                "newPage": false,
                "searchKey": "unicode.Makasar",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Makasar"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Makasar = _Makasar // Makasar is the set of Unicode characters in script Makasar.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Malayalam",
              "documentation": {
                "identifier": "Malayalam",
                "newPage": false,
                "searchKey": "unicode.Malayalam",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Malayalam"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Malayalam = _Malayalam // Malayalam is the set of Unicode characters in script Malayalam.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Mandaic",
              "documentation": {
                "identifier": "Mandaic",
                "newPage": false,
                "searchKey": "unicode.Mandaic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Mandaic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Mandaic = _Mandaic // Mandaic is the set of Unicode characters in script Mandaic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Manichaean",
              "documentation": {
                "identifier": "Manichaean",
                "newPage": false,
                "searchKey": "unicode.Manichaean",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Manichaean"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Manichaean = _Manichaean // Manichaean is the set of Unicode characters in script Manichaean.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Marchen",
              "documentation": {
                "identifier": "Marchen",
                "newPage": false,
                "searchKey": "unicode.Marchen",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Marchen"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Marchen = _Marchen // Marchen is the set of Unicode characters in script Marchen.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Mark",
              "documentation": {
                "identifier": "Mark",
                "newPage": false,
                "searchKey": "unicode.Mark",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Mark"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Mark = _M // Mark/M is the set of Unicode mark characters, category M.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Masaram_Gondi",
              "documentation": {
                "identifier": "Masaram_Gondi",
                "newPage": false,
                "searchKey": "unicode.Masaram_Gondi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Masaram_Gondi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Masaram_Gondi // Masaram_Gondi is the set of Unicode characters in script Masaram_Gondi.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Mc",
              "documentation": {
                "identifier": "Mc",
                "newPage": false,
                "searchKey": "unicode.Mc",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Mc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Mc = _Mc // Mc is the set of Unicode characters in category Mc (Mark, spacing combining).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Me",
              "documentation": {
                "identifier": "Me",
                "newPage": false,
                "searchKey": "unicode.Me",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Me"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Me = _Me // Me is the set of Unicode characters in category Me (Mark, enclosing).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Medefaidrin",
              "documentation": {
                "identifier": "Medefaidrin",
                "newPage": false,
                "searchKey": "unicode.Medefaidrin",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Medefaidrin"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Medefaidrin // Medefaidrin is the set of Unicode characters in script Medefaidrin.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Meetei_Mayek",
              "documentation": {
                "identifier": "Meetei_Mayek",
                "newPage": false,
                "searchKey": "unicode.Meetei_Mayek",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Meetei_Mayek"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Meetei_Mayek // Meetei_Mayek is the set of Unicode characters in script Meetei_Mayek.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Mende_Kikakui",
              "documentation": {
                "identifier": "Mende_Kikakui",
                "newPage": false,
                "searchKey": "unicode.Mende_Kikakui",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Mende_Kikakui"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Mende_Kikakui // Mende_Kikakui is the set of Unicode characters in script Mende_Kikakui.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Meroitic_Cursive",
              "documentation": {
                "identifier": "Meroitic_Cursive",
                "newPage": false,
                "searchKey": "unicode.Meroitic_Cursive",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Meroitic_Cursive"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Meroitic_Cursive // Meroitic_Cursive is the set of Unicode characters in script Meroitic_Cursive.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Meroitic_Hieroglyphs",
              "documentation": {
                "identifier": "Meroitic_Hieroglyphs",
                "newPage": false,
                "searchKey": "unicode.Meroitic_Hieroglyphs",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Meroitic_Hieroglyphs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Meroitic_Hieroglyphs // Meroitic_Hieroglyphs is the set of Unicode characters in script Meroitic_Hieroglyphs.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Miao",
              "documentation": {
                "identifier": "Miao",
                "newPage": false,
                "searchKey": "unicode.Miao",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Miao"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Miao = _Miao // Miao is the set of Unicode characters in script Miao.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Mn",
              "documentation": {
                "identifier": "Mn",
                "newPage": false,
                "searchKey": "unicode.Mn",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Mn"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Mn = _Mn // Mn is the set of Unicode characters in category Mn (Mark, nonspacing).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Modi",
              "documentation": {
                "identifier": "Modi",
                "newPage": false,
                "searchKey": "unicode.Modi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Modi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Modi = _Modi // Modi is the set of Unicode characters in script Modi.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Mongolian",
              "documentation": {
                "identifier": "Mongolian",
                "newPage": false,
                "searchKey": "unicode.Mongolian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Mongolian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Mongolian = _Mongolian // Mongolian is the set of Unicode characters in script Mongolian.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Mro",
              "documentation": {
                "identifier": "Mro",
                "newPage": false,
                "searchKey": "unicode.Mro",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Mro"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Mro = _Mro // Mro is the set of Unicode characters in script Mro.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Multani",
              "documentation": {
                "identifier": "Multani",
                "newPage": false,
                "searchKey": "unicode.Multani",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Multani"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Multani = _Multani // Multani is the set of Unicode characters in script Multani.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Myanmar",
              "documentation": {
                "identifier": "Myanmar",
                "newPage": false,
                "searchKey": "unicode.Myanmar",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Myanmar"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Myanmar = _Myanmar // Myanmar is the set of Unicode characters in script Myanmar.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#N",
              "documentation": {
                "identifier": "N",
                "newPage": false,
                "searchKey": "unicode.N",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var N"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar N = _N\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Nabataean",
              "documentation": {
                "identifier": "Nabataean",
                "newPage": false,
                "searchKey": "unicode.Nabataean",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Nabataean"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Nabataean = _Nabataean // Nabataean is the set of Unicode characters in script Nabataean.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Nandinagari",
              "documentation": {
                "identifier": "Nandinagari",
                "newPage": false,
                "searchKey": "unicode.Nandinagari",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Nandinagari"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Nandinagari // Nandinagari is the set of Unicode characters in script Nandinagari.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Nd",
              "documentation": {
                "identifier": "Nd",
                "newPage": false,
                "searchKey": "unicode.Nd",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Nd"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Nd = _Nd // Nd is the set of Unicode characters in category Nd (Number, decimal digit).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#New_Tai_Lue",
              "documentation": {
                "identifier": "New_Tai_Lue",
                "newPage": false,
                "searchKey": "unicode.New_Tai_Lue",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var New_Tai_Lue"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar New_Tai_Lue // New_Tai_Lue is the set of Unicode characters in script New_Tai_Lue.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Newa",
              "documentation": {
                "identifier": "Newa",
                "newPage": false,
                "searchKey": "unicode.Newa",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Newa"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Newa = _Newa // Newa is the set of Unicode characters in script Newa.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Nko",
              "documentation": {
                "identifier": "Nko",
                "newPage": false,
                "searchKey": "unicode.Nko",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Nko"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Nko = _Nko // Nko is the set of Unicode characters in script Nko.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Nl",
              "documentation": {
                "identifier": "Nl",
                "newPage": false,
                "searchKey": "unicode.Nl",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Nl"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Nl = _Nl // Nl is the set of Unicode characters in category Nl (Number, letter).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#No",
              "documentation": {
                "identifier": "No",
                "newPage": false,
                "searchKey": "unicode.No",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var No"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar No = _No // No is the set of Unicode characters in category No (Number, other).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Noncharacter_Code_Point",
              "documentation": {
                "identifier": "Noncharacter_Code_Point",
                "newPage": false,
                "searchKey": "unicode.Noncharacter_Code_Point",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Noncharacter_Code_Point"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Noncharacter_Code_Point // Noncharacter_Code_Point is the set of Unicode characters with property Noncharacter_Code_Point.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Number",
              "documentation": {
                "identifier": "Number",
                "newPage": false,
                "searchKey": "unicode.Number",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Number"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Number = _N // Number/N is the set of Unicode number characters, category N.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Nushu",
              "documentation": {
                "identifier": "Nushu",
                "newPage": false,
                "searchKey": "unicode.Nushu",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Nushu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Nushu = _Nushu // Nushu is the set of Unicode characters in script Nushu.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Nyiakeng_Puachue_Hmong",
              "documentation": {
                "identifier": "Nyiakeng_Puachue_Hmong",
                "newPage": false,
                "searchKey": "unicode.Nyiakeng_Puachue_Hmong",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Nyiakeng_Puachue_Hmong"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Nyiakeng_Puachue_Hmong // Nyiakeng_Puachue_Hmong is the set of Unicode characters in script Nyiakeng_Puachue_Hmong.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Ogham",
              "documentation": {
                "identifier": "Ogham",
                "newPage": false,
                "searchKey": "unicode.Ogham",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Ogham"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Ogham = _Ogham // Ogham is the set of Unicode characters in script Ogham.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Ol_Chiki",
              "documentation": {
                "identifier": "Ol_Chiki",
                "newPage": false,
                "searchKey": "unicode.Ol_Chiki",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Ol_Chiki"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Ol_Chiki = _Ol_Chiki // Ol_Chiki is the set of Unicode characters in script Ol_Chiki.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Old_Hungarian",
              "documentation": {
                "identifier": "Old_Hungarian",
                "newPage": false,
                "searchKey": "unicode.Old_Hungarian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Old_Hungarian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Old_Hungarian // Old_Hungarian is the set of Unicode characters in script Old_Hungarian.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Old_Italic",
              "documentation": {
                "identifier": "Old_Italic",
                "newPage": false,
                "searchKey": "unicode.Old_Italic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Old_Italic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Old_Italic = _Old_Italic // Old_Italic is the set of Unicode characters in script Old_Italic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Old_North_Arabian",
              "documentation": {
                "identifier": "Old_North_Arabian",
                "newPage": false,
                "searchKey": "unicode.Old_North_Arabian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Old_North_Arabian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Old_North_Arabian // Old_North_Arabian is the set of Unicode characters in script Old_North_Arabian.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Old_Permic",
              "documentation": {
                "identifier": "Old_Permic",
                "newPage": false,
                "searchKey": "unicode.Old_Permic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Old_Permic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Old_Permic = _Old_Permic // Old_Permic is the set of Unicode characters in script Old_Permic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Old_Persian",
              "documentation": {
                "identifier": "Old_Persian",
                "newPage": false,
                "searchKey": "unicode.Old_Persian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Old_Persian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Old_Persian // Old_Persian is the set of Unicode characters in script Old_Persian.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Old_Sogdian",
              "documentation": {
                "identifier": "Old_Sogdian",
                "newPage": false,
                "searchKey": "unicode.Old_Sogdian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Old_Sogdian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Old_Sogdian // Old_Sogdian is the set of Unicode characters in script Old_Sogdian.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Old_South_Arabian",
              "documentation": {
                "identifier": "Old_South_Arabian",
                "newPage": false,
                "searchKey": "unicode.Old_South_Arabian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Old_South_Arabian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Old_South_Arabian // Old_South_Arabian is the set of Unicode characters in script Old_South_Arabian.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Old_Turkic",
              "documentation": {
                "identifier": "Old_Turkic",
                "newPage": false,
                "searchKey": "unicode.Old_Turkic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Old_Turkic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Old_Turkic = _Old_Turkic // Old_Turkic is the set of Unicode characters in script Old_Turkic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Oriya",
              "documentation": {
                "identifier": "Oriya",
                "newPage": false,
                "searchKey": "unicode.Oriya",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Oriya"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Oriya = _Oriya // Oriya is the set of Unicode characters in script Oriya.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Osage",
              "documentation": {
                "identifier": "Osage",
                "newPage": false,
                "searchKey": "unicode.Osage",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Osage"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Osage = _Osage // Osage is the set of Unicode characters in script Osage.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Osmanya",
              "documentation": {
                "identifier": "Osmanya",
                "newPage": false,
                "searchKey": "unicode.Osmanya",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Osmanya"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Osmanya = _Osmanya // Osmanya is the set of Unicode characters in script Osmanya.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Other",
              "documentation": {
                "identifier": "Other",
                "newPage": false,
                "searchKey": "unicode.Other",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Other"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Other = _C // Other/C is the set of Unicode control and special characters, category C.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Other_Alphabetic",
              "documentation": {
                "identifier": "Other_Alphabetic",
                "newPage": false,
                "searchKey": "unicode.Other_Alphabetic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Other_Alphabetic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Other_Alphabetic // Other_Alphabetic is the set of Unicode characters with property Other_Alphabetic.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Other_Default_Ignorable_Code_Point",
              "documentation": {
                "identifier": "Other_Default_Ignorable_Code_Point",
                "newPage": false,
                "searchKey": "unicode.Other_Default_Ignorable_Code_Point",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Other_Default_Ignorable_Code_Point"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Other_Default_Ignorable_Code_Point // Other_Default_Ignorable_Code_Point is the set of Unicode characters with property Other_Default_Ignorable_Code_Point.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Other_Grapheme_Extend",
              "documentation": {
                "identifier": "Other_Grapheme_Extend",
                "newPage": false,
                "searchKey": "unicode.Other_Grapheme_Extend",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Other_Grapheme_Extend"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Other_Grapheme_Extend // Other_Grapheme_Extend is the set of Unicode characters with property Other_Grapheme_Extend.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Other_ID_Continue",
              "documentation": {
                "identifier": "Other_ID_Continue",
                "newPage": false,
                "searchKey": "unicode.Other_ID_Continue",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Other_ID_Continue"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Other_ID_Continue // Other_ID_Continue is the set of Unicode characters with property Other_ID_Continue.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Other_ID_Start",
              "documentation": {
                "identifier": "Other_ID_Start",
                "newPage": false,
                "searchKey": "unicode.Other_ID_Start",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Other_ID_Start"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Other_ID_Start // Other_ID_Start is the set of Unicode characters with property Other_ID_Start.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Other_Lowercase",
              "documentation": {
                "identifier": "Other_Lowercase",
                "newPage": false,
                "searchKey": "unicode.Other_Lowercase",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Other_Lowercase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Other_Lowercase // Other_Lowercase is the set of Unicode characters with property Other_Lowercase.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Other_Math",
              "documentation": {
                "identifier": "Other_Math",
                "newPage": false,
                "searchKey": "unicode.Other_Math",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Other_Math"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Other_Math // Other_Math is the set of Unicode characters with property Other_Math.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Other_Uppercase",
              "documentation": {
                "identifier": "Other_Uppercase",
                "newPage": false,
                "searchKey": "unicode.Other_Uppercase",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Other_Uppercase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Other_Uppercase // Other_Uppercase is the set of Unicode characters with property Other_Uppercase.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#P",
              "documentation": {
                "identifier": "P",
                "newPage": false,
                "searchKey": "unicode.P",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var P"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar P = _P\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Pahawh_Hmong",
              "documentation": {
                "identifier": "Pahawh_Hmong",
                "newPage": false,
                "searchKey": "unicode.Pahawh_Hmong",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Pahawh_Hmong"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Pahawh_Hmong // Pahawh_Hmong is the set of Unicode characters in script Pahawh_Hmong.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Palmyrene",
              "documentation": {
                "identifier": "Palmyrene",
                "newPage": false,
                "searchKey": "unicode.Palmyrene",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Palmyrene"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Palmyrene = _Palmyrene // Palmyrene is the set of Unicode characters in script Palmyrene.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Pattern_Syntax",
              "documentation": {
                "identifier": "Pattern_Syntax",
                "newPage": false,
                "searchKey": "unicode.Pattern_Syntax",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Pattern_Syntax"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Pattern_Syntax // Pattern_Syntax is the set of Unicode characters with property Pattern_Syntax.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Pattern_White_Space",
              "documentation": {
                "identifier": "Pattern_White_Space",
                "newPage": false,
                "searchKey": "unicode.Pattern_White_Space",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Pattern_White_Space"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Pattern_White_Space // Pattern_White_Space is the set of Unicode characters with property Pattern_White_Space.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Pau_Cin_Hau",
              "documentation": {
                "identifier": "Pau_Cin_Hau",
                "newPage": false,
                "searchKey": "unicode.Pau_Cin_Hau",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Pau_Cin_Hau"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Pau_Cin_Hau // Pau_Cin_Hau is the set of Unicode characters in script Pau_Cin_Hau.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Pc",
              "documentation": {
                "identifier": "Pc",
                "newPage": false,
                "searchKey": "unicode.Pc",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Pc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Pc = _Pc // Pc is the set of Unicode characters in category Pc (Punctuation, connector).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Pd",
              "documentation": {
                "identifier": "Pd",
                "newPage": false,
                "searchKey": "unicode.Pd",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Pd"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Pd = _Pd // Pd is the set of Unicode characters in category Pd (Punctuation, dash).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Pe",
              "documentation": {
                "identifier": "Pe",
                "newPage": false,
                "searchKey": "unicode.Pe",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Pe"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Pe = _Pe // Pe is the set of Unicode characters in category Pe (Punctuation, close).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Pf",
              "documentation": {
                "identifier": "Pf",
                "newPage": false,
                "searchKey": "unicode.Pf",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Pf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Pf = _Pf // Pf is the set of Unicode characters in category Pf (Punctuation, final quote).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Phags_Pa",
              "documentation": {
                "identifier": "Phags_Pa",
                "newPage": false,
                "searchKey": "unicode.Phags_Pa",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Phags_Pa"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Phags_Pa = _Phags_Pa // Phags_Pa is the set of Unicode characters in script Phags_Pa.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Phoenician",
              "documentation": {
                "identifier": "Phoenician",
                "newPage": false,
                "searchKey": "unicode.Phoenician",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Phoenician"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Phoenician = _Phoenician // Phoenician is the set of Unicode characters in script Phoenician.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Pi",
              "documentation": {
                "identifier": "Pi",
                "newPage": false,
                "searchKey": "unicode.Pi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Pi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Pi = _Pi // Pi is the set of Unicode characters in category Pi (Punctuation, initial quote).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Po",
              "documentation": {
                "identifier": "Po",
                "newPage": false,
                "searchKey": "unicode.Po",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Po"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Po = _Po // Po is the set of Unicode characters in category Po (Punctuation, other).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Prepended_Concatenation_Mark",
              "documentation": {
                "identifier": "Prepended_Concatenation_Mark",
                "newPage": false,
                "searchKey": "unicode.Prepended_Concatenation_Mark",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Prepended_Concatenation_Mark"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Prepended_Concatenation_Mark // Prepended_Concatenation_Mark is the set of Unicode characters with property Prepended_Concatenation_Mark.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#PrintRanges",
              "documentation": {
                "identifier": "PrintRanges",
                "newPage": false,
                "searchKey": "unicode.PrintRanges",
                "tags": [
                  "variable",
                  "array",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var PrintRanges"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar PrintRanges = []*RangeTable{\n\tL, M, N, P, S,\n}\n```\n\nPrintRanges defines the set of printable characters according to Go. ASCII space, U+0020, is handled separately. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Properties",
              "documentation": {
                "identifier": "Properties",
                "newPage": false,
                "searchKey": "unicode.Properties",
                "tags": [
                  "variable",
                  "object"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Properties"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Properties = ...\n```\n\nProperties is the set of Unicode property tables. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Ps",
              "documentation": {
                "identifier": "Ps",
                "newPage": false,
                "searchKey": "unicode.Ps",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Ps"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Ps = _Ps // Ps is the set of Unicode characters in category Ps (Punctuation, open).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Psalter_Pahlavi",
              "documentation": {
                "identifier": "Psalter_Pahlavi",
                "newPage": false,
                "searchKey": "unicode.Psalter_Pahlavi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Psalter_Pahlavi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Psalter_Pahlavi // Psalter_Pahlavi is the set of Unicode characters in script Psalter_Pahlavi.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Punct",
              "documentation": {
                "identifier": "Punct",
                "newPage": false,
                "searchKey": "unicode.Punct",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Punct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Punct = _P // Punct/P is the set of Unicode punctuation characters, category P.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Quotation_Mark",
              "documentation": {
                "identifier": "Quotation_Mark",
                "newPage": false,
                "searchKey": "unicode.Quotation_Mark",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Quotation_Mark"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Quotation_Mark // Quotation_Mark is the set of Unicode characters with property Quotation_Mark.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Radical",
              "documentation": {
                "identifier": "Radical",
                "newPage": false,
                "searchKey": "unicode.Radical",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Radical"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Radical = _Radical // Radical is the set of Unicode characters with property Radical.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Regional_Indicator",
              "documentation": {
                "identifier": "Regional_Indicator",
                "newPage": false,
                "searchKey": "unicode.Regional_Indicator",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Regional_Indicator"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Regional_Indicator // Regional_Indicator is the set of Unicode characters with property Regional_Indicator.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Rejang",
              "documentation": {
                "identifier": "Rejang",
                "newPage": false,
                "searchKey": "unicode.Rejang",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Rejang"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Rejang = _Rejang // Rejang is the set of Unicode characters in script Rejang.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Runic",
              "documentation": {
                "identifier": "Runic",
                "newPage": false,
                "searchKey": "unicode.Runic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Runic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Runic = _Runic // Runic is the set of Unicode characters in script Runic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#S",
              "documentation": {
                "identifier": "S",
                "newPage": false,
                "searchKey": "unicode.S",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var S"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar S = _S\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#STerm",
              "documentation": {
                "identifier": "STerm",
                "newPage": false,
                "searchKey": "unicode.STerm",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var STerm"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar STerm = _Sentence_Terminal // STerm is an alias for Sentence_Terminal.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Samaritan",
              "documentation": {
                "identifier": "Samaritan",
                "newPage": false,
                "searchKey": "unicode.Samaritan",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Samaritan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Samaritan = _Samaritan // Samaritan is the set of Unicode characters in script Samaritan.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Saurashtra",
              "documentation": {
                "identifier": "Saurashtra",
                "newPage": false,
                "searchKey": "unicode.Saurashtra",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Saurashtra"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Saurashtra = _Saurashtra // Saurashtra is the set of Unicode characters in script Saurashtra.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Sc",
              "documentation": {
                "identifier": "Sc",
                "newPage": false,
                "searchKey": "unicode.Sc",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Sc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Sc = _Sc // Sc is the set of Unicode characters in category Sc (Symbol, currency).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Scripts",
              "documentation": {
                "identifier": "Scripts",
                "newPage": false,
                "searchKey": "unicode.Scripts",
                "tags": [
                  "variable",
                  "object"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Scripts"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Scripts = ...\n```\n\nScripts is the set of Unicode script tables. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Sentence_Terminal",
              "documentation": {
                "identifier": "Sentence_Terminal",
                "newPage": false,
                "searchKey": "unicode.Sentence_Terminal",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Sentence_Terminal"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Sentence_Terminal // Sentence_Terminal is the set of Unicode characters with property Sentence_Terminal.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Sharada",
              "documentation": {
                "identifier": "Sharada",
                "newPage": false,
                "searchKey": "unicode.Sharada",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Sharada"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Sharada = _Sharada // Sharada is the set of Unicode characters in script Sharada.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Shavian",
              "documentation": {
                "identifier": "Shavian",
                "newPage": false,
                "searchKey": "unicode.Shavian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Shavian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Shavian = _Shavian // Shavian is the set of Unicode characters in script Shavian.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Siddham",
              "documentation": {
                "identifier": "Siddham",
                "newPage": false,
                "searchKey": "unicode.Siddham",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Siddham"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Siddham = _Siddham // Siddham is the set of Unicode characters in script Siddham.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#SignWriting",
              "documentation": {
                "identifier": "SignWriting",
                "newPage": false,
                "searchKey": "unicode.SignWriting",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var SignWriting"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar SignWriting // SignWriting is the set of Unicode characters in script SignWriting.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Sinhala",
              "documentation": {
                "identifier": "Sinhala",
                "newPage": false,
                "searchKey": "unicode.Sinhala",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Sinhala"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Sinhala = _Sinhala // Sinhala is the set of Unicode characters in script Sinhala.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Sk",
              "documentation": {
                "identifier": "Sk",
                "newPage": false,
                "searchKey": "unicode.Sk",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Sk"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Sk = _Sk // Sk is the set of Unicode characters in category Sk (Symbol, modifier).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Sm",
              "documentation": {
                "identifier": "Sm",
                "newPage": false,
                "searchKey": "unicode.Sm",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Sm"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Sm = _Sm // Sm is the set of Unicode characters in category Sm (Symbol, math).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#So",
              "documentation": {
                "identifier": "So",
                "newPage": false,
                "searchKey": "unicode.So",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var So"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar So = _So // So is the set of Unicode characters in category So (Symbol, other).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Soft_Dotted",
              "documentation": {
                "identifier": "Soft_Dotted",
                "newPage": false,
                "searchKey": "unicode.Soft_Dotted",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Soft_Dotted"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Soft_Dotted // Soft_Dotted is the set of Unicode characters with property Soft_Dotted.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Sogdian",
              "documentation": {
                "identifier": "Sogdian",
                "newPage": false,
                "searchKey": "unicode.Sogdian",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Sogdian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Sogdian = _Sogdian // Sogdian is the set of Unicode characters in script Sogdian.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Sora_Sompeng",
              "documentation": {
                "identifier": "Sora_Sompeng",
                "newPage": false,
                "searchKey": "unicode.Sora_Sompeng",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Sora_Sompeng"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Sora_Sompeng // Sora_Sompeng is the set of Unicode characters in script Sora_Sompeng.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Soyombo",
              "documentation": {
                "identifier": "Soyombo",
                "newPage": false,
                "searchKey": "unicode.Soyombo",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Soyombo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Soyombo = _Soyombo // Soyombo is the set of Unicode characters in script Soyombo.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Space",
              "documentation": {
                "identifier": "Space",
                "newPage": false,
                "searchKey": "unicode.Space",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Space"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Space = _Z // Space/Z is the set of Unicode space characters, category Z.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Sundanese",
              "documentation": {
                "identifier": "Sundanese",
                "newPage": false,
                "searchKey": "unicode.Sundanese",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Sundanese"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Sundanese = _Sundanese // Sundanese is the set of Unicode characters in script Sundanese.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Syloti_Nagri",
              "documentation": {
                "identifier": "Syloti_Nagri",
                "newPage": false,
                "searchKey": "unicode.Syloti_Nagri",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Syloti_Nagri"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Syloti_Nagri // Syloti_Nagri is the set of Unicode characters in script Syloti_Nagri.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Symbol",
              "documentation": {
                "identifier": "Symbol",
                "newPage": false,
                "searchKey": "unicode.Symbol",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Symbol"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Symbol = _S // Symbol/S is the set of Unicode symbol characters, category S.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Syriac",
              "documentation": {
                "identifier": "Syriac",
                "newPage": false,
                "searchKey": "unicode.Syriac",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Syriac"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Syriac = _Syriac // Syriac is the set of Unicode characters in script Syriac.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tagalog",
              "documentation": {
                "identifier": "Tagalog",
                "newPage": false,
                "searchKey": "unicode.Tagalog",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tagalog"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tagalog = _Tagalog // Tagalog is the set of Unicode characters in script Tagalog.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tagbanwa",
              "documentation": {
                "identifier": "Tagbanwa",
                "newPage": false,
                "searchKey": "unicode.Tagbanwa",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tagbanwa"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tagbanwa = _Tagbanwa // Tagbanwa is the set of Unicode characters in script Tagbanwa.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tai_Le",
              "documentation": {
                "identifier": "Tai_Le",
                "newPage": false,
                "searchKey": "unicode.Tai_Le",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tai_Le"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tai_Le = _Tai_Le // Tai_Le is the set of Unicode characters in script Tai_Le.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tai_Tham",
              "documentation": {
                "identifier": "Tai_Tham",
                "newPage": false,
                "searchKey": "unicode.Tai_Tham",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tai_Tham"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tai_Tham = _Tai_Tham // Tai_Tham is the set of Unicode characters in script Tai_Tham.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tai_Viet",
              "documentation": {
                "identifier": "Tai_Viet",
                "newPage": false,
                "searchKey": "unicode.Tai_Viet",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tai_Viet"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tai_Viet = _Tai_Viet // Tai_Viet is the set of Unicode characters in script Tai_Viet.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Takri",
              "documentation": {
                "identifier": "Takri",
                "newPage": false,
                "searchKey": "unicode.Takri",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Takri"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Takri = _Takri // Takri is the set of Unicode characters in script Takri.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tamil",
              "documentation": {
                "identifier": "Tamil",
                "newPage": false,
                "searchKey": "unicode.Tamil",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tamil"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tamil = _Tamil // Tamil is the set of Unicode characters in script Tamil.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tangut",
              "documentation": {
                "identifier": "Tangut",
                "newPage": false,
                "searchKey": "unicode.Tangut",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tangut"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tangut = _Tangut // Tangut is the set of Unicode characters in script Tangut.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Telugu",
              "documentation": {
                "identifier": "Telugu",
                "newPage": false,
                "searchKey": "unicode.Telugu",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Telugu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Telugu = _Telugu // Telugu is the set of Unicode characters in script Telugu.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Terminal_Punctuation",
              "documentation": {
                "identifier": "Terminal_Punctuation",
                "newPage": false,
                "searchKey": "unicode.Terminal_Punctuation",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Terminal_Punctuation"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Terminal_Punctuation // Terminal_Punctuation is the set of Unicode characters with property Terminal_Punctuation.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Thaana",
              "documentation": {
                "identifier": "Thaana",
                "newPage": false,
                "searchKey": "unicode.Thaana",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Thaana"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Thaana = _Thaana // Thaana is the set of Unicode characters in script Thaana.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Thai",
              "documentation": {
                "identifier": "Thai",
                "newPage": false,
                "searchKey": "unicode.Thai",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Thai"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Thai = _Thai // Thai is the set of Unicode characters in script Thai.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tibetan",
              "documentation": {
                "identifier": "Tibetan",
                "newPage": false,
                "searchKey": "unicode.Tibetan",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tibetan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tibetan = _Tibetan // Tibetan is the set of Unicode characters in script Tibetan.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tifinagh",
              "documentation": {
                "identifier": "Tifinagh",
                "newPage": false,
                "searchKey": "unicode.Tifinagh",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tifinagh"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tifinagh = _Tifinagh // Tifinagh is the set of Unicode characters in script Tifinagh.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Tirhuta",
              "documentation": {
                "identifier": "Tirhuta",
                "newPage": false,
                "searchKey": "unicode.Tirhuta",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Tirhuta"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Tirhuta = _Tirhuta // Tirhuta is the set of Unicode characters in script Tirhuta.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Title",
              "documentation": {
                "identifier": "Title",
                "newPage": false,
                "searchKey": "unicode.Title",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Title"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Title = _Lt // Title is the set of Unicode title case letters.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#TurkishCase",
              "documentation": {
                "identifier": "TurkishCase",
                "newPage": false,
                "searchKey": "unicode.TurkishCase",
                "tags": [
                  "variable",
                  "array",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var TurkishCase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar TurkishCase SpecialCase = _TurkishCase\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Ugaritic",
              "documentation": {
                "identifier": "Ugaritic",
                "newPage": false,
                "searchKey": "unicode.Ugaritic",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Ugaritic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Ugaritic = _Ugaritic // Ugaritic is the set of Unicode characters in script Ugaritic.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Unified_Ideograph",
              "documentation": {
                "identifier": "Unified_Ideograph",
                "newPage": false,
                "searchKey": "unicode.Unified_Ideograph",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Unified_Ideograph"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Unified_Ideograph // Unified_Ideograph is the set of Unicode characters with property Unified_Ideograph.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Upper",
              "documentation": {
                "identifier": "Upper",
                "newPage": false,
                "searchKey": "unicode.Upper",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Upper"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Upper = _Lu // Upper is the set of Unicode upper case letters.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Vai",
              "documentation": {
                "identifier": "Vai",
                "newPage": false,
                "searchKey": "unicode.Vai",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Vai"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Vai = _Vai // Vai is the set of Unicode characters in script Vai.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Variation_Selector",
              "documentation": {
                "identifier": "Variation_Selector",
                "newPage": false,
                "searchKey": "unicode.Variation_Selector",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Variation_Selector"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Variation_Selector // Variation_Selector is the set of Unicode characters with property Variation_Selector.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Wancho",
              "documentation": {
                "identifier": "Wancho",
                "newPage": false,
                "searchKey": "unicode.Wancho",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Wancho"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Wancho = _Wancho // Wancho is the set of Unicode characters in script Wancho.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Warang_Citi",
              "documentation": {
                "identifier": "Warang_Citi",
                "newPage": false,
                "searchKey": "unicode.Warang_Citi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Warang_Citi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Warang_Citi // Warang_Citi is the set of Unicode characters in script Warang_Citi.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#White_Space",
              "documentation": {
                "identifier": "White_Space",
                "newPage": false,
                "searchKey": "unicode.White_Space",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var White_Space"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar White_Space // White_Space is the set of Unicode characters with property White_Space.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Yezidi",
              "documentation": {
                "identifier": "Yezidi",
                "newPage": false,
                "searchKey": "unicode.Yezidi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Yezidi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Yezidi = _Yezidi // Yezidi is the set of Unicode characters in script Yezidi.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Yi",
              "documentation": {
                "identifier": "Yi",
                "newPage": false,
                "searchKey": "unicode.Yi",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Yi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Yi = _Yi // Yi is the set of Unicode characters in script Yi.\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Z",
              "documentation": {
                "identifier": "Z",
                "newPage": false,
                "searchKey": "unicode.Z",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Z"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Z = _Z\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Zanabazar_Square",
              "documentation": {
                "identifier": "Zanabazar_Square",
                "newPage": false,
                "searchKey": "unicode.Zanabazar_Square",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Zanabazar_Square"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Zanabazar_Square // Zanabazar_Square is the set of Unicode characters in script Zanabazar_Square.\n = ...\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Zl",
              "documentation": {
                "identifier": "Zl",
                "newPage": false,
                "searchKey": "unicode.Zl",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Zl"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Zl = _Zl // Zl is the set of Unicode characters in category Zl (Separator, line).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Zp",
              "documentation": {
                "identifier": "Zp",
                "newPage": false,
                "searchKey": "unicode.Zp",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Zp"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Zp = _Zp // Zp is the set of Unicode characters in category Zp (Separator, paragraph).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Zs",
              "documentation": {
                "identifier": "Zs",
                "newPage": false,
                "searchKey": "unicode.Zs",
                "tags": [
                  "variable",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var Zs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar Zs = _Zs // Zs is the set of Unicode characters in category Zs (Separator, space).\n\n```\n\nThese variables have type *RangeTable. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#asciiFold",
              "documentation": {
                "identifier": "asciiFold",
                "newPage": false,
                "searchKey": "unicode.asciiFold",
                "tags": [
                  "variable",
                  "array",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var asciiFold"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar asciiFold = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#caseOrbit",
              "documentation": {
                "identifier": "caseOrbit",
                "newPage": false,
                "searchKey": "unicode.caseOrbit",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var caseOrbit"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar caseOrbit = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldCommon",
              "documentation": {
                "identifier": "foldCommon",
                "newPage": false,
                "searchKey": "unicode.foldCommon",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var foldCommon"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar foldCommon = &RangeTable{\n\tR16: []Range16{\n\t\t{0x039c, 0x03bc, 32},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldGreek",
              "documentation": {
                "identifier": "foldGreek",
                "newPage": false,
                "searchKey": "unicode.foldGreek",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var foldGreek"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar foldGreek = &RangeTable{\n\tR16: []Range16{\n\t\t{0x00b5, 0x0345, 656},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldInherited",
              "documentation": {
                "identifier": "foldInherited",
                "newPage": false,
                "searchKey": "unicode.foldInherited",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var foldInherited"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar foldInherited = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldL",
              "documentation": {
                "identifier": "foldL",
                "newPage": false,
                "searchKey": "unicode.foldL",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var foldL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar foldL = &RangeTable{\n\tR16: []Range16{\n\t\t{0x0345, 0x0345, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldLl",
              "documentation": {
                "identifier": "foldLl",
                "newPage": false,
                "searchKey": "unicode.foldLl",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var foldLl"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar foldLl = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldLt",
              "documentation": {
                "identifier": "foldLt",
                "newPage": false,
                "searchKey": "unicode.foldLt",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var foldLt"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar foldLt = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldLu",
              "documentation": {
                "identifier": "foldLu",
                "newPage": false,
                "searchKey": "unicode.foldLu",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var foldLu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar foldLu = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldM",
              "documentation": {
                "identifier": "foldM",
                "newPage": false,
                "searchKey": "unicode.foldM",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var foldM"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar foldM = &RangeTable{\n\tR16: []Range16{\n\t\t{0x0399, 0x03b9, 32},\n\t\t{0x1fbe, 0x1fbe, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldMn",
              "documentation": {
                "identifier": "foldMn",
                "newPage": false,
                "searchKey": "unicode.foldMn",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var foldMn"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar foldMn = &RangeTable{\n\tR16: []Range16{\n\t\t{0x0399, 0x03b9, 32},\n\t\t{0x1fbe, 0x1fbe, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#properties",
              "documentation": {
                "identifier": "properties",
                "newPage": false,
                "searchKey": "unicode.properties",
                "tags": [
                  "variable",
                  "array",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var properties"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar properties = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_ASCII_Hex_Digit",
              "documentation": {
                "identifier": "_ASCII_Hex_Digit",
                "newPage": false,
                "searchKey": "unicode._ASCII_Hex_Digit",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _ASCII_Hex_Digit"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _ASCII_Hex_Digit = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Adlam",
              "documentation": {
                "identifier": "_Adlam",
                "newPage": false,
                "searchKey": "unicode._Adlam",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Adlam"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Adlam = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Ahom",
              "documentation": {
                "identifier": "_Ahom",
                "newPage": false,
                "searchKey": "unicode._Ahom",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Ahom"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Ahom = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Anatolian_Hieroglyphs",
              "documentation": {
                "identifier": "_Anatolian_Hieroglyphs",
                "newPage": false,
                "searchKey": "unicode._Anatolian_Hieroglyphs",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Anatolian_Hieroglyphs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Anatolian_Hieroglyphs = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Arabic",
              "documentation": {
                "identifier": "_Arabic",
                "newPage": false,
                "searchKey": "unicode._Arabic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Arabic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Arabic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Armenian",
              "documentation": {
                "identifier": "_Armenian",
                "newPage": false,
                "searchKey": "unicode._Armenian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Armenian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Armenian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Avestan",
              "documentation": {
                "identifier": "_Avestan",
                "newPage": false,
                "searchKey": "unicode._Avestan",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Avestan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Avestan = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Balinese",
              "documentation": {
                "identifier": "_Balinese",
                "newPage": false,
                "searchKey": "unicode._Balinese",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Balinese"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Balinese = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1b00, 0x1b4b, 1},\n\t\t{0x1b50, 0x1b7c, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Bamum",
              "documentation": {
                "identifier": "_Bamum",
                "newPage": false,
                "searchKey": "unicode._Bamum",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Bamum"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Bamum = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Bassa_Vah",
              "documentation": {
                "identifier": "_Bassa_Vah",
                "newPage": false,
                "searchKey": "unicode._Bassa_Vah",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Bassa_Vah"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Bassa_Vah = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Batak",
              "documentation": {
                "identifier": "_Batak",
                "newPage": false,
                "searchKey": "unicode._Batak",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Batak"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Batak = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1bc0, 0x1bf3, 1},\n\t\t{0x1bfc, 0x1bff, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Bengali",
              "documentation": {
                "identifier": "_Bengali",
                "newPage": false,
                "searchKey": "unicode._Bengali",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Bengali"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Bengali = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Bhaiksuki",
              "documentation": {
                "identifier": "_Bhaiksuki",
                "newPage": false,
                "searchKey": "unicode._Bhaiksuki",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Bhaiksuki"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Bhaiksuki = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Bidi_Control",
              "documentation": {
                "identifier": "_Bidi_Control",
                "newPage": false,
                "searchKey": "unicode._Bidi_Control",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Bidi_Control"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Bidi_Control = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Bopomofo",
              "documentation": {
                "identifier": "_Bopomofo",
                "newPage": false,
                "searchKey": "unicode._Bopomofo",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Bopomofo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Bopomofo = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Brahmi",
              "documentation": {
                "identifier": "_Brahmi",
                "newPage": false,
                "searchKey": "unicode._Brahmi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Brahmi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Brahmi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Braille",
              "documentation": {
                "identifier": "_Braille",
                "newPage": false,
                "searchKey": "unicode._Braille",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Braille"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Braille = &RangeTable{\n\tR16: []Range16{\n\t\t{0x2800, 0x28ff, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Buginese",
              "documentation": {
                "identifier": "_Buginese",
                "newPage": false,
                "searchKey": "unicode._Buginese",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Buginese"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Buginese = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1a00, 0x1a1b, 1},\n\t\t{0x1a1e, 0x1a1f, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Buhid",
              "documentation": {
                "identifier": "_Buhid",
                "newPage": false,
                "searchKey": "unicode._Buhid",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Buhid"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Buhid = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1740, 0x1753, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_C",
              "documentation": {
                "identifier": "_C",
                "newPage": false,
                "searchKey": "unicode._C",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _C"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _C = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Canadian_Aboriginal",
              "documentation": {
                "identifier": "_Canadian_Aboriginal",
                "newPage": false,
                "searchKey": "unicode._Canadian_Aboriginal",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Canadian_Aboriginal"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Canadian_Aboriginal = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Carian",
              "documentation": {
                "identifier": "_Carian",
                "newPage": false,
                "searchKey": "unicode._Carian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Carian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Carian = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x102a0, 0x102d0, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_CaseRanges",
              "documentation": {
                "identifier": "_CaseRanges",
                "newPage": false,
                "searchKey": "unicode._CaseRanges",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _CaseRanges"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _CaseRanges = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Caucasian_Albanian",
              "documentation": {
                "identifier": "_Caucasian_Albanian",
                "newPage": false,
                "searchKey": "unicode._Caucasian_Albanian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Caucasian_Albanian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Caucasian_Albanian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Cc",
              "documentation": {
                "identifier": "_Cc",
                "newPage": false,
                "searchKey": "unicode._Cc",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Cc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Cc = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Cf",
              "documentation": {
                "identifier": "_Cf",
                "newPage": false,
                "searchKey": "unicode._Cf",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Cf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Cf = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Chakma",
              "documentation": {
                "identifier": "_Chakma",
                "newPage": false,
                "searchKey": "unicode._Chakma",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Chakma"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Chakma = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Cham",
              "documentation": {
                "identifier": "_Cham",
                "newPage": false,
                "searchKey": "unicode._Cham",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Cham"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Cham = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Cherokee",
              "documentation": {
                "identifier": "_Cherokee",
                "newPage": false,
                "searchKey": "unicode._Cherokee",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Cherokee"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Cherokee = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Chorasmian",
              "documentation": {
                "identifier": "_Chorasmian",
                "newPage": false,
                "searchKey": "unicode._Chorasmian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Chorasmian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Chorasmian = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10fb0, 0x10fcb, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Co",
              "documentation": {
                "identifier": "_Co",
                "newPage": false,
                "searchKey": "unicode._Co",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Co"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Co = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Common",
              "documentation": {
                "identifier": "_Common",
                "newPage": false,
                "searchKey": "unicode._Common",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Common"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Common = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Coptic",
              "documentation": {
                "identifier": "_Coptic",
                "newPage": false,
                "searchKey": "unicode._Coptic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Coptic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Coptic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Cs",
              "documentation": {
                "identifier": "_Cs",
                "newPage": false,
                "searchKey": "unicode._Cs",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Cs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Cs = &RangeTable{\n\tR16: []Range16{\n\t\t{0xd800, 0xdfff, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Cuneiform",
              "documentation": {
                "identifier": "_Cuneiform",
                "newPage": false,
                "searchKey": "unicode._Cuneiform",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Cuneiform"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Cuneiform = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Cypriot",
              "documentation": {
                "identifier": "_Cypriot",
                "newPage": false,
                "searchKey": "unicode._Cypriot",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Cypriot"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Cypriot = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Cyrillic",
              "documentation": {
                "identifier": "_Cyrillic",
                "newPage": false,
                "searchKey": "unicode._Cyrillic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Cyrillic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Cyrillic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Dash",
              "documentation": {
                "identifier": "_Dash",
                "newPage": false,
                "searchKey": "unicode._Dash",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Dash"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Dash = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Deprecated",
              "documentation": {
                "identifier": "_Deprecated",
                "newPage": false,
                "searchKey": "unicode._Deprecated",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Deprecated"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Deprecated = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Deseret",
              "documentation": {
                "identifier": "_Deseret",
                "newPage": false,
                "searchKey": "unicode._Deseret",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Deseret"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Deseret = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10400, 0x1044f, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Devanagari",
              "documentation": {
                "identifier": "_Devanagari",
                "newPage": false,
                "searchKey": "unicode._Devanagari",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Devanagari"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Devanagari = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Diacritic",
              "documentation": {
                "identifier": "_Diacritic",
                "newPage": false,
                "searchKey": "unicode._Diacritic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Diacritic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Diacritic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Dives_Akuru",
              "documentation": {
                "identifier": "_Dives_Akuru",
                "newPage": false,
                "searchKey": "unicode._Dives_Akuru",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Dives_Akuru"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Dives_Akuru = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Dogra",
              "documentation": {
                "identifier": "_Dogra",
                "newPage": false,
                "searchKey": "unicode._Dogra",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Dogra"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Dogra = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x11800, 0x1183b, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Duployan",
              "documentation": {
                "identifier": "_Duployan",
                "newPage": false,
                "searchKey": "unicode._Duployan",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Duployan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Duployan = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Egyptian_Hieroglyphs",
              "documentation": {
                "identifier": "_Egyptian_Hieroglyphs",
                "newPage": false,
                "searchKey": "unicode._Egyptian_Hieroglyphs",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Egyptian_Hieroglyphs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Egyptian_Hieroglyphs = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Elbasan",
              "documentation": {
                "identifier": "_Elbasan",
                "newPage": false,
                "searchKey": "unicode._Elbasan",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Elbasan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Elbasan = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10500, 0x10527, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Elymaic",
              "documentation": {
                "identifier": "_Elymaic",
                "newPage": false,
                "searchKey": "unicode._Elymaic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Elymaic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Elymaic = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10fe0, 0x10ff6, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Ethiopic",
              "documentation": {
                "identifier": "_Ethiopic",
                "newPage": false,
                "searchKey": "unicode._Ethiopic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Ethiopic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Ethiopic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Extender",
              "documentation": {
                "identifier": "_Extender",
                "newPage": false,
                "searchKey": "unicode._Extender",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Extender"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Extender = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Georgian",
              "documentation": {
                "identifier": "_Georgian",
                "newPage": false,
                "searchKey": "unicode._Georgian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Georgian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Georgian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Glagolitic",
              "documentation": {
                "identifier": "_Glagolitic",
                "newPage": false,
                "searchKey": "unicode._Glagolitic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Glagolitic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Glagolitic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Gothic",
              "documentation": {
                "identifier": "_Gothic",
                "newPage": false,
                "searchKey": "unicode._Gothic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Gothic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Gothic = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10330, 0x1034a, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Grantha",
              "documentation": {
                "identifier": "_Grantha",
                "newPage": false,
                "searchKey": "unicode._Grantha",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Grantha"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Grantha = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Greek",
              "documentation": {
                "identifier": "_Greek",
                "newPage": false,
                "searchKey": "unicode._Greek",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Greek"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Greek = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Gujarati",
              "documentation": {
                "identifier": "_Gujarati",
                "newPage": false,
                "searchKey": "unicode._Gujarati",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Gujarati"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Gujarati = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Gunjala_Gondi",
              "documentation": {
                "identifier": "_Gunjala_Gondi",
                "newPage": false,
                "searchKey": "unicode._Gunjala_Gondi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Gunjala_Gondi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Gunjala_Gondi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Gurmukhi",
              "documentation": {
                "identifier": "_Gurmukhi",
                "newPage": false,
                "searchKey": "unicode._Gurmukhi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Gurmukhi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Gurmukhi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Han",
              "documentation": {
                "identifier": "_Han",
                "newPage": false,
                "searchKey": "unicode._Han",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Han"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Han = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Hangul",
              "documentation": {
                "identifier": "_Hangul",
                "newPage": false,
                "searchKey": "unicode._Hangul",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Hangul"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Hangul = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Hanifi_Rohingya",
              "documentation": {
                "identifier": "_Hanifi_Rohingya",
                "newPage": false,
                "searchKey": "unicode._Hanifi_Rohingya",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Hanifi_Rohingya"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Hanifi_Rohingya = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Hanunoo",
              "documentation": {
                "identifier": "_Hanunoo",
                "newPage": false,
                "searchKey": "unicode._Hanunoo",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Hanunoo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Hanunoo = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1720, 0x1734, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Hatran",
              "documentation": {
                "identifier": "_Hatran",
                "newPage": false,
                "searchKey": "unicode._Hatran",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Hatran"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Hatran = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Hebrew",
              "documentation": {
                "identifier": "_Hebrew",
                "newPage": false,
                "searchKey": "unicode._Hebrew",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Hebrew"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Hebrew = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Hex_Digit",
              "documentation": {
                "identifier": "_Hex_Digit",
                "newPage": false,
                "searchKey": "unicode._Hex_Digit",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Hex_Digit"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Hex_Digit = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Hiragana",
              "documentation": {
                "identifier": "_Hiragana",
                "newPage": false,
                "searchKey": "unicode._Hiragana",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Hiragana"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Hiragana = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Hyphen",
              "documentation": {
                "identifier": "_Hyphen",
                "newPage": false,
                "searchKey": "unicode._Hyphen",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Hyphen"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Hyphen = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_IDS_Binary_Operator",
              "documentation": {
                "identifier": "_IDS_Binary_Operator",
                "newPage": false,
                "searchKey": "unicode._IDS_Binary_Operator",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _IDS_Binary_Operator"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _IDS_Binary_Operator = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_IDS_Trinary_Operator",
              "documentation": {
                "identifier": "_IDS_Trinary_Operator",
                "newPage": false,
                "searchKey": "unicode._IDS_Trinary_Operator",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _IDS_Trinary_Operator"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _IDS_Trinary_Operator = &RangeTable{\n\tR16: []Range16{\n\t\t{0x2ff2, 0x2ff3, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Ideographic",
              "documentation": {
                "identifier": "_Ideographic",
                "newPage": false,
                "searchKey": "unicode._Ideographic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Ideographic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Ideographic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Imperial_Aramaic",
              "documentation": {
                "identifier": "_Imperial_Aramaic",
                "newPage": false,
                "searchKey": "unicode._Imperial_Aramaic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Imperial_Aramaic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Imperial_Aramaic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Inherited",
              "documentation": {
                "identifier": "_Inherited",
                "newPage": false,
                "searchKey": "unicode._Inherited",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Inherited"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Inherited = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Inscriptional_Pahlavi",
              "documentation": {
                "identifier": "_Inscriptional_Pahlavi",
                "newPage": false,
                "searchKey": "unicode._Inscriptional_Pahlavi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Inscriptional_Pahlavi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Inscriptional_Pahlavi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Inscriptional_Parthian",
              "documentation": {
                "identifier": "_Inscriptional_Parthian",
                "newPage": false,
                "searchKey": "unicode._Inscriptional_Parthian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Inscriptional_Parthian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Inscriptional_Parthian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Javanese",
              "documentation": {
                "identifier": "_Javanese",
                "newPage": false,
                "searchKey": "unicode._Javanese",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Javanese"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Javanese = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Join_Control",
              "documentation": {
                "identifier": "_Join_Control",
                "newPage": false,
                "searchKey": "unicode._Join_Control",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Join_Control"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Join_Control = &RangeTable{\n\tR16: []Range16{\n\t\t{0x200c, 0x200d, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Kaithi",
              "documentation": {
                "identifier": "_Kaithi",
                "newPage": false,
                "searchKey": "unicode._Kaithi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Kaithi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Kaithi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Kannada",
              "documentation": {
                "identifier": "_Kannada",
                "newPage": false,
                "searchKey": "unicode._Kannada",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Kannada"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Kannada = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Katakana",
              "documentation": {
                "identifier": "_Katakana",
                "newPage": false,
                "searchKey": "unicode._Katakana",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Katakana"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Katakana = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Kayah_Li",
              "documentation": {
                "identifier": "_Kayah_Li",
                "newPage": false,
                "searchKey": "unicode._Kayah_Li",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Kayah_Li"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Kayah_Li = &RangeTable{\n\tR16: []Range16{\n\t\t{0xa900, 0xa92d, 1},\n\t\t{0xa92f, 0xa92f, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Kharoshthi",
              "documentation": {
                "identifier": "_Kharoshthi",
                "newPage": false,
                "searchKey": "unicode._Kharoshthi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Kharoshthi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Kharoshthi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Khitan_Small_Script",
              "documentation": {
                "identifier": "_Khitan_Small_Script",
                "newPage": false,
                "searchKey": "unicode._Khitan_Small_Script",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Khitan_Small_Script"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Khitan_Small_Script = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Khmer",
              "documentation": {
                "identifier": "_Khmer",
                "newPage": false,
                "searchKey": "unicode._Khmer",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Khmer"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Khmer = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Khojki",
              "documentation": {
                "identifier": "_Khojki",
                "newPage": false,
                "searchKey": "unicode._Khojki",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Khojki"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Khojki = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Khudawadi",
              "documentation": {
                "identifier": "_Khudawadi",
                "newPage": false,
                "searchKey": "unicode._Khudawadi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Khudawadi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Khudawadi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_L",
              "documentation": {
                "identifier": "_L",
                "newPage": false,
                "searchKey": "unicode._L",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _L"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _L = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Lao",
              "documentation": {
                "identifier": "_Lao",
                "newPage": false,
                "searchKey": "unicode._Lao",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Lao"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Lao = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Latin",
              "documentation": {
                "identifier": "_Latin",
                "newPage": false,
                "searchKey": "unicode._Latin",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Latin"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Latin = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Lepcha",
              "documentation": {
                "identifier": "_Lepcha",
                "newPage": false,
                "searchKey": "unicode._Lepcha",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Lepcha"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Lepcha = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Limbu",
              "documentation": {
                "identifier": "_Limbu",
                "newPage": false,
                "searchKey": "unicode._Limbu",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Limbu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Limbu = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Linear_A",
              "documentation": {
                "identifier": "_Linear_A",
                "newPage": false,
                "searchKey": "unicode._Linear_A",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Linear_A"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Linear_A = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Linear_B",
              "documentation": {
                "identifier": "_Linear_B",
                "newPage": false,
                "searchKey": "unicode._Linear_B",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Linear_B"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Linear_B = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Lisu",
              "documentation": {
                "identifier": "_Lisu",
                "newPage": false,
                "searchKey": "unicode._Lisu",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Lisu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Lisu = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Ll",
              "documentation": {
                "identifier": "_Ll",
                "newPage": false,
                "searchKey": "unicode._Ll",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Ll"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Ll = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Lm",
              "documentation": {
                "identifier": "_Lm",
                "newPage": false,
                "searchKey": "unicode._Lm",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Lm"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Lm = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Lo",
              "documentation": {
                "identifier": "_Lo",
                "newPage": false,
                "searchKey": "unicode._Lo",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Lo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Lo = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Logical_Order_Exception",
              "documentation": {
                "identifier": "_Logical_Order_Exception",
                "newPage": false,
                "searchKey": "unicode._Logical_Order_Exception",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Logical_Order_Exception"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Logical_Order_Exception = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Lt",
              "documentation": {
                "identifier": "_Lt",
                "newPage": false,
                "searchKey": "unicode._Lt",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Lt"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Lt = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Lu",
              "documentation": {
                "identifier": "_Lu",
                "newPage": false,
                "searchKey": "unicode._Lu",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Lu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Lu = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Lycian",
              "documentation": {
                "identifier": "_Lycian",
                "newPage": false,
                "searchKey": "unicode._Lycian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Lycian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Lycian = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10280, 0x1029c, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Lydian",
              "documentation": {
                "identifier": "_Lydian",
                "newPage": false,
                "searchKey": "unicode._Lydian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Lydian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Lydian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_M",
              "documentation": {
                "identifier": "_M",
                "newPage": false,
                "searchKey": "unicode._M",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _M"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _M = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Mahajani",
              "documentation": {
                "identifier": "_Mahajani",
                "newPage": false,
                "searchKey": "unicode._Mahajani",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Mahajani"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Mahajani = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x11150, 0x11176, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Makasar",
              "documentation": {
                "identifier": "_Makasar",
                "newPage": false,
                "searchKey": "unicode._Makasar",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Makasar"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Makasar = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x11ee0, 0x11ef8, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Malayalam",
              "documentation": {
                "identifier": "_Malayalam",
                "newPage": false,
                "searchKey": "unicode._Malayalam",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Malayalam"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Malayalam = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Mandaic",
              "documentation": {
                "identifier": "_Mandaic",
                "newPage": false,
                "searchKey": "unicode._Mandaic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Mandaic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Mandaic = &RangeTable{\n\tR16: []Range16{\n\t\t{0x0840, 0x085b, 1},\n\t\t{0x085e, 0x085e, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Manichaean",
              "documentation": {
                "identifier": "_Manichaean",
                "newPage": false,
                "searchKey": "unicode._Manichaean",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Manichaean"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Manichaean = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Marchen",
              "documentation": {
                "identifier": "_Marchen",
                "newPage": false,
                "searchKey": "unicode._Marchen",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Marchen"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Marchen = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Masaram_Gondi",
              "documentation": {
                "identifier": "_Masaram_Gondi",
                "newPage": false,
                "searchKey": "unicode._Masaram_Gondi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Masaram_Gondi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Masaram_Gondi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Mc",
              "documentation": {
                "identifier": "_Mc",
                "newPage": false,
                "searchKey": "unicode._Mc",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Mc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Mc = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Me",
              "documentation": {
                "identifier": "_Me",
                "newPage": false,
                "searchKey": "unicode._Me",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Me"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Me = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Medefaidrin",
              "documentation": {
                "identifier": "_Medefaidrin",
                "newPage": false,
                "searchKey": "unicode._Medefaidrin",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Medefaidrin"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Medefaidrin = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x16e40, 0x16e9a, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Meetei_Mayek",
              "documentation": {
                "identifier": "_Meetei_Mayek",
                "newPage": false,
                "searchKey": "unicode._Meetei_Mayek",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Meetei_Mayek"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Meetei_Mayek = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Mende_Kikakui",
              "documentation": {
                "identifier": "_Mende_Kikakui",
                "newPage": false,
                "searchKey": "unicode._Mende_Kikakui",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Mende_Kikakui"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Mende_Kikakui = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Meroitic_Cursive",
              "documentation": {
                "identifier": "_Meroitic_Cursive",
                "newPage": false,
                "searchKey": "unicode._Meroitic_Cursive",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Meroitic_Cursive"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Meroitic_Cursive = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Meroitic_Hieroglyphs",
              "documentation": {
                "identifier": "_Meroitic_Hieroglyphs",
                "newPage": false,
                "searchKey": "unicode._Meroitic_Hieroglyphs",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Meroitic_Hieroglyphs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Meroitic_Hieroglyphs = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Miao",
              "documentation": {
                "identifier": "_Miao",
                "newPage": false,
                "searchKey": "unicode._Miao",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Miao"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Miao = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Mn",
              "documentation": {
                "identifier": "_Mn",
                "newPage": false,
                "searchKey": "unicode._Mn",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Mn"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Mn = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Modi",
              "documentation": {
                "identifier": "_Modi",
                "newPage": false,
                "searchKey": "unicode._Modi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Modi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Modi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Mongolian",
              "documentation": {
                "identifier": "_Mongolian",
                "newPage": false,
                "searchKey": "unicode._Mongolian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Mongolian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Mongolian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Mro",
              "documentation": {
                "identifier": "_Mro",
                "newPage": false,
                "searchKey": "unicode._Mro",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Mro"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Mro = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Multani",
              "documentation": {
                "identifier": "_Multani",
                "newPage": false,
                "searchKey": "unicode._Multani",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Multani"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Multani = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Myanmar",
              "documentation": {
                "identifier": "_Myanmar",
                "newPage": false,
                "searchKey": "unicode._Myanmar",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Myanmar"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Myanmar = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_N",
              "documentation": {
                "identifier": "_N",
                "newPage": false,
                "searchKey": "unicode._N",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _N"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _N = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Nabataean",
              "documentation": {
                "identifier": "_Nabataean",
                "newPage": false,
                "searchKey": "unicode._Nabataean",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Nabataean"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Nabataean = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Nandinagari",
              "documentation": {
                "identifier": "_Nandinagari",
                "newPage": false,
                "searchKey": "unicode._Nandinagari",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Nandinagari"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Nandinagari = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Nd",
              "documentation": {
                "identifier": "_Nd",
                "newPage": false,
                "searchKey": "unicode._Nd",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Nd"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Nd = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_New_Tai_Lue",
              "documentation": {
                "identifier": "_New_Tai_Lue",
                "newPage": false,
                "searchKey": "unicode._New_Tai_Lue",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _New_Tai_Lue"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _New_Tai_Lue = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Newa",
              "documentation": {
                "identifier": "_Newa",
                "newPage": false,
                "searchKey": "unicode._Newa",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Newa"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Newa = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Nko",
              "documentation": {
                "identifier": "_Nko",
                "newPage": false,
                "searchKey": "unicode._Nko",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Nko"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Nko = &RangeTable{\n\tR16: []Range16{\n\t\t{0x07c0, 0x07fa, 1},\n\t\t{0x07fd, 0x07ff, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Nl",
              "documentation": {
                "identifier": "_Nl",
                "newPage": false,
                "searchKey": "unicode._Nl",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Nl"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Nl = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_No",
              "documentation": {
                "identifier": "_No",
                "newPage": false,
                "searchKey": "unicode._No",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _No"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _No = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Noncharacter_Code_Point",
              "documentation": {
                "identifier": "_Noncharacter_Code_Point",
                "newPage": false,
                "searchKey": "unicode._Noncharacter_Code_Point",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Noncharacter_Code_Point"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Noncharacter_Code_Point = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Nushu",
              "documentation": {
                "identifier": "_Nushu",
                "newPage": false,
                "searchKey": "unicode._Nushu",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Nushu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Nushu = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Nyiakeng_Puachue_Hmong",
              "documentation": {
                "identifier": "_Nyiakeng_Puachue_Hmong",
                "newPage": false,
                "searchKey": "unicode._Nyiakeng_Puachue_Hmong",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Nyiakeng_Puachue_Hmong"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Nyiakeng_Puachue_Hmong = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Ogham",
              "documentation": {
                "identifier": "_Ogham",
                "newPage": false,
                "searchKey": "unicode._Ogham",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Ogham"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Ogham = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1680, 0x169c, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Ol_Chiki",
              "documentation": {
                "identifier": "_Ol_Chiki",
                "newPage": false,
                "searchKey": "unicode._Ol_Chiki",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Ol_Chiki"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Ol_Chiki = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1c50, 0x1c7f, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Old_Hungarian",
              "documentation": {
                "identifier": "_Old_Hungarian",
                "newPage": false,
                "searchKey": "unicode._Old_Hungarian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Old_Hungarian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Old_Hungarian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Old_Italic",
              "documentation": {
                "identifier": "_Old_Italic",
                "newPage": false,
                "searchKey": "unicode._Old_Italic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Old_Italic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Old_Italic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Old_North_Arabian",
              "documentation": {
                "identifier": "_Old_North_Arabian",
                "newPage": false,
                "searchKey": "unicode._Old_North_Arabian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Old_North_Arabian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Old_North_Arabian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Old_Permic",
              "documentation": {
                "identifier": "_Old_Permic",
                "newPage": false,
                "searchKey": "unicode._Old_Permic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Old_Permic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Old_Permic = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10350, 0x1037a, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Old_Persian",
              "documentation": {
                "identifier": "_Old_Persian",
                "newPage": false,
                "searchKey": "unicode._Old_Persian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Old_Persian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Old_Persian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Old_Sogdian",
              "documentation": {
                "identifier": "_Old_Sogdian",
                "newPage": false,
                "searchKey": "unicode._Old_Sogdian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Old_Sogdian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Old_Sogdian = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10f00, 0x10f27, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Old_South_Arabian",
              "documentation": {
                "identifier": "_Old_South_Arabian",
                "newPage": false,
                "searchKey": "unicode._Old_South_Arabian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Old_South_Arabian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Old_South_Arabian = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Old_Turkic",
              "documentation": {
                "identifier": "_Old_Turkic",
                "newPage": false,
                "searchKey": "unicode._Old_Turkic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Old_Turkic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Old_Turkic = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10c00, 0x10c48, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Oriya",
              "documentation": {
                "identifier": "_Oriya",
                "newPage": false,
                "searchKey": "unicode._Oriya",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Oriya"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Oriya = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Osage",
              "documentation": {
                "identifier": "_Osage",
                "newPage": false,
                "searchKey": "unicode._Osage",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Osage"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Osage = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Osmanya",
              "documentation": {
                "identifier": "_Osmanya",
                "newPage": false,
                "searchKey": "unicode._Osmanya",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Osmanya"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Osmanya = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Other_Alphabetic",
              "documentation": {
                "identifier": "_Other_Alphabetic",
                "newPage": false,
                "searchKey": "unicode._Other_Alphabetic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Other_Alphabetic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Other_Alphabetic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Other_Default_Ignorable_Code_Point",
              "documentation": {
                "identifier": "_Other_Default_Ignorable_Code_Point",
                "newPage": false,
                "searchKey": "unicode._Other_Default_Ignorable_Code_Point",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Other_Default_Ignorable_Code_Point"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Other_Default_Ignorable_Code_Point = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Other_Grapheme_Extend",
              "documentation": {
                "identifier": "_Other_Grapheme_Extend",
                "newPage": false,
                "searchKey": "unicode._Other_Grapheme_Extend",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Other_Grapheme_Extend"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Other_Grapheme_Extend = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Other_ID_Continue",
              "documentation": {
                "identifier": "_Other_ID_Continue",
                "newPage": false,
                "searchKey": "unicode._Other_ID_Continue",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Other_ID_Continue"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Other_ID_Continue = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Other_ID_Start",
              "documentation": {
                "identifier": "_Other_ID_Start",
                "newPage": false,
                "searchKey": "unicode._Other_ID_Start",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Other_ID_Start"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Other_ID_Start = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Other_Lowercase",
              "documentation": {
                "identifier": "_Other_Lowercase",
                "newPage": false,
                "searchKey": "unicode._Other_Lowercase",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Other_Lowercase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Other_Lowercase = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Other_Math",
              "documentation": {
                "identifier": "_Other_Math",
                "newPage": false,
                "searchKey": "unicode._Other_Math",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Other_Math"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Other_Math = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Other_Uppercase",
              "documentation": {
                "identifier": "_Other_Uppercase",
                "newPage": false,
                "searchKey": "unicode._Other_Uppercase",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Other_Uppercase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Other_Uppercase = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_P",
              "documentation": {
                "identifier": "_P",
                "newPage": false,
                "searchKey": "unicode._P",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _P"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _P = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Pahawh_Hmong",
              "documentation": {
                "identifier": "_Pahawh_Hmong",
                "newPage": false,
                "searchKey": "unicode._Pahawh_Hmong",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Pahawh_Hmong"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Pahawh_Hmong = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Palmyrene",
              "documentation": {
                "identifier": "_Palmyrene",
                "newPage": false,
                "searchKey": "unicode._Palmyrene",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Palmyrene"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Palmyrene = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10860, 0x1087f, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Pattern_Syntax",
              "documentation": {
                "identifier": "_Pattern_Syntax",
                "newPage": false,
                "searchKey": "unicode._Pattern_Syntax",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Pattern_Syntax"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Pattern_Syntax = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Pattern_White_Space",
              "documentation": {
                "identifier": "_Pattern_White_Space",
                "newPage": false,
                "searchKey": "unicode._Pattern_White_Space",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Pattern_White_Space"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Pattern_White_Space = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Pau_Cin_Hau",
              "documentation": {
                "identifier": "_Pau_Cin_Hau",
                "newPage": false,
                "searchKey": "unicode._Pau_Cin_Hau",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Pau_Cin_Hau"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Pau_Cin_Hau = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x11ac0, 0x11af8, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Pc",
              "documentation": {
                "identifier": "_Pc",
                "newPage": false,
                "searchKey": "unicode._Pc",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Pc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Pc = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Pd",
              "documentation": {
                "identifier": "_Pd",
                "newPage": false,
                "searchKey": "unicode._Pd",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Pd"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Pd = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Pe",
              "documentation": {
                "identifier": "_Pe",
                "newPage": false,
                "searchKey": "unicode._Pe",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Pe"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Pe = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Pf",
              "documentation": {
                "identifier": "_Pf",
                "newPage": false,
                "searchKey": "unicode._Pf",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Pf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Pf = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Phags_Pa",
              "documentation": {
                "identifier": "_Phags_Pa",
                "newPage": false,
                "searchKey": "unicode._Phags_Pa",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Phags_Pa"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Phags_Pa = &RangeTable{\n\tR16: []Range16{\n\t\t{0xa840, 0xa877, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Phoenician",
              "documentation": {
                "identifier": "_Phoenician",
                "newPage": false,
                "searchKey": "unicode._Phoenician",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Phoenician"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Phoenician = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Pi",
              "documentation": {
                "identifier": "_Pi",
                "newPage": false,
                "searchKey": "unicode._Pi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Pi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Pi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Po",
              "documentation": {
                "identifier": "_Po",
                "newPage": false,
                "searchKey": "unicode._Po",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Po"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Po = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Prepended_Concatenation_Mark",
              "documentation": {
                "identifier": "_Prepended_Concatenation_Mark",
                "newPage": false,
                "searchKey": "unicode._Prepended_Concatenation_Mark",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Prepended_Concatenation_Mark"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Prepended_Concatenation_Mark = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Ps",
              "documentation": {
                "identifier": "_Ps",
                "newPage": false,
                "searchKey": "unicode._Ps",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Ps"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Ps = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Psalter_Pahlavi",
              "documentation": {
                "identifier": "_Psalter_Pahlavi",
                "newPage": false,
                "searchKey": "unicode._Psalter_Pahlavi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Psalter_Pahlavi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Psalter_Pahlavi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Quotation_Mark",
              "documentation": {
                "identifier": "_Quotation_Mark",
                "newPage": false,
                "searchKey": "unicode._Quotation_Mark",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Quotation_Mark"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Quotation_Mark = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Radical",
              "documentation": {
                "identifier": "_Radical",
                "newPage": false,
                "searchKey": "unicode._Radical",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Radical"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Radical = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Regional_Indicator",
              "documentation": {
                "identifier": "_Regional_Indicator",
                "newPage": false,
                "searchKey": "unicode._Regional_Indicator",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Regional_Indicator"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Regional_Indicator = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Rejang",
              "documentation": {
                "identifier": "_Rejang",
                "newPage": false,
                "searchKey": "unicode._Rejang",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Rejang"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Rejang = &RangeTable{\n\tR16: []Range16{\n\t\t{0xa930, 0xa953, 1},\n\t\t{0xa95f, 0xa95f, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Runic",
              "documentation": {
                "identifier": "_Runic",
                "newPage": false,
                "searchKey": "unicode._Runic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Runic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Runic = &RangeTable{\n\tR16: []Range16{\n\t\t{0x16a0, 0x16ea, 1},\n\t\t{0x16ee, 0x16f8, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_S",
              "documentation": {
                "identifier": "_S",
                "newPage": false,
                "searchKey": "unicode._S",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _S"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _S = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Samaritan",
              "documentation": {
                "identifier": "_Samaritan",
                "newPage": false,
                "searchKey": "unicode._Samaritan",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Samaritan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Samaritan = &RangeTable{\n\tR16: []Range16{\n\t\t{0x0800, 0x082d, 1},\n\t\t{0x0830, 0x083e, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Saurashtra",
              "documentation": {
                "identifier": "_Saurashtra",
                "newPage": false,
                "searchKey": "unicode._Saurashtra",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Saurashtra"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Saurashtra = &RangeTable{\n\tR16: []Range16{\n\t\t{0xa880, 0xa8c5, 1},\n\t\t{0xa8ce, 0xa8d9, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Sc",
              "documentation": {
                "identifier": "_Sc",
                "newPage": false,
                "searchKey": "unicode._Sc",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Sc"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Sc = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Sentence_Terminal",
              "documentation": {
                "identifier": "_Sentence_Terminal",
                "newPage": false,
                "searchKey": "unicode._Sentence_Terminal",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Sentence_Terminal"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Sentence_Terminal = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Sharada",
              "documentation": {
                "identifier": "_Sharada",
                "newPage": false,
                "searchKey": "unicode._Sharada",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Sharada"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Sharada = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x11180, 0x111df, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Shavian",
              "documentation": {
                "identifier": "_Shavian",
                "newPage": false,
                "searchKey": "unicode._Shavian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Shavian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Shavian = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10450, 0x1047f, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Siddham",
              "documentation": {
                "identifier": "_Siddham",
                "newPage": false,
                "searchKey": "unicode._Siddham",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Siddham"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Siddham = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_SignWriting",
              "documentation": {
                "identifier": "_SignWriting",
                "newPage": false,
                "searchKey": "unicode._SignWriting",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _SignWriting"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _SignWriting = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Sinhala",
              "documentation": {
                "identifier": "_Sinhala",
                "newPage": false,
                "searchKey": "unicode._Sinhala",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Sinhala"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Sinhala = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Sk",
              "documentation": {
                "identifier": "_Sk",
                "newPage": false,
                "searchKey": "unicode._Sk",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Sk"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Sk = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Sm",
              "documentation": {
                "identifier": "_Sm",
                "newPage": false,
                "searchKey": "unicode._Sm",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Sm"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Sm = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_So",
              "documentation": {
                "identifier": "_So",
                "newPage": false,
                "searchKey": "unicode._So",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _So"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _So = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Soft_Dotted",
              "documentation": {
                "identifier": "_Soft_Dotted",
                "newPage": false,
                "searchKey": "unicode._Soft_Dotted",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Soft_Dotted"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Soft_Dotted = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Sogdian",
              "documentation": {
                "identifier": "_Sogdian",
                "newPage": false,
                "searchKey": "unicode._Sogdian",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Sogdian"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Sogdian = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x10f30, 0x10f59, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Sora_Sompeng",
              "documentation": {
                "identifier": "_Sora_Sompeng",
                "newPage": false,
                "searchKey": "unicode._Sora_Sompeng",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Sora_Sompeng"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Sora_Sompeng = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Soyombo",
              "documentation": {
                "identifier": "_Soyombo",
                "newPage": false,
                "searchKey": "unicode._Soyombo",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Soyombo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Soyombo = &RangeTable{\n\tR16: []Range16{},\n\tR32: []Range32{\n\t\t{0x11a50, 0x11aa2, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Sundanese",
              "documentation": {
                "identifier": "_Sundanese",
                "newPage": false,
                "searchKey": "unicode._Sundanese",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Sundanese"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Sundanese = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1b80, 0x1bbf, 1},\n\t\t{0x1cc0, 0x1cc7, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Syloti_Nagri",
              "documentation": {
                "identifier": "_Syloti_Nagri",
                "newPage": false,
                "searchKey": "unicode._Syloti_Nagri",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Syloti_Nagri"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Syloti_Nagri = &RangeTable{\n\tR16: []Range16{\n\t\t{0xa800, 0xa82c, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Syriac",
              "documentation": {
                "identifier": "_Syriac",
                "newPage": false,
                "searchKey": "unicode._Syriac",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Syriac"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Syriac = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tagalog",
              "documentation": {
                "identifier": "_Tagalog",
                "newPage": false,
                "searchKey": "unicode._Tagalog",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tagalog"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tagalog = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1700, 0x170c, 1},\n\t\t{0x170e, 0x1714, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tagbanwa",
              "documentation": {
                "identifier": "_Tagbanwa",
                "newPage": false,
                "searchKey": "unicode._Tagbanwa",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tagbanwa"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tagbanwa = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tai_Le",
              "documentation": {
                "identifier": "_Tai_Le",
                "newPage": false,
                "searchKey": "unicode._Tai_Le",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tai_Le"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tai_Le = &RangeTable{\n\tR16: []Range16{\n\t\t{0x1950, 0x196d, 1},\n\t\t{0x1970, 0x1974, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tai_Tham",
              "documentation": {
                "identifier": "_Tai_Tham",
                "newPage": false,
                "searchKey": "unicode._Tai_Tham",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tai_Tham"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tai_Tham = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tai_Viet",
              "documentation": {
                "identifier": "_Tai_Viet",
                "newPage": false,
                "searchKey": "unicode._Tai_Viet",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tai_Viet"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tai_Viet = &RangeTable{\n\tR16: []Range16{\n\t\t{0xaa80, 0xaac2, 1},\n\t\t{0xaadb, 0xaadf, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Takri",
              "documentation": {
                "identifier": "_Takri",
                "newPage": false,
                "searchKey": "unicode._Takri",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Takri"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Takri = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tamil",
              "documentation": {
                "identifier": "_Tamil",
                "newPage": false,
                "searchKey": "unicode._Tamil",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tamil"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tamil = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tangut",
              "documentation": {
                "identifier": "_Tangut",
                "newPage": false,
                "searchKey": "unicode._Tangut",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tangut"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tangut = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Telugu",
              "documentation": {
                "identifier": "_Telugu",
                "newPage": false,
                "searchKey": "unicode._Telugu",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Telugu"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Telugu = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Terminal_Punctuation",
              "documentation": {
                "identifier": "_Terminal_Punctuation",
                "newPage": false,
                "searchKey": "unicode._Terminal_Punctuation",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Terminal_Punctuation"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Terminal_Punctuation = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Thaana",
              "documentation": {
                "identifier": "_Thaana",
                "newPage": false,
                "searchKey": "unicode._Thaana",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Thaana"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Thaana = &RangeTable{\n\tR16: []Range16{\n\t\t{0x0780, 0x07b1, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Thai",
              "documentation": {
                "identifier": "_Thai",
                "newPage": false,
                "searchKey": "unicode._Thai",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Thai"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Thai = &RangeTable{\n\tR16: []Range16{\n\t\t{0x0e01, 0x0e3a, 1},\n\t\t{0x0e40, 0x0e5b, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tibetan",
              "documentation": {
                "identifier": "_Tibetan",
                "newPage": false,
                "searchKey": "unicode._Tibetan",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tibetan"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tibetan = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tifinagh",
              "documentation": {
                "identifier": "_Tifinagh",
                "newPage": false,
                "searchKey": "unicode._Tifinagh",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tifinagh"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tifinagh = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Tirhuta",
              "documentation": {
                "identifier": "_Tirhuta",
                "newPage": false,
                "searchKey": "unicode._Tirhuta",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Tirhuta"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Tirhuta = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_TurkishCase",
              "documentation": {
                "identifier": "_TurkishCase",
                "newPage": false,
                "searchKey": "unicode._TurkishCase",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _TurkishCase"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _TurkishCase = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Ugaritic",
              "documentation": {
                "identifier": "_Ugaritic",
                "newPage": false,
                "searchKey": "unicode._Ugaritic",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Ugaritic"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Ugaritic = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Unified_Ideograph",
              "documentation": {
                "identifier": "_Unified_Ideograph",
                "newPage": false,
                "searchKey": "unicode._Unified_Ideograph",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Unified_Ideograph"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Unified_Ideograph = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Vai",
              "documentation": {
                "identifier": "_Vai",
                "newPage": false,
                "searchKey": "unicode._Vai",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Vai"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Vai = &RangeTable{\n\tR16: []Range16{\n\t\t{0xa500, 0xa62b, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Variation_Selector",
              "documentation": {
                "identifier": "_Variation_Selector",
                "newPage": false,
                "searchKey": "unicode._Variation_Selector",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Variation_Selector"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Variation_Selector = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Wancho",
              "documentation": {
                "identifier": "_Wancho",
                "newPage": false,
                "searchKey": "unicode._Wancho",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Wancho"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Wancho = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Warang_Citi",
              "documentation": {
                "identifier": "_Warang_Citi",
                "newPage": false,
                "searchKey": "unicode._Warang_Citi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Warang_Citi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Warang_Citi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_White_Space",
              "documentation": {
                "identifier": "_White_Space",
                "newPage": false,
                "searchKey": "unicode._White_Space",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _White_Space"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _White_Space = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Yezidi",
              "documentation": {
                "identifier": "_Yezidi",
                "newPage": false,
                "searchKey": "unicode._Yezidi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Yezidi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Yezidi = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Yi",
              "documentation": {
                "identifier": "_Yi",
                "newPage": false,
                "searchKey": "unicode._Yi",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Yi"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Yi = &RangeTable{\n\tR16: []Range16{\n\t\t{0xa000, 0xa48c, 1},\n\t\t{0xa490, 0xa4c6, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Z",
              "documentation": {
                "identifier": "_Z",
                "newPage": false,
                "searchKey": "unicode._Z",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Z"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Z = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Zanabazar_Square",
              "documentation": {
                "identifier": "_Zanabazar_Square",
                "newPage": false,
                "searchKey": "unicode._Zanabazar_Square",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Zanabazar_Square"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Zanabazar_Square = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Zl",
              "documentation": {
                "identifier": "_Zl",
                "newPage": false,
                "searchKey": "unicode._Zl",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Zl"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Zl = &RangeTable{\n\tR16: []Range16{\n\t\t{0x2028, 0x2028, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Zp",
              "documentation": {
                "identifier": "_Zp",
                "newPage": false,
                "searchKey": "unicode._Zp",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Zp"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Zp = &RangeTable{\n\tR16: []Range16{\n\t\t{0x2029, 0x2029, 1},\n\t},\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#_Zs",
              "documentation": {
                "identifier": "_Zs",
                "newPage": false,
                "searchKey": "unicode._Zs",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var _Zs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar _Zs = ...\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/unicode#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/unicode#CaseRange",
              "documentation": {
                "identifier": "CaseRange",
                "newPage": false,
                "searchKey": "unicode.CaseRange",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type CaseRange struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype CaseRange struct {\n\tLo    uint32\n\tHi    uint32\n\tDelta d\n}\n```\n\nCaseRange represents a range of Unicode code points for simple (one code point to one code point) case conversion. The range runs from Lo to Hi inclusive, with a fixed stride of 1. Deltas are the number to add to the code point to reach the code point for a different case for that character. They may be negative. If zero, it means the character is in the corresponding case. There is a special case representing sequences of alternating corresponding Upper and Lower pairs. It appears with a fixed Delta of \n\n```\n{UpperLower, UpperLower, UpperLower}\n\n```\nThe constant UpperLower has an otherwise impossible delta value. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Range16",
              "documentation": {
                "identifier": "Range16",
                "newPage": false,
                "searchKey": "unicode.Range16",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Range16 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Range16 struct {\n\tLo     uint16\n\tHi     uint16\n\tStride uint16\n}\n```\n\nRange16 represents of a range of 16-bit Unicode code points. The range runs from Lo to Hi inclusive and has the specified stride. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Range32",
              "documentation": {
                "identifier": "Range32",
                "newPage": false,
                "searchKey": "unicode.Range32",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Range32 struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Range32 struct {\n\tLo     uint32\n\tHi     uint32\n\tStride uint32\n}\n```\n\nRange32 represents of a range of Unicode code points and is used when one or more of the values will not fit in 16 bits. The range runs from Lo to Hi inclusive and has the specified stride. Lo and Hi must always be >= 1<<16. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#RangeTable",
              "documentation": {
                "identifier": "RangeTable",
                "newPage": false,
                "searchKey": "unicode.RangeTable",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type RangeTable struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype RangeTable struct {\n\tR16         []Range16\n\tR32         []Range32\n\tLatinOffset int // number of entries in R16 with Hi <= MaxLatin1\n}\n```\n\nRangeTable defines a set of Unicode code points by listing the ranges of code points within the set. The ranges are listed in two slices to save space: a slice of 16-bit ranges and a slice of 32-bit ranges. The two slices must be in sorted order and non-overlapping. Also, R32 should contain only values >= 0x10000 (1<<16). \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#SpecialCase",
              "documentation": {
                "identifier": "SpecialCase",
                "newPage": false,
                "searchKey": "unicode.SpecialCase",
                "tags": [
                  "array",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type SpecialCase []unicode.CaseRange"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype SpecialCase []CaseRange\n```\n\nSpecialCase represents language-specific case mappings such as Turkish. Methods of SpecialCase customize (by overriding) the standard mappings. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/unicode#SpecialCase.ToLower",
                    "documentation": {
                      "identifier": "SpecialCase.ToLower",
                      "newPage": false,
                      "searchKey": "unicode.SpecialCase.ToLower",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (special SpecialCase) ToLower(r rune) rune"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (special SpecialCase) ToLower(r rune) rune\n```\n\nToLower maps the rune to lower case giving priority to the special mapping. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/unicode#SpecialCase.ToTitle",
                    "documentation": {
                      "identifier": "SpecialCase.ToTitle",
                      "newPage": false,
                      "searchKey": "unicode.SpecialCase.ToTitle",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (special SpecialCase) ToTitle(r rune) rune"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (special SpecialCase) ToTitle(r rune) rune\n```\n\nToTitle maps the rune to title case giving priority to the special mapping. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/unicode#SpecialCase.ToUpper",
                    "documentation": {
                      "identifier": "SpecialCase.ToUpper",
                      "newPage": false,
                      "searchKey": "unicode.SpecialCase.ToUpper",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (special SpecialCase) ToUpper(r rune) rune"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (special SpecialCase) ToUpper(r rune) rune\n```\n\nToUpper maps the rune to upper case giving priority to the special mapping. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/unicode#d",
              "documentation": {
                "identifier": "d",
                "newPage": false,
                "searchKey": "unicode.d",
                "tags": [
                  "array",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type d [3]rune"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype d [MaxCase]rune // to make the CaseRanges text shorter\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#foldPair",
              "documentation": {
                "identifier": "foldPair",
                "newPage": false,
                "searchKey": "unicode.foldPair",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type foldPair struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype foldPair struct {\n\tFrom uint16\n\tTo   uint16\n}\n```\n\ncaseOrbit is defined in tables.go as []foldPair. Right now all the entries fit in uint16, so use uint16. If that changes, compilation will fail (the constants in the composite literal will not fit in uint16) and the types here can change to uint32. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/unicode#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/unicode#In",
              "documentation": {
                "identifier": "In",
                "newPage": false,
                "searchKey": "unicode.In",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func In(r rune, ranges ...*RangeTable) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc In(r rune, ranges ...*RangeTable) bool\n```\n\nIn reports whether the rune is a member of one of the ranges. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#Is",
              "documentation": {
                "identifier": "Is",
                "newPage": false,
                "searchKey": "unicode.Is",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func Is(rangeTab *RangeTable, r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Is(rangeTab *RangeTable, r rune) bool\n```\n\nIs reports whether the rune is in the specified table of ranges. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsControl",
              "documentation": {
                "identifier": "IsControl",
                "newPage": false,
                "searchKey": "unicode.IsControl",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsControl(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsControl(r rune) bool\n```\n\nIsControl reports whether the rune is a control character. The C (Other) Unicode category includes more code points such as surrogates; use Is(C, r) to test for them. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsDigit",
              "documentation": {
                "identifier": "IsDigit",
                "newPage": false,
                "searchKey": "unicode.IsDigit",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsDigit(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsDigit(r rune) bool\n```\n\nIsDigit reports whether the rune is a decimal digit. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsGraphic",
              "documentation": {
                "identifier": "IsGraphic",
                "newPage": false,
                "searchKey": "unicode.IsGraphic",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsGraphic(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsGraphic(r rune) bool\n```\n\nIsGraphic reports whether the rune is defined as a Graphic by Unicode. Such characters include letters, marks, numbers, punctuation, symbols, and spaces, from categories L, M, N, P, S, Zs. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsLetter",
              "documentation": {
                "identifier": "IsLetter",
                "newPage": false,
                "searchKey": "unicode.IsLetter",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsLetter(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsLetter(r rune) bool\n```\n\nIsLetter reports whether the rune is a letter (category L). \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsLower",
              "documentation": {
                "identifier": "IsLower",
                "newPage": false,
                "searchKey": "unicode.IsLower",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsLower(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsLower(r rune) bool\n```\n\nIsLower reports whether the rune is a lower case letter. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsMark",
              "documentation": {
                "identifier": "IsMark",
                "newPage": false,
                "searchKey": "unicode.IsMark",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsMark(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsMark(r rune) bool\n```\n\nIsMark reports whether the rune is a mark character (category M). \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsNumber",
              "documentation": {
                "identifier": "IsNumber",
                "newPage": false,
                "searchKey": "unicode.IsNumber",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsNumber(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsNumber(r rune) bool\n```\n\nIsNumber reports whether the rune is a number (category N). \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsOneOf",
              "documentation": {
                "identifier": "IsOneOf",
                "newPage": false,
                "searchKey": "unicode.IsOneOf",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsOneOf(ranges []*RangeTable, r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsOneOf(ranges []*RangeTable, r rune) bool\n```\n\nIsOneOf reports whether the rune is a member of one of the ranges. The function \"In\" provides a nicer signature and should be used in preference to IsOneOf. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsPrint",
              "documentation": {
                "identifier": "IsPrint",
                "newPage": false,
                "searchKey": "unicode.IsPrint",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsPrint(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsPrint(r rune) bool\n```\n\nIsPrint reports whether the rune is defined as printable by Go. Such characters include letters, marks, numbers, punctuation, symbols, and the ASCII space character, from categories L, M, N, P, S and the ASCII space character. This categorization is the same as IsGraphic except that the only spacing character is ASCII space, U+0020. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsPunct",
              "documentation": {
                "identifier": "IsPunct",
                "newPage": false,
                "searchKey": "unicode.IsPunct",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsPunct(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsPunct(r rune) bool\n```\n\nIsPunct reports whether the rune is a Unicode punctuation character (category P). \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsSpace",
              "documentation": {
                "identifier": "IsSpace",
                "newPage": false,
                "searchKey": "unicode.IsSpace",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsSpace(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsSpace(r rune) bool\n```\n\nIsSpace reports whether the rune is a space character as defined by Unicode's White Space property; in the Latin-1 space this is \n\n```\n'\\t', '\\n', '\\v', '\\f', '\\r', ' ', U+0085 (NEL), U+00A0 (NBSP).\n\n```\nOther definitions of spacing characters are set by category Z and property Pattern_White_Space. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsSymbol",
              "documentation": {
                "identifier": "IsSymbol",
                "newPage": false,
                "searchKey": "unicode.IsSymbol",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsSymbol(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsSymbol(r rune) bool\n```\n\nIsSymbol reports whether the rune is a symbolic character. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsTitle",
              "documentation": {
                "identifier": "IsTitle",
                "newPage": false,
                "searchKey": "unicode.IsTitle",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsTitle(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsTitle(r rune) bool\n```\n\nIsTitle reports whether the rune is a title case letter. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#IsUpper",
              "documentation": {
                "identifier": "IsUpper",
                "newPage": false,
                "searchKey": "unicode.IsUpper",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func IsUpper(r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc IsUpper(r rune) bool\n```\n\nIsUpper reports whether the rune is an upper case letter. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#SimpleFold",
              "documentation": {
                "identifier": "SimpleFold",
                "newPage": false,
                "searchKey": "unicode.SimpleFold",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func SimpleFold(r rune) rune"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc SimpleFold(r rune) rune\n```\n\nSimpleFold iterates over Unicode code points equivalent under the Unicode-defined simple case folding. Among the code points equivalent to rune (including rune itself), SimpleFold returns the smallest rune > r if one exists, or else the smallest rune >= 0. If r is not a valid Unicode code point, SimpleFold(r) returns r. \n\nFor example: \n\n```\nSimpleFold('A') = 'a'\nSimpleFold('a') = 'A'\n\nSimpleFold('K') = 'k'\nSimpleFold('k') = '\\u212A' (Kelvin symbol, K)\nSimpleFold('\\u212A') = 'K'\n\nSimpleFold('1') = '1'\n\nSimpleFold(-2) = -2\n\n```\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#To",
              "documentation": {
                "identifier": "To",
                "newPage": false,
                "searchKey": "unicode.To",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func To(_case int, r rune) rune"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc To(_case int, r rune) rune\n```\n\nTo maps the rune to the specified case: UpperCase, LowerCase, or TitleCase. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#ToLower",
              "documentation": {
                "identifier": "ToLower",
                "newPage": false,
                "searchKey": "unicode.ToLower",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ToLower(r rune) rune"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ToLower(r rune) rune\n```\n\nToLower maps the rune to lower case. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#ToTitle",
              "documentation": {
                "identifier": "ToTitle",
                "newPage": false,
                "searchKey": "unicode.ToTitle",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ToTitle(r rune) rune"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ToTitle(r rune) rune\n```\n\nToTitle maps the rune to title case. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#ToUpper",
              "documentation": {
                "identifier": "ToUpper",
                "newPage": false,
                "searchKey": "unicode.ToUpper",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ToUpper(r rune) rune"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ToUpper(r rune) rune\n```\n\nToUpper maps the rune to upper case. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#is16",
              "documentation": {
                "identifier": "is16",
                "newPage": false,
                "searchKey": "unicode.is16",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func is16(ranges []Range16, r uint16) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc is16(ranges []Range16, r uint16) bool\n```\n\nis16 reports whether r is in the sorted slice of 16-bit ranges. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#is32",
              "documentation": {
                "identifier": "is32",
                "newPage": false,
                "searchKey": "unicode.is32",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func is32(ranges []Range32, r uint32) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc is32(ranges []Range32, r uint32) bool\n```\n\nis32 reports whether r is in the sorted slice of 32-bit ranges. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#isExcludingLatin",
              "documentation": {
                "identifier": "isExcludingLatin",
                "newPage": false,
                "searchKey": "unicode.isExcludingLatin",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func isExcludingLatin(rangeTab *RangeTable, r rune) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc isExcludingLatin(rangeTab *RangeTable, r rune) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/unicode#to",
              "documentation": {
                "identifier": "to",
                "newPage": false,
                "searchKey": "unicode.to",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func to(_case int, r rune, caseRange []CaseRange) (mappedRune rune, foundMapping bool)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc to(_case int, r rune, caseRange []CaseRange) (mappedRune rune, foundMapping bool)\n```\n\nto maps the rune using the specified case mapping. It additionally reports whether caseRange contained a mapping for r. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "pathID": "/unicode/utf16"
    },
    {
      "pathID": "/unicode/utf16_test"
    },
    {
      "pathID": "/unicode/utf8"
    },
    {
      "pathID": "/unicode/utf8_test"
    }
  ]
}
