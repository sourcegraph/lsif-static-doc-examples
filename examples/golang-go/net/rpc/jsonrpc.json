{
  "pathID": "/net/rpc/jsonrpc",
  "documentation": {
    "identifier": "jsonrpc",
    "newPage": true,
    "searchKey": "net/rpc/jsonrpc",
    "tags": [
      "package"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package jsonrpc"
  },
  "detail": {
    "kind": "markdown",
    "value": "Package jsonrpc implements a JSON-RPC 1.0 ClientCodec and ServerCodec for the rpc package. For JSON-RPC 2.0 support, see [https://godoc.org/?q=json-rpc+2.0](https://godoc.org/?q=json-rpc+2.0) \n\n"
  },
  "children": [
    {
      "node": {
        "pathID": "/net/rpc/jsonrpc#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#errMissingParams",
              "documentation": {
                "identifier": "errMissingParams",
                "newPage": false,
                "searchKey": "jsonrpc.errMissingParams",
                "tags": [
                  "variable",
                  "interface",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var errMissingParams"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar errMissingParams = errors.New(\"jsonrpc: request body missing params\")\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#null",
              "documentation": {
                "identifier": "null",
                "newPage": false,
                "searchKey": "jsonrpc.null",
                "tags": [
                  "variable",
                  "array",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var null"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar null = json.RawMessage([]byte(\"null\"))\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/net/rpc/jsonrpc#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#Args",
              "documentation": {
                "identifier": "Args",
                "newPage": false,
                "searchKey": "jsonrpc.Args",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Args struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Args struct {\n\tA, B int\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#Arith",
              "documentation": {
                "identifier": "Arith",
                "newPage": false,
                "searchKey": "jsonrpc.Arith",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Arith int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Arith int\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#Arith.Add",
                    "documentation": {
                      "identifier": "Arith.Add",
                      "newPage": false,
                      "searchKey": "jsonrpc.Arith.Add",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (t *Arith) Add(args *Args, reply *Reply) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (t *Arith) Add(args *Args, reply *Reply) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#Arith.Div",
                    "documentation": {
                      "identifier": "Arith.Div",
                      "newPage": false,
                      "searchKey": "jsonrpc.Arith.Div",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (t *Arith) Div(args *Args, reply *Reply) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (t *Arith) Div(args *Args, reply *Reply) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#Arith.Error",
                    "documentation": {
                      "identifier": "Arith.Error",
                      "newPage": false,
                      "searchKey": "jsonrpc.Arith.Error",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (t *Arith) Error(args *Args, reply *Reply) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (t *Arith) Error(args *Args, reply *Reply) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#Arith.Mul",
                    "documentation": {
                      "identifier": "Arith.Mul",
                      "newPage": false,
                      "searchKey": "jsonrpc.Arith.Mul",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (t *Arith) Mul(args *Args, reply *Reply) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (t *Arith) Mul(args *Args, reply *Reply) error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#ArithAddResp",
              "documentation": {
                "identifier": "ArithAddResp",
                "newPage": false,
                "searchKey": "jsonrpc.ArithAddResp",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ArithAddResp struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ArithAddResp struct {\n\tId     interface{} `json:\"id\"`\n\tResult Reply       `json:\"result\"`\n\tError  interface{} `json:\"error\"`\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#BuiltinTypes",
              "documentation": {
                "identifier": "BuiltinTypes",
                "newPage": false,
                "searchKey": "jsonrpc.BuiltinTypes",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type BuiltinTypes struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype BuiltinTypes struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#BuiltinTypes.Array",
                    "documentation": {
                      "identifier": "BuiltinTypes.Array",
                      "newPage": false,
                      "searchKey": "jsonrpc.BuiltinTypes.Array",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (BuiltinTypes) Array(i int, reply *[1]int) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (BuiltinTypes) Array(i int, reply *[1]int) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#BuiltinTypes.Map",
                    "documentation": {
                      "identifier": "BuiltinTypes.Map",
                      "newPage": false,
                      "searchKey": "jsonrpc.BuiltinTypes.Map",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (BuiltinTypes) Map(i int, reply *map[int]int) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (BuiltinTypes) Map(i int, reply *map[int]int) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#BuiltinTypes.Slice",
                    "documentation": {
                      "identifier": "BuiltinTypes.Slice",
                      "newPage": false,
                      "searchKey": "jsonrpc.BuiltinTypes.Slice",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (BuiltinTypes) Slice(i int, reply *[]int) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (BuiltinTypes) Slice(i int, reply *[]int) error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#Reply",
              "documentation": {
                "identifier": "Reply",
                "newPage": false,
                "searchKey": "jsonrpc.Reply",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Reply struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Reply struct {\n\tC int\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#clientCodec",
              "documentation": {
                "identifier": "clientCodec",
                "newPage": false,
                "searchKey": "jsonrpc.clientCodec",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type clientCodec struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype clientCodec struct {\n\tdec *json.Decoder // for reading JSON values\n\tenc *json.Encoder // for writing JSON values\n\tc   io.Closer\n\n\t// temporary work space\n\treq  clientRequest\n\tresp clientResponse\n\n\t// JSON-RPC responses include the request id but not the request method.\n\t// Package rpc expects both.\n\t// We save the request method in pending when sending a request\n\t// and then look it up by request ID when filling out the rpc Response.\n\tmutex   sync.Mutex        // protects pending\n\tpending map[uint64]string // map request id to method name\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#clientCodec.Close",
                    "documentation": {
                      "identifier": "clientCodec.Close",
                      "newPage": false,
                      "searchKey": "jsonrpc.clientCodec.Close",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *clientCodec) Close() error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *clientCodec) Close() error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#clientCodec.ReadResponseBody",
                    "documentation": {
                      "identifier": "clientCodec.ReadResponseBody",
                      "newPage": false,
                      "searchKey": "jsonrpc.clientCodec.ReadResponseBody",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *clientCodec) ReadResponseBody(x interface{}) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *clientCodec) ReadResponseBody(x interface{}) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#clientCodec.ReadResponseHeader",
                    "documentation": {
                      "identifier": "clientCodec.ReadResponseHeader",
                      "newPage": false,
                      "searchKey": "jsonrpc.clientCodec.ReadResponseHeader",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *clientCodec) ReadResponseHeader(r *rpc.Response) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *clientCodec) ReadResponseHeader(r *rpc.Response) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#clientCodec.WriteRequest",
                    "documentation": {
                      "identifier": "clientCodec.WriteRequest",
                      "newPage": false,
                      "searchKey": "jsonrpc.clientCodec.WriteRequest",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *clientCodec) WriteRequest(r *rpc.Request, param interface{}) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *clientCodec) WriteRequest(r *rpc.Request, param interface{}) error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#clientRequest",
              "documentation": {
                "identifier": "clientRequest",
                "newPage": false,
                "searchKey": "jsonrpc.clientRequest",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type clientRequest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype clientRequest struct {\n\tMethod string         `json:\"method\"`\n\tParams [1]interface{} `json:\"params\"`\n\tId     uint64         `json:\"id\"`\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#clientResponse",
              "documentation": {
                "identifier": "clientResponse",
                "newPage": false,
                "searchKey": "jsonrpc.clientResponse",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type clientResponse struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype clientResponse struct {\n\tId     uint64           `json:\"id\"`\n\tResult *json.RawMessage `json:\"result\"`\n\tError  interface{}      `json:\"error\"`\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#clientResponse.reset",
                    "documentation": {
                      "identifier": "clientResponse.reset",
                      "newPage": false,
                      "searchKey": "jsonrpc.clientResponse.reset",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *clientResponse) reset()"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *clientResponse) reset()\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#pipe",
              "documentation": {
                "identifier": "pipe",
                "newPage": false,
                "searchKey": "jsonrpc.pipe",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type pipe struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype pipe struct {\n\t*io.PipeReader\n\t*io.PipeWriter\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#pipe.Close",
                    "documentation": {
                      "identifier": "pipe.Close",
                      "newPage": false,
                      "searchKey": "jsonrpc.pipe.Close",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p *pipe) Close() error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p *pipe) Close() error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#pipe.LocalAddr",
                    "documentation": {
                      "identifier": "pipe.LocalAddr",
                      "newPage": false,
                      "searchKey": "jsonrpc.pipe.LocalAddr",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p *pipe) LocalAddr() net.Addr"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p *pipe) LocalAddr() net.Addr\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#pipe.RemoteAddr",
                    "documentation": {
                      "identifier": "pipe.RemoteAddr",
                      "newPage": false,
                      "searchKey": "jsonrpc.pipe.RemoteAddr",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p *pipe) RemoteAddr() net.Addr"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p *pipe) RemoteAddr() net.Addr\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#pipe.SetReadTimeout",
                    "documentation": {
                      "identifier": "pipe.SetReadTimeout",
                      "newPage": false,
                      "searchKey": "jsonrpc.pipe.SetReadTimeout",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p *pipe) SetReadTimeout(nsec int64) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p *pipe) SetReadTimeout(nsec int64) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#pipe.SetTimeout",
                    "documentation": {
                      "identifier": "pipe.SetTimeout",
                      "newPage": false,
                      "searchKey": "jsonrpc.pipe.SetTimeout",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p *pipe) SetTimeout(nsec int64) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p *pipe) SetTimeout(nsec int64) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#pipe.SetWriteTimeout",
                    "documentation": {
                      "identifier": "pipe.SetWriteTimeout",
                      "newPage": false,
                      "searchKey": "jsonrpc.pipe.SetWriteTimeout",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (p *pipe) SetWriteTimeout(nsec int64) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (p *pipe) SetWriteTimeout(nsec int64) error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#pipeAddr",
              "documentation": {
                "identifier": "pipeAddr",
                "newPage": false,
                "searchKey": "jsonrpc.pipeAddr",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type pipeAddr int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype pipeAddr int\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#pipeAddr.Network",
                    "documentation": {
                      "identifier": "pipeAddr.Network",
                      "newPage": false,
                      "searchKey": "jsonrpc.pipeAddr.Network",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (pipeAddr) Network() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (pipeAddr) Network() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#pipeAddr.String",
                    "documentation": {
                      "identifier": "pipeAddr.String",
                      "newPage": false,
                      "searchKey": "jsonrpc.pipeAddr.String",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (pipeAddr) String() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (pipeAddr) String() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#serverCodec",
              "documentation": {
                "identifier": "serverCodec",
                "newPage": false,
                "searchKey": "jsonrpc.serverCodec",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type serverCodec struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype serverCodec struct {\n\tdec *json.Decoder // for reading JSON values\n\tenc *json.Encoder // for writing JSON values\n\tc   io.Closer\n\n\t// temporary work space\n\treq serverRequest\n\n\t// JSON-RPC clients can use arbitrary json values as request IDs.\n\t// Package rpc expects uint64 request IDs.\n\t// We assign uint64 sequence numbers to incoming requests\n\t// but save the original request ID in the pending map.\n\t// When rpc responds, we use the sequence number in\n\t// the response to find the original request ID.\n\tmutex   sync.Mutex // protects seq, pending\n\tseq     uint64\n\tpending map[uint64]*json.RawMessage\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#serverCodec.Close",
                    "documentation": {
                      "identifier": "serverCodec.Close",
                      "newPage": false,
                      "searchKey": "jsonrpc.serverCodec.Close",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *serverCodec) Close() error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *serverCodec) Close() error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#serverCodec.ReadRequestBody",
                    "documentation": {
                      "identifier": "serverCodec.ReadRequestBody",
                      "newPage": false,
                      "searchKey": "jsonrpc.serverCodec.ReadRequestBody",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *serverCodec) ReadRequestBody(x interface{}) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *serverCodec) ReadRequestBody(x interface{}) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#serverCodec.ReadRequestHeader",
                    "documentation": {
                      "identifier": "serverCodec.ReadRequestHeader",
                      "newPage": false,
                      "searchKey": "jsonrpc.serverCodec.ReadRequestHeader",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *serverCodec) ReadRequestHeader(r *rpc.Request) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *serverCodec) ReadRequestHeader(r *rpc.Request) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#serverCodec.WriteResponse",
                    "documentation": {
                      "identifier": "serverCodec.WriteResponse",
                      "newPage": false,
                      "searchKey": "jsonrpc.serverCodec.WriteResponse",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *serverCodec) WriteResponse(r *rpc.Response, x interface{}) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *serverCodec) WriteResponse(r *rpc.Response, x interface{}) error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#serverRequest",
              "documentation": {
                "identifier": "serverRequest",
                "newPage": false,
                "searchKey": "jsonrpc.serverRequest",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type serverRequest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype serverRequest struct {\n\tMethod string           `json:\"method\"`\n\tParams *json.RawMessage `json:\"params\"`\n\tId     *json.RawMessage `json:\"id\"`\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/net/rpc/jsonrpc#serverRequest.reset",
                    "documentation": {
                      "identifier": "serverRequest.reset",
                      "newPage": false,
                      "searchKey": "jsonrpc.serverRequest.reset",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *serverRequest) reset()"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *serverRequest) reset()\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#serverResponse",
              "documentation": {
                "identifier": "serverResponse",
                "newPage": false,
                "searchKey": "jsonrpc.serverResponse",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type serverResponse struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype serverResponse struct {\n\tId     *json.RawMessage `json:\"id\"`\n\tResult interface{}      `json:\"result\"`\n\tError  interface{}      `json:\"error\"`\n}\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/net/rpc/jsonrpc#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#Dial",
              "documentation": {
                "identifier": "Dial",
                "newPage": false,
                "searchKey": "jsonrpc.Dial",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func Dial(network, address string) (*rpc.Client, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Dial(network, address string) (*rpc.Client, error)\n```\n\nDial connects to a JSON-RPC server at the specified network address. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#NewClient",
              "documentation": {
                "identifier": "NewClient",
                "newPage": false,
                "searchKey": "jsonrpc.NewClient",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func NewClient(conn io.ReadWriteCloser) *rpc.Client"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc NewClient(conn io.ReadWriteCloser) *rpc.Client\n```\n\nNewClient returns a new rpc.Client to handle requests to the set of services at the other end of the connection. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#NewClientCodec",
              "documentation": {
                "identifier": "NewClientCodec",
                "newPage": false,
                "searchKey": "jsonrpc.NewClientCodec",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func NewClientCodec(conn io.ReadWriteCloser) rpc.ClientCodec"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc NewClientCodec(conn io.ReadWriteCloser) rpc.ClientCodec\n```\n\nNewClientCodec returns a new rpc.ClientCodec using JSON-RPC on conn. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#NewServerCodec",
              "documentation": {
                "identifier": "NewServerCodec",
                "newPage": false,
                "searchKey": "jsonrpc.NewServerCodec",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func NewServerCodec(conn io.ReadWriteCloser) rpc.ServerCodec"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc NewServerCodec(conn io.ReadWriteCloser) rpc.ServerCodec\n```\n\nNewServerCodec returns a new rpc.ServerCodec using JSON-RPC on conn. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#ServeConn",
              "documentation": {
                "identifier": "ServeConn",
                "newPage": false,
                "searchKey": "jsonrpc.ServeConn",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ServeConn(conn io.ReadWriteCloser)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ServeConn(conn io.ReadWriteCloser)\n```\n\nServeConn runs the JSON-RPC server on a single connection. ServeConn blocks, serving the connection until the client hangs up. The caller typically invokes ServeConn in a go statement. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#TestBuiltinTypes",
              "documentation": {
                "identifier": "TestBuiltinTypes",
                "newPage": false,
                "searchKey": "jsonrpc.TestBuiltinTypes",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBuiltinTypes(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBuiltinTypes(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#TestClient",
              "documentation": {
                "identifier": "TestClient",
                "newPage": false,
                "searchKey": "jsonrpc.TestClient",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestClient(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestClient(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#TestMalformedInput",
              "documentation": {
                "identifier": "TestMalformedInput",
                "newPage": false,
                "searchKey": "jsonrpc.TestMalformedInput",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMalformedInput(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMalformedInput(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#TestMalformedOutput",
              "documentation": {
                "identifier": "TestMalformedOutput",
                "newPage": false,
                "searchKey": "jsonrpc.TestMalformedOutput",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMalformedOutput(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMalformedOutput(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#TestServer",
              "documentation": {
                "identifier": "TestServer",
                "newPage": false,
                "searchKey": "jsonrpc.TestServer",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestServer(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestServer(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#TestServerEmptyMessage",
              "documentation": {
                "identifier": "TestServerEmptyMessage",
                "newPage": false,
                "searchKey": "jsonrpc.TestServerEmptyMessage",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestServerEmptyMessage(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestServerEmptyMessage(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#TestServerErrorHasNullResult",
              "documentation": {
                "identifier": "TestServerErrorHasNullResult",
                "newPage": false,
                "searchKey": "jsonrpc.TestServerErrorHasNullResult",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestServerErrorHasNullResult(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestServerErrorHasNullResult(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#TestServerNoParams",
              "documentation": {
                "identifier": "TestServerNoParams",
                "newPage": false,
                "searchKey": "jsonrpc.TestServerNoParams",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestServerNoParams(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestServerNoParams(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#TestUnexpectedError",
              "documentation": {
                "identifier": "TestUnexpectedError",
                "newPage": false,
                "searchKey": "jsonrpc.TestUnexpectedError",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestUnexpectedError(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestUnexpectedError(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#init.all_test.go",
              "documentation": {
                "identifier": "init.all_test.go",
                "newPage": false,
                "searchKey": "jsonrpc.init",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func init()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc init()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/net/rpc/jsonrpc#myPipe",
              "documentation": {
                "identifier": "myPipe",
                "newPage": false,
                "searchKey": "jsonrpc.myPipe",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func myPipe() (*pipe, *pipe)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc myPipe() (*pipe, *pipe)\n```\n\nCopied from package net. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
