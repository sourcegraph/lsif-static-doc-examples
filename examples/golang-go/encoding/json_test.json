{
  "pathID": "/encoding/json_test",
  "documentation": {
    "identifier": "json_test",
    "newPage": true,
    "searchKey": "encoding/json_test",
    "tags": [
      "private",
      "package"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package json_test"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/encoding/json_test#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/encoding/json_test#Gopher",
              "documentation": {
                "identifier": "Gopher",
                "newPage": false,
                "searchKey": "json_test.Gopher",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const Gopher"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst Gopher\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#Large",
              "documentation": {
                "identifier": "Large",
                "newPage": false,
                "searchKey": "json_test.Large",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const Large"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst Large\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#Small",
              "documentation": {
                "identifier": "Small",
                "newPage": false,
                "searchKey": "json_test.Small",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const Small"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst Small\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#Unknown",
              "documentation": {
                "identifier": "Unknown",
                "newPage": false,
                "searchKey": "json_test.Unknown",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const Unknown"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst Unknown Animal = iota\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#Unrecognized",
              "documentation": {
                "identifier": "Unrecognized",
                "newPage": false,
                "searchKey": "json_test.Unrecognized",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const Unrecognized"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst Unrecognized Size = iota\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#Zebra",
              "documentation": {
                "identifier": "Zebra",
                "newPage": false,
                "searchKey": "json_test.Zebra",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const Zebra"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst Zebra\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/encoding/json_test#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/encoding/json_test#Animal",
              "documentation": {
                "identifier": "Animal",
                "newPage": false,
                "searchKey": "json_test.Animal",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Animal int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Animal int\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/encoding/json_test#Animal.MarshalJSON",
                    "documentation": {
                      "identifier": "Animal.MarshalJSON",
                      "newPage": false,
                      "searchKey": "json_test.Animal.MarshalJSON",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (a Animal) MarshalJSON() ([]byte, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (a Animal) MarshalJSON() ([]byte, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/encoding/json_test#Animal.UnmarshalJSON",
                    "documentation": {
                      "identifier": "Animal.UnmarshalJSON",
                      "newPage": false,
                      "searchKey": "json_test.Animal.UnmarshalJSON",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (a *Animal) UnmarshalJSON(b []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (a *Animal) UnmarshalJSON(b []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#Size",
              "documentation": {
                "identifier": "Size",
                "newPage": false,
                "searchKey": "json_test.Size",
                "tags": [
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Size int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Size int\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/encoding/json_test#Size.MarshalText",
                    "documentation": {
                      "identifier": "Size.MarshalText",
                      "newPage": false,
                      "searchKey": "json_test.Size.MarshalText",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s Size) MarshalText() ([]byte, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s Size) MarshalText() ([]byte, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/encoding/json_test#Size.UnmarshalText",
                    "documentation": {
                      "identifier": "Size.UnmarshalText",
                      "newPage": false,
                      "searchKey": "json_test.Size.UnmarshalText",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Size) UnmarshalText(text []byte) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Size) UnmarshalText(text []byte) error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/encoding/json_test#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleDecoder",
              "documentation": {
                "identifier": "ExampleDecoder",
                "newPage": false,
                "searchKey": "json_test.ExampleDecoder",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleDecoder()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleDecoder()\n```\n\nThis example uses a Decoder to decode a stream of distinct JSON values. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleDecoder_Decode_stream",
              "documentation": {
                "identifier": "ExampleDecoder_Decode_stream",
                "newPage": false,
                "searchKey": "json_test.ExampleDecoder_Decode_stream",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleDecoder_Decode_stream()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleDecoder_Decode_stream()\n```\n\nThis example uses a Decoder to decode a streaming array of JSON objects. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleDecoder_Token",
              "documentation": {
                "identifier": "ExampleDecoder_Token",
                "newPage": false,
                "searchKey": "json_test.ExampleDecoder_Token",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleDecoder_Token()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleDecoder_Token()\n```\n\nThis example uses a Decoder to decode a stream of distinct JSON values. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleHTMLEscape",
              "documentation": {
                "identifier": "ExampleHTMLEscape",
                "newPage": false,
                "searchKey": "json_test.ExampleHTMLEscape",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleHTMLEscape()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleHTMLEscape()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleIndent",
              "documentation": {
                "identifier": "ExampleIndent",
                "newPage": false,
                "searchKey": "json_test.ExampleIndent",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleIndent()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleIndent()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleMarshal",
              "documentation": {
                "identifier": "ExampleMarshal",
                "newPage": false,
                "searchKey": "json_test.ExampleMarshal",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleMarshal()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleMarshal()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleMarshalIndent",
              "documentation": {
                "identifier": "ExampleMarshalIndent",
                "newPage": false,
                "searchKey": "json_test.ExampleMarshalIndent",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleMarshalIndent()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleMarshalIndent()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleRawMessage_marshal",
              "documentation": {
                "identifier": "ExampleRawMessage_marshal",
                "newPage": false,
                "searchKey": "json_test.ExampleRawMessage_marshal",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleRawMessage_marshal()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleRawMessage_marshal()\n```\n\nThis example uses RawMessage to use a precomputed JSON during marshal. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleRawMessage_unmarshal",
              "documentation": {
                "identifier": "ExampleRawMessage_unmarshal",
                "newPage": false,
                "searchKey": "json_test.ExampleRawMessage_unmarshal",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleRawMessage_unmarshal()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleRawMessage_unmarshal()\n```\n\nThis example uses RawMessage to delay parsing part of a JSON message. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleUnmarshal",
              "documentation": {
                "identifier": "ExampleUnmarshal",
                "newPage": false,
                "searchKey": "json_test.ExampleUnmarshal",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleUnmarshal()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleUnmarshal()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#ExampleValid",
              "documentation": {
                "identifier": "ExampleValid",
                "newPage": false,
                "searchKey": "json_test.ExampleValid",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleValid()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleValid()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#Example_customMarshalJSON",
              "documentation": {
                "identifier": "Example_customMarshalJSON",
                "newPage": false,
                "searchKey": "json_test.Example_customMarshalJSON",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func Example_customMarshalJSON()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Example_customMarshalJSON()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/encoding/json_test#Example_textMarshalJSON",
              "documentation": {
                "identifier": "Example_textMarshalJSON",
                "newPage": false,
                "searchKey": "json_test.Example_textMarshalJSON",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func Example_textMarshalJSON()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Example_textMarshalJSON()\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
