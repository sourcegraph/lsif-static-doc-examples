{
  "pathID": "/container/heap_test",
  "documentation": {
    "identifier": "heap_test",
    "newPage": true,
    "searchKey": "container/heap_test",
    "tags": [
      "private",
      "package"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package heap_test"
  },
  "detail": {
    "kind": "markdown",
    "value": "This example demonstrates an integer heap built using the heap interface. \n\nThis example demonstrates a priority queue built using the heap interface. \n\n"
  },
  "children": [
    {
      "node": {
        "pathID": "/container/heap_test#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/container/heap_test#IntHeap",
              "documentation": {
                "identifier": "IntHeap",
                "newPage": false,
                "searchKey": "heap_test.IntHeap",
                "tags": [
                  "array",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type IntHeap []int"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype IntHeap []int\n```\n\nAn IntHeap is a min-heap of ints. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/container/heap_test#IntHeap.Len",
                    "documentation": {
                      "identifier": "IntHeap.Len",
                      "newPage": false,
                      "searchKey": "heap_test.IntHeap.Len",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h IntHeap) Len() int"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h IntHeap) Len() int\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/container/heap_test#IntHeap.Less",
                    "documentation": {
                      "identifier": "IntHeap.Less",
                      "newPage": false,
                      "searchKey": "heap_test.IntHeap.Less",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h IntHeap) Less(i, j int) bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h IntHeap) Less(i, j int) bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/container/heap_test#IntHeap.Pop",
                    "documentation": {
                      "identifier": "IntHeap.Pop",
                      "newPage": false,
                      "searchKey": "heap_test.IntHeap.Pop",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h *IntHeap) Pop() interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h *IntHeap) Pop() interface{}\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/container/heap_test#IntHeap.Push",
                    "documentation": {
                      "identifier": "IntHeap.Push",
                      "newPage": false,
                      "searchKey": "heap_test.IntHeap.Push",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h *IntHeap) Push(x interface{})"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h *IntHeap) Push(x interface{})\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/container/heap_test#IntHeap.Swap",
                    "documentation": {
                      "identifier": "IntHeap.Swap",
                      "newPage": false,
                      "searchKey": "heap_test.IntHeap.Swap",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h IntHeap) Swap(i, j int)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h IntHeap) Swap(i, j int)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/container/heap_test#Item",
              "documentation": {
                "identifier": "Item",
                "newPage": false,
                "searchKey": "heap_test.Item",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Item struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Item struct {\n\tvalue    string // The value of the item; arbitrary.\n\tpriority int    // The priority of the item in the queue.\n\t// The index is needed by update and is maintained by the heap.Interface methods.\n\tindex int // The index of the item in the heap.\n}\n```\n\nAn Item is something we manage in a priority queue. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/container/heap_test#PriorityQueue",
              "documentation": {
                "identifier": "PriorityQueue",
                "newPage": false,
                "searchKey": "heap_test.PriorityQueue",
                "tags": [
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type PriorityQueue []*heap_test.Item"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype PriorityQueue []*Item\n```\n\nA PriorityQueue implements heap.Interface and holds Items. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/container/heap_test#PriorityQueue.Len",
                    "documentation": {
                      "identifier": "PriorityQueue.Len",
                      "newPage": false,
                      "searchKey": "heap_test.PriorityQueue.Len",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (pq PriorityQueue) Len() int"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (pq PriorityQueue) Len() int\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/container/heap_test#PriorityQueue.Less",
                    "documentation": {
                      "identifier": "PriorityQueue.Less",
                      "newPage": false,
                      "searchKey": "heap_test.PriorityQueue.Less",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (pq PriorityQueue) Less(i, j int) bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (pq PriorityQueue) Less(i, j int) bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/container/heap_test#PriorityQueue.Pop",
                    "documentation": {
                      "identifier": "PriorityQueue.Pop",
                      "newPage": false,
                      "searchKey": "heap_test.PriorityQueue.Pop",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (pq *PriorityQueue) Pop() interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (pq *PriorityQueue) Pop() interface{}\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/container/heap_test#PriorityQueue.Push",
                    "documentation": {
                      "identifier": "PriorityQueue.Push",
                      "newPage": false,
                      "searchKey": "heap_test.PriorityQueue.Push",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (pq *PriorityQueue) Push(x interface{})"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (pq *PriorityQueue) Push(x interface{})\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/container/heap_test#PriorityQueue.Swap",
                    "documentation": {
                      "identifier": "PriorityQueue.Swap",
                      "newPage": false,
                      "searchKey": "heap_test.PriorityQueue.Swap",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (pq PriorityQueue) Swap(i, j int)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (pq PriorityQueue) Swap(i, j int)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/container/heap_test#PriorityQueue.update",
                    "documentation": {
                      "identifier": "PriorityQueue.update",
                      "newPage": false,
                      "searchKey": "heap_test.PriorityQueue.update",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (pq *PriorityQueue) update(item *Item, value string, priority int)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (pq *PriorityQueue) update(item *Item, value string, priority int)\n```\n\nupdate modifies the priority and value of an Item in the queue. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/container/heap_test#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/container/heap_test#Example_intHeap",
              "documentation": {
                "identifier": "Example_intHeap",
                "newPage": false,
                "searchKey": "heap_test.Example_intHeap",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func Example_intHeap()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Example_intHeap()\n```\n\nThis example inserts several ints into an IntHeap, checks the minimum, and removes them in order of priority. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/container/heap_test#Example_priorityQueue",
              "documentation": {
                "identifier": "Example_priorityQueue",
                "newPage": false,
                "searchKey": "heap_test.Example_priorityQueue",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func Example_priorityQueue()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Example_priorityQueue()\n```\n\nThis example creates a PriorityQueue with some items, adds and manipulates an item, and then removes the items in priority order. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
