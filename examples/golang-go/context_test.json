{
  "pathID": "/context_test",
  "documentation": {
    "identifier": "context_test",
    "newPage": true,
    "searchKey": "context_test",
    "tags": [
      "package",
      "private"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package context_test"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/context_test#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/context_test#shortDuration",
              "documentation": {
                "identifier": "shortDuration",
                "newPage": false,
                "searchKey": "context_test.shortDuration",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const shortDuration"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst shortDuration = 1 * time.Millisecond // a reasonable duration to block in an example\n\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/context_test#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/context_test#BenchmarkCancelTree",
              "documentation": {
                "identifier": "BenchmarkCancelTree",
                "newPage": false,
                "searchKey": "context_test.BenchmarkCancelTree",
                "tags": [
                  "method",
                  "private",
                  "benchmark"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkCancelTree(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkCancelTree(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#BenchmarkCheckCanceled",
              "documentation": {
                "identifier": "BenchmarkCheckCanceled",
                "newPage": false,
                "searchKey": "context_test.BenchmarkCheckCanceled",
                "tags": [
                  "method",
                  "private",
                  "benchmark"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkCheckCanceled(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkCheckCanceled(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#BenchmarkCommonParentCancel",
              "documentation": {
                "identifier": "BenchmarkCommonParentCancel",
                "newPage": false,
                "searchKey": "context_test.BenchmarkCommonParentCancel",
                "tags": [
                  "method",
                  "private",
                  "benchmark"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkCommonParentCancel(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkCommonParentCancel(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#BenchmarkContextCancelDone",
              "documentation": {
                "identifier": "BenchmarkContextCancelDone",
                "newPage": false,
                "searchKey": "context_test.BenchmarkContextCancelDone",
                "tags": [
                  "method",
                  "private",
                  "benchmark"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkContextCancelDone(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkContextCancelDone(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#BenchmarkWithTimeout",
              "documentation": {
                "identifier": "BenchmarkWithTimeout",
                "newPage": false,
                "searchKey": "context_test.BenchmarkWithTimeout",
                "tags": [
                  "method",
                  "private",
                  "benchmark"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkWithTimeout(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkWithTimeout(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#ExampleWithCancel",
              "documentation": {
                "identifier": "ExampleWithCancel",
                "newPage": false,
                "searchKey": "context_test.ExampleWithCancel",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleWithCancel()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleWithCancel()\n```\n\nThis example demonstrates the use of a cancelable context to prevent a goroutine leak. By the end of the example function, the goroutine started by gen will return without leaking. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#ExampleWithDeadline",
              "documentation": {
                "identifier": "ExampleWithDeadline",
                "newPage": false,
                "searchKey": "context_test.ExampleWithDeadline",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleWithDeadline()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleWithDeadline()\n```\n\nThis example passes a context with an arbitrary deadline to tell a blocking function that it should abandon its work as soon as it gets to it. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#ExampleWithTimeout",
              "documentation": {
                "identifier": "ExampleWithTimeout",
                "newPage": false,
                "searchKey": "context_test.ExampleWithTimeout",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleWithTimeout()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleWithTimeout()\n```\n\nThis example passes a context with a timeout to tell a blocking function that it should abandon its work after the timeout elapses. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#ExampleWithValue",
              "documentation": {
                "identifier": "ExampleWithValue",
                "newPage": false,
                "searchKey": "context_test.ExampleWithValue",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleWithValue()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleWithValue()\n```\n\nThis example demonstrates how a value can be passed to the context and also how to retrieve it if it exists. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestAllocs",
              "documentation": {
                "identifier": "TestAllocs",
                "newPage": false,
                "searchKey": "context_test.TestAllocs",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAllocs(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAllocs(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestBackground",
              "documentation": {
                "identifier": "TestBackground",
                "newPage": false,
                "searchKey": "context_test.TestBackground",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBackground(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBackground(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestCancelRemoves",
              "documentation": {
                "identifier": "TestCancelRemoves",
                "newPage": false,
                "searchKey": "context_test.TestCancelRemoves",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCancelRemoves(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCancelRemoves(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestCanceledTimeout",
              "documentation": {
                "identifier": "TestCanceledTimeout",
                "newPage": false,
                "searchKey": "context_test.TestCanceledTimeout",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCanceledTimeout(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCanceledTimeout(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestChildFinishesFirst",
              "documentation": {
                "identifier": "TestChildFinishesFirst",
                "newPage": false,
                "searchKey": "context_test.TestChildFinishesFirst",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChildFinishesFirst(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChildFinishesFirst(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestCustomContextGoroutines",
              "documentation": {
                "identifier": "TestCustomContextGoroutines",
                "newPage": false,
                "searchKey": "context_test.TestCustomContextGoroutines",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCustomContextGoroutines(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCustomContextGoroutines(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestDeadline",
              "documentation": {
                "identifier": "TestDeadline",
                "newPage": false,
                "searchKey": "context_test.TestDeadline",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDeadline(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDeadline(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestDeadlineExceededIsNetError",
              "documentation": {
                "identifier": "TestDeadlineExceededIsNetError",
                "newPage": false,
                "searchKey": "context_test.TestDeadlineExceededIsNetError",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDeadlineExceededIsNetError(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDeadlineExceededIsNetError(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestDeadlineExceededSupportsTimeout",
              "documentation": {
                "identifier": "TestDeadlineExceededSupportsTimeout",
                "newPage": false,
                "searchKey": "context_test.TestDeadlineExceededSupportsTimeout",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDeadlineExceededSupportsTimeout(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDeadlineExceededSupportsTimeout(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestInterlockedCancels",
              "documentation": {
                "identifier": "TestInterlockedCancels",
                "newPage": false,
                "searchKey": "context_test.TestInterlockedCancels",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestInterlockedCancels(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestInterlockedCancels(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestInvalidDerivedFail",
              "documentation": {
                "identifier": "TestInvalidDerivedFail",
                "newPage": false,
                "searchKey": "context_test.TestInvalidDerivedFail",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestInvalidDerivedFail(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestInvalidDerivedFail(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestLayersCancel",
              "documentation": {
                "identifier": "TestLayersCancel",
                "newPage": false,
                "searchKey": "context_test.TestLayersCancel",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLayersCancel(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLayersCancel(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestLayersTimeout",
              "documentation": {
                "identifier": "TestLayersTimeout",
                "newPage": false,
                "searchKey": "context_test.TestLayersTimeout",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestLayersTimeout(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestLayersTimeout(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestParentFinishesChild",
              "documentation": {
                "identifier": "TestParentFinishesChild",
                "newPage": false,
                "searchKey": "context_test.TestParentFinishesChild",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParentFinishesChild(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParentFinishesChild(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestSimultaneousCancels",
              "documentation": {
                "identifier": "TestSimultaneousCancels",
                "newPage": false,
                "searchKey": "context_test.TestSimultaneousCancels",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSimultaneousCancels(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSimultaneousCancels(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestTODO",
              "documentation": {
                "identifier": "TestTODO",
                "newPage": false,
                "searchKey": "context_test.TestTODO",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTODO(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTODO(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestTimeout",
              "documentation": {
                "identifier": "TestTimeout",
                "newPage": false,
                "searchKey": "context_test.TestTimeout",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTimeout(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTimeout(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestValues",
              "documentation": {
                "identifier": "TestValues",
                "newPage": false,
                "searchKey": "context_test.TestValues",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestValues(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestValues(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestWithCancel",
              "documentation": {
                "identifier": "TestWithCancel",
                "newPage": false,
                "searchKey": "context_test.TestWithCancel",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestWithCancel(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestWithCancel(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestWithCancelCanceledParent",
              "documentation": {
                "identifier": "TestWithCancelCanceledParent",
                "newPage": false,
                "searchKey": "context_test.TestWithCancelCanceledParent",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestWithCancelCanceledParent(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestWithCancelCanceledParent(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#TestWithValueChecksKey",
              "documentation": {
                "identifier": "TestWithValueChecksKey",
                "newPage": false,
                "searchKey": "context_test.TestWithValueChecksKey",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestWithValueChecksKey(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestWithValueChecksKey(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#benchmarkWithTimeout",
              "documentation": {
                "identifier": "benchmarkWithTimeout",
                "newPage": false,
                "searchKey": "context_test.benchmarkWithTimeout",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func benchmarkWithTimeout(b *testing.B, concurrentContexts int)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc benchmarkWithTimeout(b *testing.B, concurrentContexts int)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/context_test#buildContextTree",
              "documentation": {
                "identifier": "buildContextTree",
                "newPage": false,
                "searchKey": "context_test.buildContextTree",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func buildContextTree(root Context, depth int)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc buildContextTree(root Context, depth int)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
