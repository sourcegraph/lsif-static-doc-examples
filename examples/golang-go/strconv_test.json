{
  "pathID": "/strconv_test",
  "documentation": {
    "identifier": "strconv_test",
    "newPage": true,
    "searchKey": "strconv_test",
    "tags": []
  },
  "label": {
    "kind": "plaintext",
    "value": "Package strconv_test"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/strconv_test#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/strconv_test#below1e23",
              "documentation": {
                "identifier": "below1e23",
                "newPage": false,
                "searchKey": "strconv_test.below1e23",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "const below1e23"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst below1e23 = 99999999999999974834176\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#above1e23",
              "documentation": {
                "identifier": "above1e23",
                "newPage": false,
                "searchKey": "strconv_test.above1e23",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "const above1e23"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst above1e23 = 100000000000000008388608\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/strconv_test#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/strconv_test#atobtests",
              "documentation": {
                "identifier": "atobtests",
                "newPage": false,
                "searchKey": "strconv_test.atobtests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atobtests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atobtests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#boolString",
              "documentation": {
                "identifier": "boolString",
                "newPage": false,
                "searchKey": "strconv_test.boolString",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var boolString"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar boolString = map[bool]string{\n\ttrue:  \"true\",\n\tfalse: \"false\",\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#appendBoolTests",
              "documentation": {
                "identifier": "appendBoolTests",
                "newPage": false,
                "searchKey": "strconv_test.appendBoolTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var appendBoolTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar appendBoolTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#infp0",
              "documentation": {
                "identifier": "infp0",
                "newPage": false,
                "searchKey": "strconv_test.infp0",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var infp0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar infp0 = complex(math.Inf(+1), 0)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#infm0",
              "documentation": {
                "identifier": "infm0",
                "newPage": false,
                "searchKey": "strconv_test.infm0",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var infm0"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar infm0 = complex(math.Inf(-1), 0)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#inf0p",
              "documentation": {
                "identifier": "inf0p",
                "newPage": false,
                "searchKey": "strconv_test.inf0p",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var inf0p"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar inf0p = complex(0, math.Inf(+1))\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#inf0m",
              "documentation": {
                "identifier": "inf0m",
                "newPage": false,
                "searchKey": "strconv_test.inf0m",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var inf0m"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar inf0m = complex(0, math.Inf(-1))\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#infpp",
              "documentation": {
                "identifier": "infpp",
                "newPage": false,
                "searchKey": "strconv_test.infpp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var infpp"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar infpp = complex(math.Inf(+1), math.Inf(+1))\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#infpm",
              "documentation": {
                "identifier": "infpm",
                "newPage": false,
                "searchKey": "strconv_test.infpm",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var infpm"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar infpm = complex(math.Inf(+1), math.Inf(-1))\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#infmp",
              "documentation": {
                "identifier": "infmp",
                "newPage": false,
                "searchKey": "strconv_test.infmp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var infmp"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar infmp = complex(math.Inf(-1), math.Inf(+1))\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#infmm",
              "documentation": {
                "identifier": "infmm",
                "newPage": false,
                "searchKey": "strconv_test.infmm",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var infmm"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar infmm = complex(math.Inf(-1), math.Inf(-1))\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#atoftests",
              "documentation": {
                "identifier": "atoftests",
                "newPage": false,
                "searchKey": "strconv_test.atoftests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atoftests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atoftests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#atof32tests",
              "documentation": {
                "identifier": "atof32tests",
                "newPage": false,
                "searchKey": "strconv_test.atof32tests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atof32tests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atof32tests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#atofOnce",
              "documentation": {
                "identifier": "atofOnce",
                "newPage": false,
                "searchKey": "strconv_test.atofOnce",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atofOnce"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atofOnce sync.Once\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#atofRandomTests",
              "documentation": {
                "identifier": "atofRandomTests",
                "newPage": false,
                "searchKey": "strconv_test.atofRandomTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var atofRandomTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar atofRandomTests []atofSimpleTest\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#benchmarksRandomBits",
              "documentation": {
                "identifier": "benchmarksRandomBits",
                "newPage": false,
                "searchKey": "strconv_test.benchmarksRandomBits",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var benchmarksRandomBits"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar benchmarksRandomBits [1024]string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#benchmarksRandomNormal",
              "documentation": {
                "identifier": "benchmarksRandomNormal",
                "newPage": false,
                "searchKey": "strconv_test.benchmarksRandomNormal",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var benchmarksRandomNormal"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar benchmarksRandomNormal [1024]string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#roundTripCases",
              "documentation": {
                "identifier": "roundTripCases",
                "newPage": false,
                "searchKey": "strconv_test.roundTripCases",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var roundTripCases"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar roundTripCases = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseUint64Tests",
              "documentation": {
                "identifier": "parseUint64Tests",
                "newPage": false,
                "searchKey": "strconv_test.parseUint64Tests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var parseUint64Tests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar parseUint64Tests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseUint64BaseTests",
              "documentation": {
                "identifier": "parseUint64BaseTests",
                "newPage": false,
                "searchKey": "strconv_test.parseUint64BaseTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var parseUint64BaseTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar parseUint64BaseTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseInt64Tests",
              "documentation": {
                "identifier": "parseInt64Tests",
                "newPage": false,
                "searchKey": "strconv_test.parseInt64Tests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var parseInt64Tests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar parseInt64Tests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseInt64BaseTests",
              "documentation": {
                "identifier": "parseInt64BaseTests",
                "newPage": false,
                "searchKey": "strconv_test.parseInt64BaseTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var parseInt64BaseTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar parseInt64BaseTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseUint32Tests",
              "documentation": {
                "identifier": "parseUint32Tests",
                "newPage": false,
                "searchKey": "strconv_test.parseUint32Tests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var parseUint32Tests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar parseUint32Tests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseInt32Tests",
              "documentation": {
                "identifier": "parseInt32Tests",
                "newPage": false,
                "searchKey": "strconv_test.parseInt32Tests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var parseInt32Tests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar parseInt32Tests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#numErrorTests",
              "documentation": {
                "identifier": "numErrorTests",
                "newPage": false,
                "searchKey": "strconv_test.numErrorTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var numErrorTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar numErrorTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseBitSizeTests",
              "documentation": {
                "identifier": "parseBitSizeTests",
                "newPage": false,
                "searchKey": "strconv_test.parseBitSizeTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var parseBitSizeTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar parseBitSizeTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseBaseTests",
              "documentation": {
                "identifier": "parseBaseTests",
                "newPage": false,
                "searchKey": "strconv_test.parseBaseTests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var parseBaseTests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar parseBaseTests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#shifttests",
              "documentation": {
                "identifier": "shifttests",
                "newPage": false,
                "searchKey": "strconv_test.shifttests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var shifttests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar shifttests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#roundtests",
              "documentation": {
                "identifier": "roundtests",
                "newPage": false,
                "searchKey": "strconv_test.roundtests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var roundtests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar roundtests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#roundinttests",
              "documentation": {
                "identifier": "roundinttests",
                "newPage": false,
                "searchKey": "strconv_test.roundinttests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var roundinttests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar roundinttests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ftoatests",
              "documentation": {
                "identifier": "ftoatests",
                "newPage": false,
                "searchKey": "strconv_test.ftoatests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ftoatests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ftoatests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ftoaBenches",
              "documentation": {
                "identifier": "ftoaBenches",
                "newPage": false,
                "searchKey": "strconv_test.ftoaBenches",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var ftoaBenches"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ftoaBenches = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#itob64tests",
              "documentation": {
                "identifier": "itob64tests",
                "newPage": false,
                "searchKey": "strconv_test.itob64tests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var itob64tests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar itob64tests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#uitob64tests",
              "documentation": {
                "identifier": "uitob64tests",
                "newPage": false,
                "searchKey": "strconv_test.uitob64tests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var uitob64tests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar uitob64tests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#varlenUints",
              "documentation": {
                "identifier": "varlenUints",
                "newPage": false,
                "searchKey": "strconv_test.varlenUints",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var varlenUints"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar varlenUints = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchSink",
              "documentation": {
                "identifier": "BenchSink",
                "newPage": false,
                "searchKey": "strconv_test.BenchSink",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var BenchSink"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar BenchSink int // make sure compiler cannot optimize away benchmarks\n\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#quotetests",
              "documentation": {
                "identifier": "quotetests",
                "newPage": false,
                "searchKey": "strconv_test.quotetests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var quotetests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar quotetests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#benchQuoteBuf",
              "documentation": {
                "identifier": "benchQuoteBuf",
                "newPage": false,
                "searchKey": "strconv_test.benchQuoteBuf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var benchQuoteBuf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar benchQuoteBuf []byte\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#benchQuoteRuneBuf",
              "documentation": {
                "identifier": "benchQuoteRuneBuf",
                "newPage": false,
                "searchKey": "strconv_test.benchQuoteRuneBuf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var benchQuoteRuneBuf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar benchQuoteRuneBuf []byte\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#quoterunetests",
              "documentation": {
                "identifier": "quoterunetests",
                "newPage": false,
                "searchKey": "strconv_test.quoterunetests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var quoterunetests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar quoterunetests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#canbackquotetests",
              "documentation": {
                "identifier": "canbackquotetests",
                "newPage": false,
                "searchKey": "strconv_test.canbackquotetests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var canbackquotetests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar canbackquotetests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#unquotetests",
              "documentation": {
                "identifier": "unquotetests",
                "newPage": false,
                "searchKey": "strconv_test.unquotetests",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var unquotetests"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar unquotetests = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#misquoted",
              "documentation": {
                "identifier": "misquoted",
                "newPage": false,
                "searchKey": "strconv_test.misquoted",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var misquoted"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar misquoted = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#globalBuf",
              "documentation": {
                "identifier": "globalBuf",
                "newPage": false,
                "searchKey": "strconv_test.globalBuf",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var globalBuf"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar globalBuf [64]byte\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#nextToOne",
              "documentation": {
                "identifier": "nextToOne",
                "newPage": false,
                "searchKey": "strconv_test.nextToOne",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var nextToOne"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar nextToOne = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#mallocTest",
              "documentation": {
                "identifier": "mallocTest",
                "newPage": false,
                "searchKey": "strconv_test.mallocTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var mallocTest"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar mallocTest = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#oneMB",
              "documentation": {
                "identifier": "oneMB",
                "newPage": false,
                "searchKey": "strconv_test.oneMB",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var oneMB"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar oneMB []byte // Will be allocated to 1MB of random data by TestCountMallocs.\n\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/strconv_test#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/strconv_test#atobTest",
              "documentation": {
                "identifier": "atobTest",
                "newPage": false,
                "searchKey": "strconv_test.atobTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type atobTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype atobTest struct {\n\tin  string\n\tout bool\n\terr error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#appendBoolTest",
              "documentation": {
                "identifier": "appendBoolTest",
                "newPage": false,
                "searchKey": "strconv_test.appendBoolTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type appendBoolTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype appendBoolTest struct {\n\tb   bool\n\tin  []byte\n\tout []byte\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#atocTest",
              "documentation": {
                "identifier": "atocTest",
                "newPage": false,
                "searchKey": "strconv_test.atocTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type atocTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype atocTest struct {\n\tin  string\n\tout complex128\n\terr error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#atofTest",
              "documentation": {
                "identifier": "atofTest",
                "newPage": false,
                "searchKey": "strconv_test.atofTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type atofTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype atofTest struct {\n\tin  string\n\tout string\n\terr error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#atofSimpleTest",
              "documentation": {
                "identifier": "atofSimpleTest",
                "newPage": false,
                "searchKey": "strconv_test.atofSimpleTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type atofSimpleTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype atofSimpleTest struct {\n\tx float64\n\ts string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseUint64Test",
              "documentation": {
                "identifier": "parseUint64Test",
                "newPage": false,
                "searchKey": "strconv_test.parseUint64Test",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type parseUint64Test struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype parseUint64Test struct {\n\tin  string\n\tout uint64\n\terr error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseUint64BaseTest",
              "documentation": {
                "identifier": "parseUint64BaseTest",
                "newPage": false,
                "searchKey": "strconv_test.parseUint64BaseTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type parseUint64BaseTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype parseUint64BaseTest struct {\n\tin   string\n\tbase int\n\tout  uint64\n\terr  error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseInt64Test",
              "documentation": {
                "identifier": "parseInt64Test",
                "newPage": false,
                "searchKey": "strconv_test.parseInt64Test",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type parseInt64Test struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype parseInt64Test struct {\n\tin  string\n\tout int64\n\terr error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseInt64BaseTest",
              "documentation": {
                "identifier": "parseInt64BaseTest",
                "newPage": false,
                "searchKey": "strconv_test.parseInt64BaseTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type parseInt64BaseTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype parseInt64BaseTest struct {\n\tin   string\n\tbase int\n\tout  int64\n\terr  error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseUint32Test",
              "documentation": {
                "identifier": "parseUint32Test",
                "newPage": false,
                "searchKey": "strconv_test.parseUint32Test",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type parseUint32Test struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype parseUint32Test struct {\n\tin  string\n\tout uint32\n\terr error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseInt32Test",
              "documentation": {
                "identifier": "parseInt32Test",
                "newPage": false,
                "searchKey": "strconv_test.parseInt32Test",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type parseInt32Test struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype parseInt32Test struct {\n\tin  string\n\tout int32\n\terr error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#numErrorTest",
              "documentation": {
                "identifier": "numErrorTest",
                "newPage": false,
                "searchKey": "strconv_test.numErrorTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type numErrorTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype numErrorTest struct {\n\tnum, want string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#parseErrorTest",
              "documentation": {
                "identifier": "parseErrorTest",
                "newPage": false,
                "searchKey": "strconv_test.parseErrorTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type parseErrorTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype parseErrorTest struct {\n\targ     int\n\terrStub func(name string, arg int) error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#benchCase",
              "documentation": {
                "identifier": "benchCase",
                "newPage": false,
                "searchKey": "strconv_test.benchCase",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type benchCase struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype benchCase struct {\n\tname string\n\tnum  int64\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#shiftTest",
              "documentation": {
                "identifier": "shiftTest",
                "newPage": false,
                "searchKey": "strconv_test.shiftTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type shiftTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype shiftTest struct {\n\ti     uint64\n\tshift int\n\tout   string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#roundTest",
              "documentation": {
                "identifier": "roundTest",
                "newPage": false,
                "searchKey": "strconv_test.roundTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type roundTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype roundTest struct {\n\ti               uint64\n\tnd              int\n\tdown, round, up string\n\tint             uint64\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#roundIntTest",
              "documentation": {
                "identifier": "roundIntTest",
                "newPage": false,
                "searchKey": "strconv_test.roundIntTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type roundIntTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype roundIntTest struct {\n\ti     uint64\n\tshift int\n\tint   uint64\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ftoaTest",
              "documentation": {
                "identifier": "ftoaTest",
                "newPage": false,
                "searchKey": "strconv_test.ftoaTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type ftoaTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ftoaTest struct {\n\tf    float64\n\tfmt  byte\n\tprec int\n\ts    string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#itob64Test",
              "documentation": {
                "identifier": "itob64Test",
                "newPage": false,
                "searchKey": "strconv_test.itob64Test",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type itob64Test struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype itob64Test struct {\n\tin   int64\n\tbase int\n\tout  string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#uitob64Test",
              "documentation": {
                "identifier": "uitob64Test",
                "newPage": false,
                "searchKey": "strconv_test.uitob64Test",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type uitob64Test struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype uitob64Test struct {\n\tin   uint64\n\tbase int\n\tout  string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#quoteTest",
              "documentation": {
                "identifier": "quoteTest",
                "newPage": false,
                "searchKey": "strconv_test.quoteTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type quoteTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype quoteTest struct {\n\tin      string\n\tout     string\n\tascii   string\n\tgraphic string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#quoteRuneTest",
              "documentation": {
                "identifier": "quoteRuneTest",
                "newPage": false,
                "searchKey": "strconv_test.quoteRuneTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type quoteRuneTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype quoteRuneTest struct {\n\tin      rune\n\tout     string\n\tascii   string\n\tgraphic string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#canBackquoteTest",
              "documentation": {
                "identifier": "canBackquoteTest",
                "newPage": false,
                "searchKey": "strconv_test.canBackquoteTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type canBackquoteTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype canBackquoteTest struct {\n\tin  string\n\tout bool\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#unQuoteTest",
              "documentation": {
                "identifier": "unQuoteTest",
                "newPage": false,
                "searchKey": "strconv_test.unQuoteTest",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type unQuoteTest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype unQuoteTest struct {\n\tin  string\n\tout string\n}\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/strconv_test#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/strconv_test#TestParseBool",
              "documentation": {
                "identifier": "TestParseBool",
                "newPage": false,
                "searchKey": "strconv_test.TestParseBool",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseBool(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseBool(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestFormatBool",
              "documentation": {
                "identifier": "TestFormatBool",
                "newPage": false,
                "searchKey": "strconv_test.TestFormatBool",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFormatBool(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFormatBool(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestAppendBool",
              "documentation": {
                "identifier": "TestAppendBool",
                "newPage": false,
                "searchKey": "strconv_test.TestAppendBool",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAppendBool(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAppendBool(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseComplex",
              "documentation": {
                "identifier": "TestParseComplex",
                "newPage": false,
                "searchKey": "strconv_test.TestParseComplex",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseComplex(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseComplex(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseComplexIncorrectBitSize",
              "documentation": {
                "identifier": "TestParseComplexIncorrectBitSize",
                "newPage": false,
                "searchKey": "strconv_test.TestParseComplexIncorrectBitSize",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseComplexIncorrectBitSize(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseComplexIncorrectBitSize(t *testing.T)\n```\n\nIssue 42297: allow ParseComplex(s, not_32_or_64) for legacy reasons \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#initAtof",
              "documentation": {
                "identifier": "initAtof",
                "newPage": false,
                "searchKey": "strconv_test.initAtof",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func initAtof()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc initAtof()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#initAtofOnce",
              "documentation": {
                "identifier": "initAtofOnce",
                "newPage": false,
                "searchKey": "strconv_test.initAtofOnce",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func initAtofOnce()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc initAtofOnce()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseFloatPrefix",
              "documentation": {
                "identifier": "TestParseFloatPrefix",
                "newPage": false,
                "searchKey": "strconv_test.TestParseFloatPrefix",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseFloatPrefix(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseFloatPrefix(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#testAtof",
              "documentation": {
                "identifier": "testAtof",
                "newPage": false,
                "searchKey": "strconv_test.testAtof",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func testAtof(t *testing.T, opt bool)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testAtof(t *testing.T, opt bool)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestAtof",
              "documentation": {
                "identifier": "TestAtof",
                "newPage": false,
                "searchKey": "strconv_test.TestAtof",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAtof(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAtof(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestAtofSlow",
              "documentation": {
                "identifier": "TestAtofSlow",
                "newPage": false,
                "searchKey": "strconv_test.TestAtofSlow",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAtofSlow(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAtofSlow(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestAtofRandom",
              "documentation": {
                "identifier": "TestAtofRandom",
                "newPage": false,
                "searchKey": "strconv_test.TestAtofRandom",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAtofRandom(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAtofRandom(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestRoundTrip",
              "documentation": {
                "identifier": "TestRoundTrip",
                "newPage": false,
                "searchKey": "strconv_test.TestRoundTrip",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestRoundTrip(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestRoundTrip(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestRoundTrip32",
              "documentation": {
                "identifier": "TestRoundTrip32",
                "newPage": false,
                "searchKey": "strconv_test.TestRoundTrip32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestRoundTrip32(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestRoundTrip32(t *testing.T)\n```\n\nTestRoundTrip32 tries a fraction of all finite positive float32 values. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseFloatIncorrectBitSize",
              "documentation": {
                "identifier": "TestParseFloatIncorrectBitSize",
                "newPage": false,
                "searchKey": "strconv_test.TestParseFloatIncorrectBitSize",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseFloatIncorrectBitSize(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseFloatIncorrectBitSize(t *testing.T)\n```\n\nIssue 42297: a lot of code in the wild accidentally calls ParseFloat(s, 10) or ParseFloat(s, 0), so allow bitSize values other than 32 and 64. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof64Decimal",
              "documentation": {
                "identifier": "BenchmarkAtof64Decimal",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof64Decimal",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof64Decimal(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof64Decimal(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof64Float",
              "documentation": {
                "identifier": "BenchmarkAtof64Float",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof64Float",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof64Float(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof64Float(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof64FloatExp",
              "documentation": {
                "identifier": "BenchmarkAtof64FloatExp",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof64FloatExp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof64FloatExp(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof64FloatExp(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof64Big",
              "documentation": {
                "identifier": "BenchmarkAtof64Big",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof64Big",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof64Big(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof64Big(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof64RandomBits",
              "documentation": {
                "identifier": "BenchmarkAtof64RandomBits",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof64RandomBits",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof64RandomBits(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof64RandomBits(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof64RandomFloats",
              "documentation": {
                "identifier": "BenchmarkAtof64RandomFloats",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof64RandomFloats",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof64RandomFloats(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof64RandomFloats(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof64RandomLongFloats",
              "documentation": {
                "identifier": "BenchmarkAtof64RandomLongFloats",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof64RandomLongFloats",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof64RandomLongFloats(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof64RandomLongFloats(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof32Decimal",
              "documentation": {
                "identifier": "BenchmarkAtof32Decimal",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof32Decimal",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof32Decimal(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof32Decimal(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof32Float",
              "documentation": {
                "identifier": "BenchmarkAtof32Float",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof32Float",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof32Float(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof32Float(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof32FloatExp",
              "documentation": {
                "identifier": "BenchmarkAtof32FloatExp",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof32FloatExp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof32FloatExp(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof32FloatExp(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof32Random",
              "documentation": {
                "identifier": "BenchmarkAtof32Random",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof32Random",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof32Random(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof32Random(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtof32RandomLong",
              "documentation": {
                "identifier": "BenchmarkAtof32RandomLong",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtof32RandomLong",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtof32RandomLong(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtof32RandomLong(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#init",
              "documentation": {
                "identifier": "init",
                "newPage": false,
                "searchKey": "strconv_test.init",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func init()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc init()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseUint32",
              "documentation": {
                "identifier": "TestParseUint32",
                "newPage": false,
                "searchKey": "strconv_test.TestParseUint32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseUint32(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseUint32(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseUint64",
              "documentation": {
                "identifier": "TestParseUint64",
                "newPage": false,
                "searchKey": "strconv_test.TestParseUint64",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseUint64(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseUint64(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseUint64Base",
              "documentation": {
                "identifier": "TestParseUint64Base",
                "newPage": false,
                "searchKey": "strconv_test.TestParseUint64Base",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseUint64Base(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseUint64Base(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseInt32",
              "documentation": {
                "identifier": "TestParseInt32",
                "newPage": false,
                "searchKey": "strconv_test.TestParseInt32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseInt32(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseInt32(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseInt64",
              "documentation": {
                "identifier": "TestParseInt64",
                "newPage": false,
                "searchKey": "strconv_test.TestParseInt64",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseInt64(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseInt64(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseInt64Base",
              "documentation": {
                "identifier": "TestParseInt64Base",
                "newPage": false,
                "searchKey": "strconv_test.TestParseInt64Base",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseInt64Base(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseInt64Base(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseUint",
              "documentation": {
                "identifier": "TestParseUint",
                "newPage": false,
                "searchKey": "strconv_test.TestParseUint",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseUint(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseUint(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseInt",
              "documentation": {
                "identifier": "TestParseInt",
                "newPage": false,
                "searchKey": "strconv_test.TestParseInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseInt(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseInt(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestAtoi",
              "documentation": {
                "identifier": "TestAtoi",
                "newPage": false,
                "searchKey": "strconv_test.TestAtoi",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAtoi(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAtoi(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#bitSizeErrStub",
              "documentation": {
                "identifier": "bitSizeErrStub",
                "newPage": false,
                "searchKey": "strconv_test.bitSizeErrStub",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func bitSizeErrStub(name string, bitSize int) error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc bitSizeErrStub(name string, bitSize int) error\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#baseErrStub",
              "documentation": {
                "identifier": "baseErrStub",
                "newPage": false,
                "searchKey": "strconv_test.baseErrStub",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func baseErrStub(name string, base int) error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc baseErrStub(name string, base int) error\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#noErrStub",
              "documentation": {
                "identifier": "noErrStub",
                "newPage": false,
                "searchKey": "strconv_test.noErrStub",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func noErrStub(name string, arg int) error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc noErrStub(name string, arg int) error\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#equalError",
              "documentation": {
                "identifier": "equalError",
                "newPage": false,
                "searchKey": "strconv_test.equalError",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func equalError(a, b error) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc equalError(a, b error) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseIntBitSize",
              "documentation": {
                "identifier": "TestParseIntBitSize",
                "newPage": false,
                "searchKey": "strconv_test.TestParseIntBitSize",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseIntBitSize(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseIntBitSize(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseUintBitSize",
              "documentation": {
                "identifier": "TestParseUintBitSize",
                "newPage": false,
                "searchKey": "strconv_test.TestParseUintBitSize",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseUintBitSize(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseUintBitSize(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseIntBase",
              "documentation": {
                "identifier": "TestParseIntBase",
                "newPage": false,
                "searchKey": "strconv_test.TestParseIntBase",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseIntBase(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseIntBase(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestParseUintBase",
              "documentation": {
                "identifier": "TestParseUintBase",
                "newPage": false,
                "searchKey": "strconv_test.TestParseUintBase",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestParseUintBase(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestParseUintBase(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestNumError",
              "documentation": {
                "identifier": "TestNumError",
                "newPage": false,
                "searchKey": "strconv_test.TestNumError",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNumError(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNumError(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestNumErrorUnwrap",
              "documentation": {
                "identifier": "TestNumErrorUnwrap",
                "newPage": false,
                "searchKey": "strconv_test.TestNumErrorUnwrap",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNumErrorUnwrap(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNumErrorUnwrap(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkParseInt",
              "documentation": {
                "identifier": "BenchmarkParseInt",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkParseInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkParseInt(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkParseInt(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#benchmarkParseInt",
              "documentation": {
                "identifier": "benchmarkParseInt",
                "newPage": false,
                "searchKey": "strconv_test.benchmarkParseInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func benchmarkParseInt(b *testing.B, neg int)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc benchmarkParseInt(b *testing.B, neg int)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAtoi",
              "documentation": {
                "identifier": "BenchmarkAtoi",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAtoi",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAtoi(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAtoi(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#benchmarkAtoi",
              "documentation": {
                "identifier": "benchmarkAtoi",
                "newPage": false,
                "searchKey": "strconv_test.benchmarkAtoi",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func benchmarkAtoi(b *testing.B, neg int)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc benchmarkAtoi(b *testing.B, neg int)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestFormatComplex",
              "documentation": {
                "identifier": "TestFormatComplex",
                "newPage": false,
                "searchKey": "strconv_test.TestFormatComplex",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFormatComplex(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFormatComplex(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestFormatComplexInvalidBitSize",
              "documentation": {
                "identifier": "TestFormatComplexInvalidBitSize",
                "newPage": false,
                "searchKey": "strconv_test.TestFormatComplexInvalidBitSize",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFormatComplexInvalidBitSize(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFormatComplexInvalidBitSize(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestDecimalShift",
              "documentation": {
                "identifier": "TestDecimalShift",
                "newPage": false,
                "searchKey": "strconv_test.TestDecimalShift",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDecimalShift(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDecimalShift(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestDecimalRound",
              "documentation": {
                "identifier": "TestDecimalRound",
                "newPage": false,
                "searchKey": "strconv_test.TestDecimalRound",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDecimalRound(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDecimalRound(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestDecimalRoundedInteger",
              "documentation": {
                "identifier": "TestDecimalRoundedInteger",
                "newPage": false,
                "searchKey": "strconv_test.TestDecimalRoundedInteger",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDecimalRoundedInteger(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDecimalRoundedInteger(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleAppendBool",
              "documentation": {
                "identifier": "ExampleAppendBool",
                "newPage": false,
                "searchKey": "strconv_test.ExampleAppendBool",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAppendBool()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAppendBool()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleAppendFloat",
              "documentation": {
                "identifier": "ExampleAppendFloat",
                "newPage": false,
                "searchKey": "strconv_test.ExampleAppendFloat",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAppendFloat()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAppendFloat()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleAppendInt",
              "documentation": {
                "identifier": "ExampleAppendInt",
                "newPage": false,
                "searchKey": "strconv_test.ExampleAppendInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAppendInt()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAppendInt()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleAppendQuote",
              "documentation": {
                "identifier": "ExampleAppendQuote",
                "newPage": false,
                "searchKey": "strconv_test.ExampleAppendQuote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAppendQuote()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAppendQuote()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleAppendQuoteRune",
              "documentation": {
                "identifier": "ExampleAppendQuoteRune",
                "newPage": false,
                "searchKey": "strconv_test.ExampleAppendQuoteRune",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAppendQuoteRune()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAppendQuoteRune()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleAppendQuoteRuneToASCII",
              "documentation": {
                "identifier": "ExampleAppendQuoteRuneToASCII",
                "newPage": false,
                "searchKey": "strconv_test.ExampleAppendQuoteRuneToASCII",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAppendQuoteRuneToASCII()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAppendQuoteRuneToASCII()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleAppendQuoteToASCII",
              "documentation": {
                "identifier": "ExampleAppendQuoteToASCII",
                "newPage": false,
                "searchKey": "strconv_test.ExampleAppendQuoteToASCII",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAppendQuoteToASCII()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAppendQuoteToASCII()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleAppendUint",
              "documentation": {
                "identifier": "ExampleAppendUint",
                "newPage": false,
                "searchKey": "strconv_test.ExampleAppendUint",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAppendUint()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAppendUint()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleAtoi",
              "documentation": {
                "identifier": "ExampleAtoi",
                "newPage": false,
                "searchKey": "strconv_test.ExampleAtoi",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleAtoi()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleAtoi()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleCanBackquote",
              "documentation": {
                "identifier": "ExampleCanBackquote",
                "newPage": false,
                "searchKey": "strconv_test.ExampleCanBackquote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleCanBackquote()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleCanBackquote()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleFormatBool",
              "documentation": {
                "identifier": "ExampleFormatBool",
                "newPage": false,
                "searchKey": "strconv_test.ExampleFormatBool",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleFormatBool()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleFormatBool()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleFormatFloat",
              "documentation": {
                "identifier": "ExampleFormatFloat",
                "newPage": false,
                "searchKey": "strconv_test.ExampleFormatFloat",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleFormatFloat()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleFormatFloat()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleFormatInt",
              "documentation": {
                "identifier": "ExampleFormatInt",
                "newPage": false,
                "searchKey": "strconv_test.ExampleFormatInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleFormatInt()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleFormatInt()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleFormatUint",
              "documentation": {
                "identifier": "ExampleFormatUint",
                "newPage": false,
                "searchKey": "strconv_test.ExampleFormatUint",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleFormatUint()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleFormatUint()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleIsGraphic",
              "documentation": {
                "identifier": "ExampleIsGraphic",
                "newPage": false,
                "searchKey": "strconv_test.ExampleIsGraphic",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleIsGraphic()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleIsGraphic()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleIsPrint",
              "documentation": {
                "identifier": "ExampleIsPrint",
                "newPage": false,
                "searchKey": "strconv_test.ExampleIsPrint",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleIsPrint()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleIsPrint()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleItoa",
              "documentation": {
                "identifier": "ExampleItoa",
                "newPage": false,
                "searchKey": "strconv_test.ExampleItoa",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleItoa()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleItoa()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleParseBool",
              "documentation": {
                "identifier": "ExampleParseBool",
                "newPage": false,
                "searchKey": "strconv_test.ExampleParseBool",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleParseBool()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleParseBool()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleParseFloat",
              "documentation": {
                "identifier": "ExampleParseFloat",
                "newPage": false,
                "searchKey": "strconv_test.ExampleParseFloat",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleParseFloat()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleParseFloat()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleParseInt",
              "documentation": {
                "identifier": "ExampleParseInt",
                "newPage": false,
                "searchKey": "strconv_test.ExampleParseInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleParseInt()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleParseInt()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleParseUint",
              "documentation": {
                "identifier": "ExampleParseUint",
                "newPage": false,
                "searchKey": "strconv_test.ExampleParseUint",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleParseUint()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleParseUint()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleQuote",
              "documentation": {
                "identifier": "ExampleQuote",
                "newPage": false,
                "searchKey": "strconv_test.ExampleQuote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleQuote()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleQuote()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleQuoteRune",
              "documentation": {
                "identifier": "ExampleQuoteRune",
                "newPage": false,
                "searchKey": "strconv_test.ExampleQuoteRune",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleQuoteRune()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleQuoteRune()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleQuoteRuneToASCII",
              "documentation": {
                "identifier": "ExampleQuoteRuneToASCII",
                "newPage": false,
                "searchKey": "strconv_test.ExampleQuoteRuneToASCII",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleQuoteRuneToASCII()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleQuoteRuneToASCII()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleQuoteRuneToGraphic",
              "documentation": {
                "identifier": "ExampleQuoteRuneToGraphic",
                "newPage": false,
                "searchKey": "strconv_test.ExampleQuoteRuneToGraphic",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleQuoteRuneToGraphic()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleQuoteRuneToGraphic()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleQuoteToASCII",
              "documentation": {
                "identifier": "ExampleQuoteToASCII",
                "newPage": false,
                "searchKey": "strconv_test.ExampleQuoteToASCII",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleQuoteToASCII()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleQuoteToASCII()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleQuoteToGraphic",
              "documentation": {
                "identifier": "ExampleQuoteToGraphic",
                "newPage": false,
                "searchKey": "strconv_test.ExampleQuoteToGraphic",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleQuoteToGraphic()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleQuoteToGraphic()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleUnquote",
              "documentation": {
                "identifier": "ExampleUnquote",
                "newPage": false,
                "searchKey": "strconv_test.ExampleUnquote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleUnquote()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleUnquote()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleUnquoteChar",
              "documentation": {
                "identifier": "ExampleUnquoteChar",
                "newPage": false,
                "searchKey": "strconv_test.ExampleUnquoteChar",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleUnquoteChar()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleUnquoteChar()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#ExampleNumError",
              "documentation": {
                "identifier": "ExampleNumError",
                "newPage": false,
                "searchKey": "strconv_test.ExampleNumError",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ExampleNumError()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ExampleNumError()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#pow2",
              "documentation": {
                "identifier": "pow2",
                "newPage": false,
                "searchKey": "strconv_test.pow2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func pow2(i int) float64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc pow2(i int) float64\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#myatof64",
              "documentation": {
                "identifier": "myatof64",
                "newPage": false,
                "searchKey": "strconv_test.myatof64",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func myatof64(s string) (f float64, ok bool)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc myatof64(s string) (f float64, ok bool)\n```\n\nWrapper around strconv.ParseFloat(x, 64).  Handles dddddp+ddd (binary exponent) itself, passes the rest on to strconv.ParseFloat. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#myatof32",
              "documentation": {
                "identifier": "myatof32",
                "newPage": false,
                "searchKey": "strconv_test.myatof32",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func myatof32(s string) (f float32, ok bool)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc myatof32(s string) (f float32, ok bool)\n```\n\nWrapper around strconv.ParseFloat(x, 32).  Handles dddddp+ddd (binary exponent) itself, passes the rest on to strconv.ParseFloat. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestFp",
              "documentation": {
                "identifier": "TestFp",
                "newPage": false,
                "searchKey": "strconv_test.TestFp",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFp(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFp(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#fdiv",
              "documentation": {
                "identifier": "fdiv",
                "newPage": false,
                "searchKey": "strconv_test.fdiv",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func fdiv(a, b float64) float64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc fdiv(a, b float64) float64\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestFtoa",
              "documentation": {
                "identifier": "TestFtoa",
                "newPage": false,
                "searchKey": "strconv_test.TestFtoa",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFtoa(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFtoa(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestFtoaPowersOfTwo",
              "documentation": {
                "identifier": "TestFtoaPowersOfTwo",
                "newPage": false,
                "searchKey": "strconv_test.TestFtoaPowersOfTwo",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFtoaPowersOfTwo(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFtoaPowersOfTwo(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestFtoaRandom",
              "documentation": {
                "identifier": "TestFtoaRandom",
                "newPage": false,
                "searchKey": "strconv_test.TestFtoaRandom",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFtoaRandom(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFtoaRandom(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestFormatFloatInvalidBitSize",
              "documentation": {
                "identifier": "TestFormatFloatInvalidBitSize",
                "newPage": false,
                "searchKey": "strconv_test.TestFormatFloatInvalidBitSize",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFormatFloatInvalidBitSize(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFormatFloatInvalidBitSize(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkFormatFloat",
              "documentation": {
                "identifier": "BenchmarkFormatFloat",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkFormatFloat",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFormatFloat(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFormatFloat(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAppendFloat",
              "documentation": {
                "identifier": "BenchmarkAppendFloat",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAppendFloat",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAppendFloat(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAppendFloat(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestMulByLog2Log10",
              "documentation": {
                "identifier": "TestMulByLog2Log10",
                "newPage": false,
                "searchKey": "strconv_test.TestMulByLog2Log10",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMulByLog2Log10(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMulByLog2Log10(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestMulByLog10Log2",
              "documentation": {
                "identifier": "TestMulByLog10Log2",
                "newPage": false,
                "searchKey": "strconv_test.TestMulByLog10Log2",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMulByLog10Log2(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMulByLog10Log2(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestItoa",
              "documentation": {
                "identifier": "TestItoa",
                "newPage": false,
                "searchKey": "strconv_test.TestItoa",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestItoa(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestItoa(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestUitoa",
              "documentation": {
                "identifier": "TestUitoa",
                "newPage": false,
                "searchKey": "strconv_test.TestUitoa",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestUitoa(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestUitoa(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestFormatUintVarlen",
              "documentation": {
                "identifier": "TestFormatUintVarlen",
                "newPage": false,
                "searchKey": "strconv_test.TestFormatUintVarlen",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFormatUintVarlen(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFormatUintVarlen(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkFormatInt",
              "documentation": {
                "identifier": "BenchmarkFormatInt",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkFormatInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFormatInt(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFormatInt(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAppendInt",
              "documentation": {
                "identifier": "BenchmarkAppendInt",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAppendInt",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAppendInt(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAppendInt(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkFormatUint",
              "documentation": {
                "identifier": "BenchmarkFormatUint",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkFormatUint",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFormatUint(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFormatUint(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAppendUint",
              "documentation": {
                "identifier": "BenchmarkAppendUint",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAppendUint",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAppendUint(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAppendUint(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkFormatIntSmall",
              "documentation": {
                "identifier": "BenchmarkFormatIntSmall",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkFormatIntSmall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkFormatIntSmall(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkFormatIntSmall(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAppendIntSmall",
              "documentation": {
                "identifier": "BenchmarkAppendIntSmall",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAppendIntSmall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAppendIntSmall(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAppendIntSmall(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAppendUintVarlen",
              "documentation": {
                "identifier": "BenchmarkAppendUintVarlen",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAppendUintVarlen",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAppendUintVarlen(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAppendUintVarlen(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestIsPrint",
              "documentation": {
                "identifier": "TestIsPrint",
                "newPage": false,
                "searchKey": "strconv_test.TestIsPrint",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestIsPrint(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestIsPrint(t *testing.T)\n```\n\nVerify that our IsPrint agrees with unicode.IsPrint. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestIsGraphic",
              "documentation": {
                "identifier": "TestIsGraphic",
                "newPage": false,
                "searchKey": "strconv_test.TestIsGraphic",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestIsGraphic(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestIsGraphic(t *testing.T)\n```\n\nVerify that our IsGraphic agrees with unicode.IsGraphic. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestQuote",
              "documentation": {
                "identifier": "TestQuote",
                "newPage": false,
                "searchKey": "strconv_test.TestQuote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestQuote(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestQuote(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestQuoteToASCII",
              "documentation": {
                "identifier": "TestQuoteToASCII",
                "newPage": false,
                "searchKey": "strconv_test.TestQuoteToASCII",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestQuoteToASCII(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestQuoteToASCII(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestQuoteToGraphic",
              "documentation": {
                "identifier": "TestQuoteToGraphic",
                "newPage": false,
                "searchKey": "strconv_test.TestQuoteToGraphic",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestQuoteToGraphic(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestQuoteToGraphic(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkQuote",
              "documentation": {
                "identifier": "BenchmarkQuote",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkQuote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkQuote(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkQuote(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkQuoteRune",
              "documentation": {
                "identifier": "BenchmarkQuoteRune",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkQuoteRune",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkQuoteRune(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkQuoteRune(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAppendQuote",
              "documentation": {
                "identifier": "BenchmarkAppendQuote",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAppendQuote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAppendQuote(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAppendQuote(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkAppendQuoteRune",
              "documentation": {
                "identifier": "BenchmarkAppendQuoteRune",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkAppendQuoteRune",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkAppendQuoteRune(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkAppendQuoteRune(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestQuoteRune",
              "documentation": {
                "identifier": "TestQuoteRune",
                "newPage": false,
                "searchKey": "strconv_test.TestQuoteRune",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestQuoteRune(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestQuoteRune(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestQuoteRuneToASCII",
              "documentation": {
                "identifier": "TestQuoteRuneToASCII",
                "newPage": false,
                "searchKey": "strconv_test.TestQuoteRuneToASCII",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestQuoteRuneToASCII(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestQuoteRuneToASCII(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestQuoteRuneToGraphic",
              "documentation": {
                "identifier": "TestQuoteRuneToGraphic",
                "newPage": false,
                "searchKey": "strconv_test.TestQuoteRuneToGraphic",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestQuoteRuneToGraphic(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestQuoteRuneToGraphic(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestCanBackquote",
              "documentation": {
                "identifier": "TestCanBackquote",
                "newPage": false,
                "searchKey": "strconv_test.TestCanBackquote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCanBackquote(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCanBackquote(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestUnquote",
              "documentation": {
                "identifier": "TestUnquote",
                "newPage": false,
                "searchKey": "strconv_test.TestUnquote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestUnquote(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestUnquote(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestUnquoteInvalidUTF8",
              "documentation": {
                "identifier": "TestUnquoteInvalidUTF8",
                "newPage": false,
                "searchKey": "strconv_test.TestUnquoteInvalidUTF8",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestUnquoteInvalidUTF8(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestUnquoteInvalidUTF8(t *testing.T)\n```\n\nIssue 23685: invalid UTF-8 should not go through the fast path. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#testUnquote",
              "documentation": {
                "identifier": "testUnquote",
                "newPage": false,
                "searchKey": "strconv_test.testUnquote",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func testUnquote(t *testing.T, in, want string, wantErr error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testUnquote(t *testing.T, in, want string, wantErr error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkUnquoteEasy",
              "documentation": {
                "identifier": "BenchmarkUnquoteEasy",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkUnquoteEasy",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkUnquoteEasy(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkUnquoteEasy(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#BenchmarkUnquoteHard",
              "documentation": {
                "identifier": "BenchmarkUnquoteHard",
                "newPage": false,
                "searchKey": "strconv_test.BenchmarkUnquoteHard",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func BenchmarkUnquoteHard(b *testing.B)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc BenchmarkUnquoteHard(b *testing.B)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestCountMallocs",
              "documentation": {
                "identifier": "TestCountMallocs",
                "newPage": false,
                "searchKey": "strconv_test.TestCountMallocs",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCountMallocs(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCountMallocs(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/strconv_test#TestErrorPrefixes",
              "documentation": {
                "identifier": "TestErrorPrefixes",
                "newPage": false,
                "searchKey": "strconv_test.TestErrorPrefixes",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestErrorPrefixes(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestErrorPrefixes(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
