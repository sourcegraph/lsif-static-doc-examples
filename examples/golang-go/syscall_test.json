{
  "pathID": "/syscall_test",
  "documentation": {
    "identifier": "syscall_test",
    "newPage": true,
    "searchKey": "syscall_test",
    "tags": []
  },
  "label": {
    "kind": "plaintext",
    "value": "Package syscall_test"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/syscall_test#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/syscall_test#MNT_WAIT",
              "documentation": {
                "identifier": "MNT_WAIT",
                "newPage": false,
                "searchKey": "syscall_test.MNT_WAIT",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "const MNT_WAIT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst MNT_WAIT = 1\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#MNT_NOWAIT",
              "documentation": {
                "identifier": "MNT_NOWAIT",
                "newPage": false,
                "searchKey": "syscall_test.MNT_NOWAIT",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "const MNT_NOWAIT"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst MNT_NOWAIT = 2\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/syscall_test#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/syscall_test#command",
              "documentation": {
                "identifier": "command",
                "newPage": false,
                "searchKey": "syscall_test.command",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type command struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype command struct {\n\tpipe io.WriteCloser\n\tproc *exec.Cmd\n\ttest *testing.T\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/syscall_test#create",
                    "documentation": {
                      "identifier": "create",
                      "newPage": false,
                      "searchKey": "syscall_test.create",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func create(t *testing.T) *command"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc create(t *testing.T) *command\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/syscall_test#command.Info",
                    "documentation": {
                      "identifier": "command.Info",
                      "newPage": false,
                      "searchKey": "syscall_test.command.Info",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *command) Info() (pid, pgrp int)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *command) Info() (pid, pgrp int)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/syscall_test#command.Start",
                    "documentation": {
                      "identifier": "command.Start",
                      "newPage": false,
                      "searchKey": "syscall_test.command.Start",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *command) Start()"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *command) Start()\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/syscall_test#command.Stop",
                    "documentation": {
                      "identifier": "command.Stop",
                      "newPage": false,
                      "searchKey": "syscall_test.command.Stop",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *command) Stop()"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *command) Stop()\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/syscall_test#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/syscall_test#TestDirent",
              "documentation": {
                "identifier": "TestDirent",
                "newPage": false,
                "searchKey": "syscall_test.TestDirent",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDirent(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDirent(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestDirentRepeat",
              "documentation": {
                "identifier": "TestDirentRepeat",
                "newPage": false,
                "searchKey": "syscall_test.TestDirentRepeat",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDirentRepeat(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDirentRepeat(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#parent",
              "documentation": {
                "identifier": "parent",
                "newPage": false,
                "searchKey": "syscall_test.parent",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func parent() (pid, pgrp int)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc parent() (pid, pgrp int)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestZeroSysProcAttr",
              "documentation": {
                "identifier": "TestZeroSysProcAttr",
                "newPage": false,
                "searchKey": "syscall_test.TestZeroSysProcAttr",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestZeroSysProcAttr(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestZeroSysProcAttr(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestSetpgid",
              "documentation": {
                "identifier": "TestSetpgid",
                "newPage": false,
                "searchKey": "syscall_test.TestSetpgid",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSetpgid(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSetpgid(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestPgid",
              "documentation": {
                "identifier": "TestPgid",
                "newPage": false,
                "searchKey": "syscall_test.TestPgid",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestPgid(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestPgid(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestForeground",
              "documentation": {
                "identifier": "TestForeground",
                "newPage": false,
                "searchKey": "syscall_test.TestForeground",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestForeground(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestForeground(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestForegroundSignal",
              "documentation": {
                "identifier": "TestForegroundSignal",
                "newPage": false,
                "searchKey": "syscall_test.TestForegroundSignal",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestForegroundSignal(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestForegroundSignal(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestInvalidExec",
              "documentation": {
                "identifier": "TestInvalidExec",
                "newPage": false,
                "searchKey": "syscall_test.TestInvalidExec",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestInvalidExec(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestInvalidExec(t *testing.T)\n```\n\nTest a couple of cases that SysProcAttr can't handle. Issue 29458. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestExec",
              "documentation": {
                "identifier": "TestExec",
                "newPage": false,
                "searchKey": "syscall_test.TestExec",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestExec(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestExec(t *testing.T)\n```\n\nTestExec is for issue #41702. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestExecHelper",
              "documentation": {
                "identifier": "TestExecHelper",
                "newPage": false,
                "searchKey": "syscall_test.TestExecHelper",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestExecHelper(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestExecHelper(t *testing.T)\n```\n\nTestExecHelper is used by TestExec. It does nothing by itself. In testing on macOS 10.14, this used to fail with \"signal: illegal instruction\" more than half the time. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestGetdirentries",
              "documentation": {
                "identifier": "TestGetdirentries",
                "newPage": false,
                "searchKey": "syscall_test.TestGetdirentries",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestGetdirentries(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestGetdirentries(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#testGetdirentries",
              "documentation": {
                "identifier": "testGetdirentries",
                "newPage": false,
                "searchKey": "syscall_test.testGetdirentries",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func testGetdirentries(t *testing.T, count int)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testGetdirentries(t *testing.T, count int)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestMmap",
              "documentation": {
                "identifier": "TestMmap",
                "newPage": false,
                "searchKey": "syscall_test.TestMmap",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMmap(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMmap(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestGetfsstat",
              "documentation": {
                "identifier": "TestGetfsstat",
                "newPage": false,
                "searchKey": "syscall_test.TestGetfsstat",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestGetfsstat(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestGetfsstat(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestExecPtrace",
              "documentation": {
                "identifier": "TestExecPtrace",
                "newPage": false,
                "searchKey": "syscall_test.TestExecPtrace",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestExecPtrace(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestExecPtrace(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#testSetGetenv",
              "documentation": {
                "identifier": "testSetGetenv",
                "newPage": false,
                "searchKey": "syscall_test.testSetGetenv",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func testSetGetenv(t *testing.T, key, value string)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testSetGetenv(t *testing.T, key, value string)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestEnv",
              "documentation": {
                "identifier": "TestEnv",
                "newPage": false,
                "searchKey": "syscall_test.TestEnv",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestEnv(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestEnv(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestExecErrPermutedFds",
              "documentation": {
                "identifier": "TestExecErrPermutedFds",
                "newPage": false,
                "searchKey": "syscall_test.TestExecErrPermutedFds",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestExecErrPermutedFds(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestExecErrPermutedFds(t *testing.T)\n```\n\nCheck that permuting child process fds doesn't interfere with reporting of fork/exec status. See Issue 14979. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestGettimeofday",
              "documentation": {
                "identifier": "TestGettimeofday",
                "newPage": false,
                "searchKey": "syscall_test.TestGettimeofday",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestGettimeofday(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestGettimeofday(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#_",
              "documentation": {
                "identifier": "_",
                "newPage": false,
                "searchKey": "syscall_test._",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func _()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc _()\n```\n\nTests that below functions, structures and constants are consistent on all Unix-like systems. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestFcntlFlock",
              "documentation": {
                "identifier": "TestFcntlFlock",
                "newPage": false,
                "searchKey": "syscall_test.TestFcntlFlock",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestFcntlFlock(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestFcntlFlock(t *testing.T)\n```\n\nTestFcntlFlock tests whether the file locking structure matches the calling convention of each kernel. On some Linux systems, glibc uses another set of values for the commands and translates them to the correct value that the kernel expects just before the actual fcntl syscall. As Go uses raw syscalls directly, it must use the real value, not the glibc value. Thus this test also verifies that the Flock_t structure can be roundtripped with F_SETLK and F_GETLK. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestPassFD",
              "documentation": {
                "identifier": "TestPassFD",
                "newPage": false,
                "searchKey": "syscall_test.TestPassFD",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestPassFD(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestPassFD(t *testing.T)\n```\n\nTestPassFD tests passing a file descriptor over a Unix socket. \n\nThis test involved both a parent and child process. The parent process is invoked as a normal test, with \"go test\", which then runs the child process by running the current test binary with args \"-test.run=^TestPassFD$\" and an environment variable used to signal that the test should become the child process instead. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#passFDChild",
              "documentation": {
                "identifier": "passFDChild",
                "newPage": false,
                "searchKey": "syscall_test.passFDChild",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func passFDChild()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc passFDChild()\n```\n\npassFDChild is the child process used by TestPassFD. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestUnixRightsRoundtrip",
              "documentation": {
                "identifier": "TestUnixRightsRoundtrip",
                "newPage": false,
                "searchKey": "syscall_test.TestUnixRightsRoundtrip",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestUnixRightsRoundtrip(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestUnixRightsRoundtrip(t *testing.T)\n```\n\nTestUnixRightsRoundtrip tests that UnixRights, ParseSocketControlMessage, and ParseUnixRights are able to successfully round-trip lists of file descriptors. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestRlimit",
              "documentation": {
                "identifier": "TestRlimit",
                "newPage": false,
                "searchKey": "syscall_test.TestRlimit",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestRlimit(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestRlimit(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestSeekFailure",
              "documentation": {
                "identifier": "TestSeekFailure",
                "newPage": false,
                "searchKey": "syscall_test.TestSeekFailure",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSeekFailure(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSeekFailure(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestSetsockoptString",
              "documentation": {
                "identifier": "TestSetsockoptString",
                "newPage": false,
                "searchKey": "syscall_test.TestSetsockoptString",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestSetsockoptString(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestSetsockoptString(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/syscall_test#TestENFILETemporary",
              "documentation": {
                "identifier": "TestENFILETemporary",
                "newPage": false,
                "searchKey": "syscall_test.TestENFILETemporary",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestENFILETemporary(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestENFILETemporary(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
