{
  "pathID": "/internal/extsvc/auth",
  "documentation": {
    "identifier": "auth",
    "newPage": true,
    "searchKey": "internal/extsvc/auth",
    "tags": [
      "private",
      "package"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package auth"
  },
  "detail": {
    "kind": "markdown",
    "value": "Package auth provides the Authenticator interface, which can be used to add authentication data to an outbound HTTP request, and concrete implementations for the commonly used authentication types. \n\n"
  },
  "children": [
    {
      "node": {
        "pathID": "/internal/extsvc/auth#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/extsvc/auth#Authenticator",
              "documentation": {
                "identifier": "Authenticator",
                "newPage": false,
                "searchKey": "auth.Authenticator",
                "tags": [
                  "interface"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Authenticator interface"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Authenticator interface {\n\t// Authenticate mutates the given request to include authentication\n\t// representing this value. In general, this will take the form of adding\n\t// headers.\n\tAuthenticate(*http.Request) error\n\n\t// Hash uniquely identifies the authenticator for use in internal caching.\n\t// This value must use a cryptographic hash (for example, SHA-256).\n\tHash() string\n}\n```\n\nAuthenticator instances mutate an outbound request to add whatever headers or other modifications are required to authenticate using the concrete type represented by the Authenticator. (For example, an OAuth token, or a username and password combination.) \n\nNote that, while Authenticate provides generic functionality, the concrete types should be careful to provide some method for external services to retrieve the values within so that unusual authentication flows can be supported. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/extsvc/auth#AuthenticatorWithSSH",
              "documentation": {
                "identifier": "AuthenticatorWithSSH",
                "newPage": false,
                "searchKey": "auth.AuthenticatorWithSSH",
                "tags": [
                  "interface"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type AuthenticatorWithSSH interface"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype AuthenticatorWithSSH interface {\n\tAuthenticator\n\n\t// SSHPrivateKey returns an RSA private key, and the passphrase securing it.\n\tSSHPrivateKey() (privateKey string, passphrase string)\n\t// SSHPublicKey returns the public key counterpart to the private key in OpenSSH\n\t// authorized_keys file format. This is usually accepted by code hosts to\n\t// allow access to git over SSH.\n\tSSHPublicKey() (publicKey string)\n}\n```\n\nAuthenticatorWithSSH wraps the Authenticator interface and augments it by additional methods to authenticate over SSH with this credential, in addition to the enclosed Authenticator. This can be used for a credential that needs to access an HTTP API, and git over SSH, for example. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/extsvc/auth#BasicAuth",
              "documentation": {
                "identifier": "BasicAuth",
                "newPage": false,
                "searchKey": "auth.BasicAuth",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type BasicAuth struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype BasicAuth struct {\n\tUsername string\n\tPassword string\n}\n```\n\nBasicAuth implements HTTP Basic Authentication for extsvc clients. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#BasicAuth.Authenticate",
                    "documentation": {
                      "identifier": "BasicAuth.Authenticate",
                      "newPage": false,
                      "searchKey": "auth.BasicAuth.Authenticate",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (basic *BasicAuth) Authenticate(req *http.Request) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (basic *BasicAuth) Authenticate(req *http.Request) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#BasicAuth.Hash",
                    "documentation": {
                      "identifier": "BasicAuth.Hash",
                      "newPage": false,
                      "searchKey": "auth.BasicAuth.Hash",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (basic *BasicAuth) Hash() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (basic *BasicAuth) Hash() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/internal/extsvc/auth#BasicAuthWithSSH",
              "documentation": {
                "identifier": "BasicAuthWithSSH",
                "newPage": false,
                "searchKey": "auth.BasicAuthWithSSH",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type BasicAuthWithSSH struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype BasicAuthWithSSH struct {\n\tBasicAuth\n\n\tPrivateKey string\n\tPublicKey  string\n\tPassphrase string\n}\n```\n\nBasicAuthWithSSH implements HTTP Basic Authentication for extsvc clients and holds an additional RSA keypair. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#BasicAuthWithSSH.Hash",
                    "documentation": {
                      "identifier": "BasicAuthWithSSH.Hash",
                      "newPage": false,
                      "searchKey": "auth.BasicAuthWithSSH.Hash",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (basic *BasicAuthWithSSH) Hash() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (basic *BasicAuthWithSSH) Hash() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#BasicAuthWithSSH.SSHPrivateKey",
                    "documentation": {
                      "identifier": "BasicAuthWithSSH.SSHPrivateKey",
                      "newPage": false,
                      "searchKey": "auth.BasicAuthWithSSH.SSHPrivateKey",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (basic *BasicAuthWithSSH) SSHPrivateKey() (privateKey, passphrase string)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (basic *BasicAuthWithSSH) SSHPrivateKey() (privateKey, passphrase string)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#BasicAuthWithSSH.SSHPublicKey",
                    "documentation": {
                      "identifier": "BasicAuthWithSSH.SSHPublicKey",
                      "newPage": false,
                      "searchKey": "auth.BasicAuthWithSSH.SSHPublicKey",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (basic *BasicAuthWithSSH) SSHPublicKey() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (basic *BasicAuthWithSSH) SSHPublicKey() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/internal/extsvc/auth#OAuthBearerToken",
              "documentation": {
                "identifier": "OAuthBearerToken",
                "newPage": false,
                "searchKey": "auth.OAuthBearerToken",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type OAuthBearerToken struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype OAuthBearerToken struct {\n\tToken string\n}\n```\n\nOAuthBearerToken implements OAuth Bearer Token authentication for extsvc clients. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#OAuthBearerToken.Authenticate",
                    "documentation": {
                      "identifier": "OAuthBearerToken.Authenticate",
                      "newPage": false,
                      "searchKey": "auth.OAuthBearerToken.Authenticate",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (token *OAuthBearerToken) Authenticate(req *http.Request) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (token *OAuthBearerToken) Authenticate(req *http.Request) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#OAuthBearerToken.Hash",
                    "documentation": {
                      "identifier": "OAuthBearerToken.Hash",
                      "newPage": false,
                      "searchKey": "auth.OAuthBearerToken.Hash",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (token *OAuthBearerToken) Hash() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (token *OAuthBearerToken) Hash() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/internal/extsvc/auth#OAuthBearerTokenWithSSH",
              "documentation": {
                "identifier": "OAuthBearerTokenWithSSH",
                "newPage": false,
                "searchKey": "auth.OAuthBearerTokenWithSSH",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type OAuthBearerTokenWithSSH struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype OAuthBearerTokenWithSSH struct {\n\tOAuthBearerToken\n\n\tPrivateKey string\n\tPublicKey  string\n\tPassphrase string\n}\n```\n\nOAuthBearerTokenWithSSH implements OAuth Bearer Token authentication for extsvc clients and holds an additional RSA keypair. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#OAuthBearerTokenWithSSH.Hash",
                    "documentation": {
                      "identifier": "OAuthBearerTokenWithSSH.Hash",
                      "newPage": false,
                      "searchKey": "auth.OAuthBearerTokenWithSSH.Hash",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (token *OAuthBearerTokenWithSSH) Hash() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (token *OAuthBearerTokenWithSSH) Hash() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#OAuthBearerTokenWithSSH.SSHPrivateKey",
                    "documentation": {
                      "identifier": "OAuthBearerTokenWithSSH.SSHPrivateKey",
                      "newPage": false,
                      "searchKey": "auth.OAuthBearerTokenWithSSH.SSHPrivateKey",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (token *OAuthBearerTokenWithSSH) SSHPrivateKey() (privateKey, passphrase string)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (token *OAuthBearerTokenWithSSH) SSHPrivateKey() (privateKey, passphrase string)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#OAuthBearerTokenWithSSH.SSHPublicKey",
                    "documentation": {
                      "identifier": "OAuthBearerTokenWithSSH.SSHPublicKey",
                      "newPage": false,
                      "searchKey": "auth.OAuthBearerTokenWithSSH.SSHPublicKey",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (token *OAuthBearerTokenWithSSH) SSHPublicKey() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (token *OAuthBearerTokenWithSSH) SSHPublicKey() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/internal/extsvc/auth#OAuthClient",
              "documentation": {
                "identifier": "OAuthClient",
                "newPage": false,
                "searchKey": "auth.OAuthClient",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type OAuthClient struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype OAuthClient struct{ *oauth.Client }\n```\n\nOAuthClient implements OAuth 1 signature authentication for extsvc implementations. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#newOAuthClient",
                    "documentation": {
                      "identifier": "newOAuthClient",
                      "newPage": false,
                      "searchKey": "auth.newOAuthClient",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func newOAuthClient(token, secret string) *OAuthClient"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc newOAuthClient(token, secret string) *OAuthClient\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#OAuthClient.Authenticate",
                    "documentation": {
                      "identifier": "OAuthClient.Authenticate",
                      "newPage": false,
                      "searchKey": "auth.OAuthClient.Authenticate",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *OAuthClient) Authenticate(req *http.Request) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *OAuthClient) Authenticate(req *http.Request) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/extsvc/auth#OAuthClient.Hash",
                    "documentation": {
                      "identifier": "OAuthClient.Hash",
                      "newPage": false,
                      "searchKey": "auth.OAuthClient.Hash",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *OAuthClient) Hash() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *OAuthClient) Hash() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/internal/extsvc/auth#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/extsvc/auth#TestBasicAuth",
              "documentation": {
                "identifier": "TestBasicAuth",
                "newPage": false,
                "searchKey": "auth.TestBasicAuth",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBasicAuth(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBasicAuth(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/extsvc/auth#TestOAuthBearerToken",
              "documentation": {
                "identifier": "TestOAuthBearerToken",
                "newPage": false,
                "searchKey": "auth.TestOAuthBearerToken",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestOAuthBearerToken(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestOAuthBearerToken(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/extsvc/auth#TestOAuthClient",
              "documentation": {
                "identifier": "TestOAuthClient",
                "newPage": false,
                "searchKey": "auth.TestOAuthClient",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestOAuthClient(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestOAuthClient(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
