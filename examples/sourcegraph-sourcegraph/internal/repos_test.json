{
  "pathID": "/internal/repos_test",
  "documentation": {
    "identifier": "repos_test",
    "newPage": true,
    "searchKey": "internal/repos_test",
    "tags": [
      "package",
      "private"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package repos_test"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/internal/repos_test#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/repos_test#dsn",
              "documentation": {
                "identifier": "dsn",
                "newPage": false,
                "searchKey": "repos_test.dsn",
                "tags": [
                  "variable",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var dsn"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar dsn = flag.String(\"dsn\", \"\", \"Database connection string to use in integration tests\")\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#errRollback",
              "documentation": {
                "identifier": "errRollback",
                "newPage": false,
                "searchKey": "repos_test.errRollback",
                "tags": [
                  "variable",
                  "interface",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var errRollback"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar errRollback = errors.New(\"tx: rollback\")\n```\n\nThis error is passed to txstore.Done in order to always roll-back the transaction a test case executes in. This is meant to ensure each test case has a clean slate. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/internal/repos_test#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/repos_test#fakeRepoSyncHandler",
              "documentation": {
                "identifier": "fakeRepoSyncHandler",
                "newPage": false,
                "searchKey": "repos_test.fakeRepoSyncHandler",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type fakeRepoSyncHandler struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype fakeRepoSyncHandler struct {\n\tjobChan chan *repos.SyncJob\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/repos_test#fakeRepoSyncHandler.Handle",
                    "documentation": {
                      "identifier": "fakeRepoSyncHandler.Handle",
                      "newPage": false,
                      "searchKey": "repos_test.fakeRepoSyncHandler.Handle",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h *fakeRepoSyncHandler) Handle(ctx context.Context, tx dbws.Store, record workerutil.Record) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h *fakeRepoSyncHandler) Handle(ctx context.Context, tx dbws.Store, record workerutil.Record) error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/internal/repos_test#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/repos_test#TestDiff",
              "documentation": {
                "identifier": "TestDiff",
                "newPage": false,
                "searchKey": "repos_test.TestDiff",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDiff(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDiff(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#TestIntegration",
              "documentation": {
                "identifier": "TestIntegration",
                "newPage": false,
                "searchKey": "repos_test.TestIntegration",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestIntegration(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestIntegration(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#assertDeletedRepoCount",
              "documentation": {
                "identifier": "assertDeletedRepoCount",
                "newPage": false,
                "searchKey": "repos_test.assertDeletedRepoCount",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func assertDeletedRepoCount(ctx context.Context, t *testing.T, db *sql.DB, want int)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc assertDeletedRepoCount(ctx context.Context, t *testing.T, db *sql.DB, want int)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#assertSourceCount",
              "documentation": {
                "identifier": "assertSourceCount",
                "newPage": false,
                "searchKey": "repos_test.assertSourceCount",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func assertSourceCount(ctx context.Context, t *testing.T, db *sql.DB, want int)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc assertSourceCount(ctx context.Context, t *testing.T, db *sql.DB, want int)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#createExternalServices",
              "documentation": {
                "identifier": "createExternalServices",
                "newPage": false,
                "searchKey": "repos_test.createExternalServices",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func createExternalServices(t *testing.T, store *repos.Store) map[string]*types.ExternalService"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc createExternalServices(t *testing.T, store *repos.Store) map[string]*types.ExternalService\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#generateExternalServices",
              "documentation": {
                "identifier": "generateExternalServices",
                "newPage": false,
                "searchKey": "repos_test.generateExternalServices",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func generateExternalServices(n int, base ...*types.ExternalService) types.ExternalServices"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc generateExternalServices(n int, base ...*types.ExternalService) types.ExternalServices\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#hasID",
              "documentation": {
                "identifier": "hasID",
                "newPage": false,
                "searchKey": "repos_test.hasID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func hasID(ids ...api.RepoID) func(r *types.Repo) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc hasID(ids ...api.RepoID) func(r *types.Repo) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#hasNoID",
              "documentation": {
                "identifier": "hasNoID",
                "newPage": false,
                "searchKey": "repos_test.hasNoID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func hasNoID(r *types.Repo) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc hasNoID(r *types.Repo) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#insertTestUser",
              "documentation": {
                "identifier": "insertTestUser",
                "newPage": false,
                "searchKey": "repos_test.insertTestUser",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func insertTestUser(t *testing.T, db *sql.DB) (userID int32)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc insertTestUser(t *testing.T, db *sql.DB) (userID int32)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#mkExternalServices",
              "documentation": {
                "identifier": "mkExternalServices",
                "newPage": false,
                "searchKey": "repos_test.mkExternalServices",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func mkExternalServices(now time.Time) types.ExternalServices"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc mkExternalServices(now time.Time) types.ExternalServices\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#mkRepos",
              "documentation": {
                "identifier": "mkRepos",
                "newPage": false,
                "searchKey": "repos_test.mkRepos",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func mkRepos(n int, base ...*types.Repo) types.Repos"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc mkRepos(n int, base ...*types.Repo) types.Repos\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testConflictingSyncers",
              "documentation": {
                "identifier": "testConflictingSyncers",
                "newPage": false,
                "searchKey": "repos_test.testConflictingSyncers",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testConflictingSyncers(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testConflictingSyncers(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testDeleteExternalService",
              "documentation": {
                "identifier": "testDeleteExternalService",
                "newPage": false,
                "searchKey": "repos_test.testDeleteExternalService",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testDeleteExternalService(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testDeleteExternalService(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testNameOnConflictDiscardNew",
              "documentation": {
                "identifier": "testNameOnConflictDiscardNew",
                "newPage": false,
                "searchKey": "repos_test.testNameOnConflictDiscardNew",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testNameOnConflictDiscardNew(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testNameOnConflictDiscardNew(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testNameOnConflictDiscardOld",
              "documentation": {
                "identifier": "testNameOnConflictDiscardOld",
                "newPage": false,
                "searchKey": "repos_test.testNameOnConflictDiscardOld",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testNameOnConflictDiscardOld(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testNameOnConflictDiscardOld(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testNameOnConflictOnRename",
              "documentation": {
                "identifier": "testNameOnConflictOnRename",
                "newPage": false,
                "searchKey": "repos_test.testNameOnConflictOnRename",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testNameOnConflictOnRename(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testNameOnConflictOnRename(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testOrphanedRepo",
              "documentation": {
                "identifier": "testOrphanedRepo",
                "newPage": false,
                "searchKey": "repos_test.testOrphanedRepo",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testOrphanedRepo(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testOrphanedRepo(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testStoreCountNotClonedRepos",
              "documentation": {
                "identifier": "testStoreCountNotClonedRepos",
                "newPage": false,
                "searchKey": "repos_test.testStoreCountNotClonedRepos",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testStoreCountNotClonedRepos(t *testing.T, store *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testStoreCountNotClonedRepos(t *testing.T, store *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testStoreEnqueueSingleSyncJob",
              "documentation": {
                "identifier": "testStoreEnqueueSingleSyncJob",
                "newPage": false,
                "searchKey": "repos_test.testStoreEnqueueSingleSyncJob",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testStoreEnqueueSingleSyncJob(db *sql.DB) func(t *testing.T, store *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testStoreEnqueueSingleSyncJob(db *sql.DB) func(t *testing.T, store *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testStoreEnqueueSyncJobs",
              "documentation": {
                "identifier": "testStoreEnqueueSyncJobs",
                "newPage": false,
                "searchKey": "repos_test.testStoreEnqueueSyncJobs",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testStoreEnqueueSyncJobs(db *sql.DB, store *repos.Store) func(t *testing.T, store *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testStoreEnqueueSyncJobs(db *sql.DB, store *repos.Store) func(t *testing.T, store *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testStoreListExternalRepoSpecs",
              "documentation": {
                "identifier": "testStoreListExternalRepoSpecs",
                "newPage": false,
                "searchKey": "repos_test.testStoreListExternalRepoSpecs",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testStoreListExternalRepoSpecs(db *sql.DB) func(t *testing.T, repoStore *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testStoreListExternalRepoSpecs(db *sql.DB) func(t *testing.T, repoStore *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testStoreSetClonedRepos",
              "documentation": {
                "identifier": "testStoreSetClonedRepos",
                "newPage": false,
                "searchKey": "repos_test.testStoreSetClonedRepos",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testStoreSetClonedRepos(t *testing.T, store *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testStoreSetClonedRepos(t *testing.T, store *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testStoreUpsertRepos",
              "documentation": {
                "identifier": "testStoreUpsertRepos",
                "newPage": false,
                "searchKey": "repos_test.testStoreUpsertRepos",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testStoreUpsertRepos(t *testing.T, store *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testStoreUpsertRepos(t *testing.T, store *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testStoreUpsertSources",
              "documentation": {
                "identifier": "testStoreUpsertSources",
                "newPage": false,
                "searchKey": "repos_test.testStoreUpsertSources",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testStoreUpsertSources(t *testing.T, store *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testStoreUpsertSources(t *testing.T, store *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testSyncRateLimiters",
              "documentation": {
                "identifier": "testSyncRateLimiters",
                "newPage": false,
                "searchKey": "repos_test.testSyncRateLimiters",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testSyncRateLimiters(t *testing.T, store *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testSyncRateLimiters(t *testing.T, store *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testSyncRepo",
              "documentation": {
                "identifier": "testSyncRepo",
                "newPage": false,
                "searchKey": "repos_test.testSyncRepo",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testSyncRepo(t *testing.T, s *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testSyncRepo(t *testing.T, s *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testSyncRepoMaintainsOtherSources",
              "documentation": {
                "identifier": "testSyncRepoMaintainsOtherSources",
                "newPage": false,
                "searchKey": "repos_test.testSyncRepoMaintainsOtherSources",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testSyncRepoMaintainsOtherSources(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testSyncRepoMaintainsOtherSources(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\nTest that sync repo does not clear out any other repo relationships \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testSyncRun",
              "documentation": {
                "identifier": "testSyncRun",
                "newPage": false,
                "searchKey": "repos_test.testSyncRun",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testSyncRun(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testSyncRun(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testSyncWorkerPlumbing",
              "documentation": {
                "identifier": "testSyncWorkerPlumbing",
                "newPage": false,
                "searchKey": "repos_test.testSyncWorkerPlumbing",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testSyncWorkerPlumbing(db *sql.DB) func(t *testing.T, repoStore *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testSyncWorkerPlumbing(db *sql.DB) func(t *testing.T, repoStore *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testSyncer",
              "documentation": {
                "identifier": "testSyncer",
                "newPage": false,
                "searchKey": "repos_test.testSyncer",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testSyncer(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testSyncer(db *sql.DB) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testSyncerSync",
              "documentation": {
                "identifier": "testSyncerSync",
                "newPage": false,
                "searchKey": "repos_test.testSyncerSync",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testSyncerSync(t *testing.T, s *repos.Store) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testSyncerSync(t *testing.T, s *repos.Store) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#testUserAddedRepos",
              "documentation": {
                "identifier": "testUserAddedRepos",
                "newPage": false,
                "searchKey": "repos_test.testUserAddedRepos",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testUserAddedRepos(db *sql.DB, userID int32) func(t *testing.T, store *repos.Store) func(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testUserAddedRepos(db *sql.DB, userID int32) func(t *testing.T, store *repos.Store) func(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/repos_test#transact",
              "documentation": {
                "identifier": "transact",
                "newPage": false,
                "searchKey": "repos_test.transact",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func transact(ctx context.Context, s *repos.Store, test func(testing.TB, *repos.Store)) func(*testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc transact(ctx context.Context, s *repos.Store, test func(testing.TB, *repos.Store)) func(*testing.T)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
