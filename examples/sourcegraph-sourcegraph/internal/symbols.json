{
  "pathID": "/internal/symbols",
  "documentation": {
    "identifier": "symbols",
    "newPage": true,
    "searchKey": "internal/symbols",
    "tags": [
      "private"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package symbols"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/internal/symbols#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/symbols#symbolsURL",
              "documentation": {
                "identifier": "symbolsURL",
                "newPage": false,
                "searchKey": "symbols.symbolsURL",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var symbolsURL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar symbolsURL = env.Get(\"SYMBOLS_URL\", \"k8s+http://symbols:3184\", \"symbols service URL\")\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/internal/symbols#DefaultClient",
              "documentation": {
                "identifier": "DefaultClient",
                "newPage": false,
                "searchKey": "symbols.DefaultClient",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "var DefaultClient"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar DefaultClient = ...\n```\n\nDefaultClient is the default Client. Unless overwritten, it is connected to the server specified by the SYMBOLS_URL environment variable. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/internal/symbols#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/internal/symbols#Client",
              "documentation": {
                "identifier": "Client",
                "newPage": false,
                "searchKey": "symbols.Client",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type Client struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Client struct {\n\t// URL to symbols service.\n\tURL string\n\n\t// HTTP client to use\n\tHTTPClient *http.Client\n\n\t// Limits concurrency of outstanding HTTP posts\n\tHTTPLimiter *parallel.Run\n\n\tonce     sync.Once\n\tendpoint *endpoint.Map\n}\n```\n\nClient is a symbols service client. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/internal/symbols#Client.url",
                    "documentation": {
                      "identifier": "Client.url",
                      "newPage": false,
                      "searchKey": "symbols.Client.url",
                      "tags": [
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *Client) url(key key) (string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *Client) url(key key) (string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/symbols#Client.Search",
                    "documentation": {
                      "identifier": "Client.Search",
                      "newPage": false,
                      "searchKey": "symbols.Client.Search",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *Client) Search(ctx context.Context, args search.SymbolsParameters) (result *result.Symbols, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *Client) Search(ctx context.Context, args search.SymbolsParameters) (result *result.Symbols, err error)\n```\n\nSearch performs a symbol search on the symbols service. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/internal/symbols#Client.httpPost",
                    "documentation": {
                      "identifier": "Client.httpPost",
                      "newPage": false,
                      "searchKey": "symbols.Client.httpPost",
                      "tags": [
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *Client) httpPost(ctx context.Context, method string, key key, payload interface{}) (resp *http.Response, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *Client) httpPost(ctx context.Context, method string, key key, payload interface{}) (resp *http.Response, err error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/internal/symbols#key",
              "documentation": {
                "identifier": "key",
                "newPage": false,
                "searchKey": "symbols.key",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type key struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype key struct {\n\trepo     api.RepoName\n\tcommitID api.CommitID\n}\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
