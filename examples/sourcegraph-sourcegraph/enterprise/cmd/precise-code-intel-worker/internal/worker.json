{
  "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker",
  "documentation": {
    "identifier": "worker",
    "newPage": true,
    "searchKey": "enterprise/cmd/precise-code-intel-worker/internal/worker",
    "tags": []
  },
  "label": {
    "kind": "plaintext",
    "value": "Package worker"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#CloneInProgressDelay",
              "documentation": {
                "identifier": "CloneInProgressDelay",
                "newPage": false,
                "searchKey": "worker.CloneInProgressDelay",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const CloneInProgressDelay"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst CloneInProgressDelay = time.Minute\n```\n\nCloneInProgressDelay is the delay between processing attempts when a repo is currently being cloned. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#handler",
              "documentation": {
                "identifier": "handler",
                "newPage": false,
                "searchKey": "worker.handler",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type handler struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype handler struct {\n\tdbStore         DBStore\n\tlsifStore       LSIFStore\n\tuploadStore     uploadstore.Store\n\tgitserverClient GitserverClient\n\tenableBudget    bool\n\tbudgetRemaining int64\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#handler.Handle",
                    "documentation": {
                      "identifier": "handler.Handle",
                      "newPage": false,
                      "searchKey": "worker.handler.Handle",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h *handler) Handle(ctx context.Context, tx dbworkerstore.Store, record workerutil.Record) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h *handler) Handle(ctx context.Context, tx dbworkerstore.Store, record workerutil.Record) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#handler.PreDequeue",
                    "documentation": {
                      "identifier": "handler.PreDequeue",
                      "newPage": false,
                      "searchKey": "worker.handler.PreDequeue",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h *handler) PreDequeue(ctx context.Context) (bool, interface{}, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h *handler) PreDequeue(ctx context.Context) (bool, interface{}, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#handler.PreHandle",
                    "documentation": {
                      "identifier": "handler.PreHandle",
                      "newPage": false,
                      "searchKey": "worker.handler.PreHandle",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h *handler) PreHandle(ctx context.Context, record workerutil.Record)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h *handler) PreHandle(ctx context.Context, record workerutil.Record)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#handler.PostHandle",
                    "documentation": {
                      "identifier": "handler.PostHandle",
                      "newPage": false,
                      "searchKey": "worker.handler.PostHandle",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h *handler) PostHandle(ctx context.Context, record workerutil.Record)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h *handler) PostHandle(ctx context.Context, record workerutil.Record)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#handler.getSize",
                    "documentation": {
                      "identifier": "handler.getSize",
                      "newPage": false,
                      "searchKey": "worker.handler.getSize",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h *handler) getSize(record workerutil.Record) int64"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h *handler) getSize(record workerutil.Record) int64\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#handler.handle",
                    "documentation": {
                      "identifier": "handler.handle",
                      "newPage": false,
                      "searchKey": "worker.handler.handle",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (h *handler) handle(ctx context.Context, workerStore dbworkerstore.Store, dbStore DBStore, upload store.Upload) (requeued bool, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (h *handler) handle(ctx context.Context, workerStore dbworkerstore.Store, dbStore DBStore, upload store.Upload) (requeued bool, err error)\n```\n\nhandle converts a raw upload into a dump within the given transaction context. Returns true if the upload record was requeued and false otherwise. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStore",
              "documentation": {
                "identifier": "DBStore",
                "newPage": false,
                "searchKey": "worker.DBStore",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStore interface"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStore interface {\n\tbasestore.ShareableStore\n\tgitserver.DBStore\n\n\tWith(other basestore.ShareableStore) DBStore\n\tTransact(ctx context.Context) (DBStore, error)\n\tDone(err error) error\n\n\tUpdatePackages(ctx context.Context, dumpID int, packages []semantic.Package) error\n\tUpdatePackageReferences(ctx context.Context, dumpID int, packageReferences []semantic.PackageReference) error\n\tMarkRepositoryAsDirty(ctx context.Context, repositoryID int) error\n\tDeleteOverlappingDumps(ctx context.Context, repositoryID int, commit, root, indexer string) error\n\tInsertDependencyIndexingJob(ctx context.Context, uploadID int) (int, error)\n\tUpdateCommitedAt(ctx context.Context, dumpID int, committedAt time.Time) error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreShim",
              "documentation": {
                "identifier": "DBStoreShim",
                "newPage": false,
                "searchKey": "worker.DBStoreShim",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreShim struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreShim struct {\n\t*dbstore.Store\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreShim.With",
                    "documentation": {
                      "identifier": "DBStoreShim.With",
                      "newPage": false,
                      "searchKey": "worker.DBStoreShim.With",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *DBStoreShim) With(other basestore.ShareableStore) DBStore"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *DBStoreShim) With(other basestore.ShareableStore) DBStore\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreShim.Transact",
                    "documentation": {
                      "identifier": "DBStoreShim.Transact",
                      "newPage": false,
                      "searchKey": "worker.DBStoreShim.Transact",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *DBStoreShim) Transact(ctx context.Context) (DBStore, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *DBStoreShim) Transact(ctx context.Context) (DBStore, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStore",
              "documentation": {
                "identifier": "LSIFStore",
                "newPage": false,
                "searchKey": "worker.LSIFStore",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStore interface"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStore interface {\n\tTransact(ctx context.Context) (LSIFStore, error)\n\tDone(err error) error\n\n\tWriteMeta(ctx context.Context, bundleID int, meta semantic.MetaData) error\n\tWriteDocuments(ctx context.Context, bundleID int, documents chan semantic.KeyedDocumentData) error\n\tWriteResultChunks(ctx context.Context, bundleID int, resultChunks chan semantic.IndexedResultChunkData) error\n\tWriteDefinitions(ctx context.Context, bundleID int, monikerLocations chan semantic.MonikerLocations) error\n\tWriteReferences(ctx context.Context, bundleID int, monikerLocations chan semantic.MonikerLocations) error\n\tWriteDocumentationPages(ctx context.Context, bundleID int, documentation chan *semantic.DocumentationPageData) error\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreShim",
              "documentation": {
                "identifier": "LSIFStoreShim",
                "newPage": false,
                "searchKey": "worker.LSIFStoreShim",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreShim struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreShim struct {\n\t*lsifstore.Store\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreShim.Transact",
                    "documentation": {
                      "identifier": "LSIFStoreShim.Transact",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreShim.Transact",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *LSIFStoreShim) Transact(ctx context.Context) (LSIFStore, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *LSIFStoreShim) Transact(ctx context.Context) (LSIFStore, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClient",
              "documentation": {
                "identifier": "GitserverClient",
                "newPage": false,
                "searchKey": "worker.GitserverClient",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type GitserverClient interface"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype GitserverClient interface {\n\tDirectoryChildren(ctx context.Context, repositoryID int, commit string, dirnames []string) (map[string][]string, error)\n\tCommitDate(ctx context.Context, repositoryID int, commit string) (time.Time, error)\n\tResolveRevision(ctx context.Context, repositoryID int, versionString string) (api.CommitID, error)\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore",
              "documentation": {
                "identifier": "MockDBStore",
                "newPage": false,
                "searchKey": "worker.MockDBStore",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type MockDBStore struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype MockDBStore struct {\n\t// DeleteOverlappingDumpsFunc is an instance of a mock function object\n\t// controlling the behavior of the method DeleteOverlappingDumps.\n\tDeleteOverlappingDumpsFunc *DBStoreDeleteOverlappingDumpsFunc\n\t// DoneFunc is an instance of a mock function object controlling the\n\t// behavior of the method Done.\n\tDoneFunc *DBStoreDoneFunc\n\t// HandleFunc is an instance of a mock function object controlling the\n\t// behavior of the method Handle.\n\tHandleFunc *DBStoreHandleFunc\n\t// InsertDependencyIndexingJobFunc is an instance of a mock function\n\t// object controlling the behavior of the method\n\t// InsertDependencyIndexingJob.\n\tInsertDependencyIndexingJobFunc *DBStoreInsertDependencyIndexingJobFunc\n\t// MarkRepositoryAsDirtyFunc is an instance of a mock function object\n\t// controlling the behavior of the method MarkRepositoryAsDirty.\n\tMarkRepositoryAsDirtyFunc *DBStoreMarkRepositoryAsDirtyFunc\n\t// RepoNameFunc is an instance of a mock function object controlling the\n\t// behavior of the method RepoName.\n\tRepoNameFunc *DBStoreRepoNameFunc\n\t// TransactFunc is an instance of a mock function object controlling the\n\t// behavior of the method Transact.\n\tTransactFunc *DBStoreTransactFunc\n\t// UpdateCommitedAtFunc is an instance of a mock function object\n\t// controlling the behavior of the method UpdateCommitedAt.\n\tUpdateCommitedAtFunc *DBStoreUpdateCommitedAtFunc\n\t// UpdatePackageReferencesFunc is an instance of a mock function object\n\t// controlling the behavior of the method UpdatePackageReferences.\n\tUpdatePackageReferencesFunc *DBStoreUpdatePackageReferencesFunc\n\t// UpdatePackagesFunc is an instance of a mock function object\n\t// controlling the behavior of the method UpdatePackages.\n\tUpdatePackagesFunc *DBStoreUpdatePackagesFunc\n\t// WithFunc is an instance of a mock function object controlling the\n\t// behavior of the method With.\n\tWithFunc *DBStoreWithFunc\n}\n```\n\nMockDBStore is a mock implementation of the DBStore interface (from the package github.com/sourcegraph/sourcegraph/enterprise/cmd/precise-code-intel-worker/internal/worker) used for unit testing. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#NewMockDBStore",
                    "documentation": {
                      "identifier": "NewMockDBStore",
                      "newPage": false,
                      "searchKey": "worker.NewMockDBStore",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewMockDBStore() *MockDBStore"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewMockDBStore() *MockDBStore\n```\n\nNewMockDBStore creates a new mock of the DBStore interface. All methods return zero values for all results, unless overwritten. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#NewMockDBStoreFrom",
                    "documentation": {
                      "identifier": "NewMockDBStoreFrom",
                      "newPage": false,
                      "searchKey": "worker.NewMockDBStoreFrom",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewMockDBStoreFrom(i DBStore) *MockDBStore"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewMockDBStoreFrom(i DBStore) *MockDBStore\n```\n\nNewMockDBStoreFrom creates a new mock of the MockDBStore interface. All methods delegate to the given implementation, unless overwritten. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.DeleteOverlappingDumps",
                    "documentation": {
                      "identifier": "MockDBStore.DeleteOverlappingDumps",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.DeleteOverlappingDumps",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) DeleteOverlappingDumps(v0 context.Context, v1 int, v2 string, v3 string, v4 string) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) DeleteOverlappingDumps(v0 context.Context, v1 int, v2 string, v3 string, v4 string) error\n```\n\nDeleteOverlappingDumps delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.Done",
                    "documentation": {
                      "identifier": "MockDBStore.Done",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.Done",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) Done(v0 error) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) Done(v0 error) error\n```\n\nDone delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.Handle",
                    "documentation": {
                      "identifier": "MockDBStore.Handle",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.Handle",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) Handle() *basestore.TransactableHandle"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) Handle() *basestore.TransactableHandle\n```\n\nHandle delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.InsertDependencyIndexingJob",
                    "documentation": {
                      "identifier": "MockDBStore.InsertDependencyIndexingJob",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.InsertDependencyIndexingJob",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) InsertDependencyIndexingJob(v0 context.Context, v1 int) (int, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) InsertDependencyIndexingJob(v0 context.Context, v1 int) (int, error)\n```\n\nInsertDependencyIndexingJob delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.MarkRepositoryAsDirty",
                    "documentation": {
                      "identifier": "MockDBStore.MarkRepositoryAsDirty",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.MarkRepositoryAsDirty",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) MarkRepositoryAsDirty(v0 context.Context, v1 int) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) MarkRepositoryAsDirty(v0 context.Context, v1 int) error\n```\n\nMarkRepositoryAsDirty delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.RepoName",
                    "documentation": {
                      "identifier": "MockDBStore.RepoName",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.RepoName",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) RepoName(v0 context.Context, v1 int) (string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) RepoName(v0 context.Context, v1 int) (string, error)\n```\n\nRepoName delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.Transact",
                    "documentation": {
                      "identifier": "MockDBStore.Transact",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.Transact",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) Transact(v0 context.Context) (DBStore, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) Transact(v0 context.Context) (DBStore, error)\n```\n\nTransact delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.UpdateCommitedAt",
                    "documentation": {
                      "identifier": "MockDBStore.UpdateCommitedAt",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.UpdateCommitedAt",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) UpdateCommitedAt(v0 context.Context, v1 int, v2 time.Time) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) UpdateCommitedAt(v0 context.Context, v1 int, v2 time.Time) error\n```\n\nUpdateCommitedAt delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.UpdatePackageReferences",
                    "documentation": {
                      "identifier": "MockDBStore.UpdatePackageReferences",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.UpdatePackageReferences",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) UpdatePackageReferences(v0 context.Context, v1 int, v2 []semantic.PackageReference) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) UpdatePackageReferences(v0 context.Context, v1 int, v2 []semantic.PackageReference) error\n```\n\nUpdatePackageReferences delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.UpdatePackages",
                    "documentation": {
                      "identifier": "MockDBStore.UpdatePackages",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.UpdatePackages",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) UpdatePackages(v0 context.Context, v1 int, v2 []semantic.Package) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) UpdatePackages(v0 context.Context, v1 int, v2 []semantic.Package) error\n```\n\nUpdatePackages delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockDBStore.With",
                    "documentation": {
                      "identifier": "MockDBStore.With",
                      "newPage": false,
                      "searchKey": "worker.MockDBStore.With",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockDBStore) With(v0 basestore.ShareableStore) DBStore"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockDBStore) With(v0 basestore.ShareableStore) DBStore\n```\n\nWith delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFunc",
              "documentation": {
                "identifier": "DBStoreDeleteOverlappingDumpsFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreDeleteOverlappingDumpsFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreDeleteOverlappingDumpsFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreDeleteOverlappingDumpsFunc struct {\n\tdefaultHook func(context.Context, int, string, string, string) error\n\thooks       []func(context.Context, int, string, string, string) error\n\thistory     []DBStoreDeleteOverlappingDumpsFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreDeleteOverlappingDumpsFunc describes the behavior when the DeleteOverlappingDumps method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreDeleteOverlappingDumpsFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDeleteOverlappingDumpsFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDeleteOverlappingDumpsFunc) SetDefaultHook(hook func(context.Context, int, string, string, string) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDeleteOverlappingDumpsFunc) SetDefaultHook(hook func(context.Context, int, string, string, string) error)\n```\n\nSetDefaultHook sets function that is called when the DeleteOverlappingDumps method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreDeleteOverlappingDumpsFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDeleteOverlappingDumpsFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDeleteOverlappingDumpsFunc) PushHook(hook func(context.Context, int, string, string, string) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDeleteOverlappingDumpsFunc) PushHook(hook func(context.Context, int, string, string, string) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the DeleteOverlappingDumps method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreDeleteOverlappingDumpsFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDeleteOverlappingDumpsFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDeleteOverlappingDumpsFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDeleteOverlappingDumpsFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreDeleteOverlappingDumpsFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDeleteOverlappingDumpsFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDeleteOverlappingDumpsFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDeleteOverlappingDumpsFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreDeleteOverlappingDumpsFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDeleteOverlappingDumpsFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDeleteOverlappingDumpsFunc) nextHook() func(context.Context, int, string, string, string) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDeleteOverlappingDumpsFunc) nextHook() func(context.Context, int, string, string, string) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreDeleteOverlappingDumpsFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDeleteOverlappingDumpsFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDeleteOverlappingDumpsFunc) appendCall(r0 DBStoreDeleteOverlappingDumpsFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDeleteOverlappingDumpsFunc) appendCall(r0 DBStoreDeleteOverlappingDumpsFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFunc.History",
                    "documentation": {
                      "identifier": "DBStoreDeleteOverlappingDumpsFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDeleteOverlappingDumpsFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDeleteOverlappingDumpsFunc) History() []DBStoreDeleteOverlappingDumpsFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDeleteOverlappingDumpsFunc) History() []DBStoreDeleteOverlappingDumpsFuncCall\n```\n\nHistory returns a sequence of DBStoreDeleteOverlappingDumpsFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFuncCall",
              "documentation": {
                "identifier": "DBStoreDeleteOverlappingDumpsFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreDeleteOverlappingDumpsFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreDeleteOverlappingDumpsFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreDeleteOverlappingDumpsFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 string\n\t// Arg3 is the value of the 4th argument passed to this method\n\t// invocation.\n\tArg3 string\n\t// Arg4 is the value of the 5th argument passed to this method\n\t// invocation.\n\tArg4 string\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nDBStoreDeleteOverlappingDumpsFuncCall is an object that describes an invocation of method DeleteOverlappingDumps on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreDeleteOverlappingDumpsFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDeleteOverlappingDumpsFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreDeleteOverlappingDumpsFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreDeleteOverlappingDumpsFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDeleteOverlappingDumpsFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreDeleteOverlappingDumpsFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDeleteOverlappingDumpsFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreDeleteOverlappingDumpsFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreDeleteOverlappingDumpsFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFunc",
              "documentation": {
                "identifier": "DBStoreDoneFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreDoneFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreDoneFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreDoneFunc struct {\n\tdefaultHook func(error) error\n\thooks       []func(error) error\n\thistory     []DBStoreDoneFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreDoneFunc describes the behavior when the Done method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreDoneFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDoneFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDoneFunc) SetDefaultHook(hook func(error) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDoneFunc) SetDefaultHook(hook func(error) error)\n```\n\nSetDefaultHook sets function that is called when the Done method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreDoneFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDoneFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDoneFunc) PushHook(hook func(error) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDoneFunc) PushHook(hook func(error) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the Done method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreDoneFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDoneFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDoneFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDoneFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreDoneFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDoneFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDoneFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDoneFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreDoneFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDoneFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDoneFunc) nextHook() func(error) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDoneFunc) nextHook() func(error) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreDoneFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDoneFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDoneFunc) appendCall(r0 DBStoreDoneFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDoneFunc) appendCall(r0 DBStoreDoneFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFunc.History",
                    "documentation": {
                      "identifier": "DBStoreDoneFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDoneFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreDoneFunc) History() []DBStoreDoneFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreDoneFunc) History() []DBStoreDoneFuncCall\n```\n\nHistory returns a sequence of DBStoreDoneFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFuncCall",
              "documentation": {
                "identifier": "DBStoreDoneFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreDoneFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreDoneFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreDoneFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 error\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nDBStoreDoneFuncCall is an object that describes an invocation of method Done on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreDoneFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDoneFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreDoneFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreDoneFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreDoneFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreDoneFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreDoneFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreDoneFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreDoneFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFunc",
              "documentation": {
                "identifier": "DBStoreHandleFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreHandleFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreHandleFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreHandleFunc struct {\n\tdefaultHook func() *basestore.TransactableHandle\n\thooks       []func() *basestore.TransactableHandle\n\thistory     []DBStoreHandleFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreHandleFunc describes the behavior when the Handle method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreHandleFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreHandleFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreHandleFunc) SetDefaultHook(hook func() *basestore.TransactableHandle)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreHandleFunc) SetDefaultHook(hook func() *basestore.TransactableHandle)\n```\n\nSetDefaultHook sets function that is called when the Handle method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreHandleFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreHandleFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreHandleFunc) PushHook(hook func() *basestore.TransactableHandle)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreHandleFunc) PushHook(hook func() *basestore.TransactableHandle)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the Handle method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreHandleFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreHandleFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreHandleFunc) SetDefaultReturn(r0 *basestore.TransactableHandle)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreHandleFunc) SetDefaultReturn(r0 *basestore.TransactableHandle)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreHandleFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreHandleFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreHandleFunc) PushReturn(r0 *basestore.TransactableHandle)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreHandleFunc) PushReturn(r0 *basestore.TransactableHandle)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreHandleFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreHandleFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreHandleFunc) nextHook() func() *basestore.TransactableHandle"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreHandleFunc) nextHook() func() *basestore.TransactableHandle\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreHandleFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreHandleFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreHandleFunc) appendCall(r0 DBStoreHandleFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreHandleFunc) appendCall(r0 DBStoreHandleFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFunc.History",
                    "documentation": {
                      "identifier": "DBStoreHandleFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreHandleFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreHandleFunc) History() []DBStoreHandleFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreHandleFunc) History() []DBStoreHandleFuncCall\n```\n\nHistory returns a sequence of DBStoreHandleFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFuncCall",
              "documentation": {
                "identifier": "DBStoreHandleFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreHandleFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreHandleFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreHandleFuncCall struct {\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 *basestore.TransactableHandle\n}\n```\n\nDBStoreHandleFuncCall is an object that describes an invocation of method Handle on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreHandleFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreHandleFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreHandleFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreHandleFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreHandleFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreHandleFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreHandleFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreHandleFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreHandleFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFunc",
              "documentation": {
                "identifier": "DBStoreInsertDependencyIndexingJobFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreInsertDependencyIndexingJobFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreInsertDependencyIndexingJobFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreInsertDependencyIndexingJobFunc struct {\n\tdefaultHook func(context.Context, int) (int, error)\n\thooks       []func(context.Context, int) (int, error)\n\thistory     []DBStoreInsertDependencyIndexingJobFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreInsertDependencyIndexingJobFunc describes the behavior when the InsertDependencyIndexingJob method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreInsertDependencyIndexingJobFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreInsertDependencyIndexingJobFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreInsertDependencyIndexingJobFunc) SetDefaultHook(hook func(context.Context, int) (int, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreInsertDependencyIndexingJobFunc) SetDefaultHook(hook func(context.Context, int) (int, error))\n```\n\nSetDefaultHook sets function that is called when the InsertDependencyIndexingJob method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreInsertDependencyIndexingJobFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreInsertDependencyIndexingJobFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreInsertDependencyIndexingJobFunc) PushHook(hook func(context.Context, int) (int, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreInsertDependencyIndexingJobFunc) PushHook(hook func(context.Context, int) (int, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the InsertDependencyIndexingJob method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreInsertDependencyIndexingJobFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreInsertDependencyIndexingJobFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreInsertDependencyIndexingJobFunc) SetDefaultReturn(r0 int, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreInsertDependencyIndexingJobFunc) SetDefaultReturn(r0 int, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreInsertDependencyIndexingJobFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreInsertDependencyIndexingJobFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreInsertDependencyIndexingJobFunc) PushReturn(r0 int, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreInsertDependencyIndexingJobFunc) PushReturn(r0 int, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreInsertDependencyIndexingJobFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreInsertDependencyIndexingJobFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreInsertDependencyIndexingJobFunc) nextHook() func(context.Context, int) (int, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreInsertDependencyIndexingJobFunc) nextHook() func(context.Context, int) (int, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreInsertDependencyIndexingJobFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreInsertDependencyIndexingJobFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreInsertDependencyIndexingJobFunc) appendCall(r0 DBStoreInsertDependencyIndexingJobFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreInsertDependencyIndexingJobFunc) appendCall(r0 DBStoreInsertDependencyIndexingJobFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFunc.History",
                    "documentation": {
                      "identifier": "DBStoreInsertDependencyIndexingJobFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreInsertDependencyIndexingJobFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreInsertDependencyIndexingJobFunc) History() []DBStoreInsertDependencyIndexingJobFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreInsertDependencyIndexingJobFunc) History() []DBStoreInsertDependencyIndexingJobFuncCall\n```\n\nHistory returns a sequence of DBStoreInsertDependencyIndexingJobFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFuncCall",
              "documentation": {
                "identifier": "DBStoreInsertDependencyIndexingJobFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreInsertDependencyIndexingJobFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreInsertDependencyIndexingJobFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreInsertDependencyIndexingJobFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 int\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nDBStoreInsertDependencyIndexingJobFuncCall is an object that describes an invocation of method InsertDependencyIndexingJob on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreInsertDependencyIndexingJobFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreInsertDependencyIndexingJobFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreInsertDependencyIndexingJobFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreInsertDependencyIndexingJobFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreInsertDependencyIndexingJobFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreInsertDependencyIndexingJobFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreInsertDependencyIndexingJobFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreInsertDependencyIndexingJobFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreInsertDependencyIndexingJobFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFunc",
              "documentation": {
                "identifier": "DBStoreMarkRepositoryAsDirtyFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreMarkRepositoryAsDirtyFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreMarkRepositoryAsDirtyFunc struct {\n\tdefaultHook func(context.Context, int) error\n\thooks       []func(context.Context, int) error\n\thistory     []DBStoreMarkRepositoryAsDirtyFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreMarkRepositoryAsDirtyFunc describes the behavior when the MarkRepositoryAsDirty method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreMarkRepositoryAsDirtyFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreMarkRepositoryAsDirtyFunc) SetDefaultHook(hook func(context.Context, int) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreMarkRepositoryAsDirtyFunc) SetDefaultHook(hook func(context.Context, int) error)\n```\n\nSetDefaultHook sets function that is called when the MarkRepositoryAsDirty method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreMarkRepositoryAsDirtyFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreMarkRepositoryAsDirtyFunc) PushHook(hook func(context.Context, int) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreMarkRepositoryAsDirtyFunc) PushHook(hook func(context.Context, int) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the MarkRepositoryAsDirty method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreMarkRepositoryAsDirtyFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreMarkRepositoryAsDirtyFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreMarkRepositoryAsDirtyFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreMarkRepositoryAsDirtyFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreMarkRepositoryAsDirtyFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreMarkRepositoryAsDirtyFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreMarkRepositoryAsDirtyFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreMarkRepositoryAsDirtyFunc) nextHook() func(context.Context, int) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreMarkRepositoryAsDirtyFunc) nextHook() func(context.Context, int) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreMarkRepositoryAsDirtyFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreMarkRepositoryAsDirtyFunc) appendCall(r0 DBStoreMarkRepositoryAsDirtyFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreMarkRepositoryAsDirtyFunc) appendCall(r0 DBStoreMarkRepositoryAsDirtyFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFunc.History",
                    "documentation": {
                      "identifier": "DBStoreMarkRepositoryAsDirtyFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreMarkRepositoryAsDirtyFunc) History() []DBStoreMarkRepositoryAsDirtyFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreMarkRepositoryAsDirtyFunc) History() []DBStoreMarkRepositoryAsDirtyFuncCall\n```\n\nHistory returns a sequence of DBStoreMarkRepositoryAsDirtyFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFuncCall",
              "documentation": {
                "identifier": "DBStoreMarkRepositoryAsDirtyFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreMarkRepositoryAsDirtyFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreMarkRepositoryAsDirtyFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nDBStoreMarkRepositoryAsDirtyFuncCall is an object that describes an invocation of method MarkRepositoryAsDirty on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreMarkRepositoryAsDirtyFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreMarkRepositoryAsDirtyFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreMarkRepositoryAsDirtyFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreMarkRepositoryAsDirtyFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreMarkRepositoryAsDirtyFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreMarkRepositoryAsDirtyFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreMarkRepositoryAsDirtyFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreMarkRepositoryAsDirtyFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFunc",
              "documentation": {
                "identifier": "DBStoreRepoNameFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreRepoNameFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreRepoNameFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreRepoNameFunc struct {\n\tdefaultHook func(context.Context, int) (string, error)\n\thooks       []func(context.Context, int) (string, error)\n\thistory     []DBStoreRepoNameFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreRepoNameFunc describes the behavior when the RepoName method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreRepoNameFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreRepoNameFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreRepoNameFunc) SetDefaultHook(hook func(context.Context, int) (string, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreRepoNameFunc) SetDefaultHook(hook func(context.Context, int) (string, error))\n```\n\nSetDefaultHook sets function that is called when the RepoName method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreRepoNameFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreRepoNameFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreRepoNameFunc) PushHook(hook func(context.Context, int) (string, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreRepoNameFunc) PushHook(hook func(context.Context, int) (string, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the RepoName method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreRepoNameFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreRepoNameFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreRepoNameFunc) SetDefaultReturn(r0 string, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreRepoNameFunc) SetDefaultReturn(r0 string, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreRepoNameFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreRepoNameFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreRepoNameFunc) PushReturn(r0 string, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreRepoNameFunc) PushReturn(r0 string, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreRepoNameFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreRepoNameFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreRepoNameFunc) nextHook() func(context.Context, int) (string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreRepoNameFunc) nextHook() func(context.Context, int) (string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreRepoNameFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreRepoNameFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreRepoNameFunc) appendCall(r0 DBStoreRepoNameFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreRepoNameFunc) appendCall(r0 DBStoreRepoNameFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFunc.History",
                    "documentation": {
                      "identifier": "DBStoreRepoNameFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreRepoNameFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreRepoNameFunc) History() []DBStoreRepoNameFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreRepoNameFunc) History() []DBStoreRepoNameFuncCall\n```\n\nHistory returns a sequence of DBStoreRepoNameFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFuncCall",
              "documentation": {
                "identifier": "DBStoreRepoNameFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreRepoNameFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreRepoNameFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreRepoNameFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 string\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nDBStoreRepoNameFuncCall is an object that describes an invocation of method RepoName on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreRepoNameFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreRepoNameFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreRepoNameFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreRepoNameFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreRepoNameFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreRepoNameFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreRepoNameFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreRepoNameFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreRepoNameFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFunc",
              "documentation": {
                "identifier": "DBStoreTransactFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreTransactFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreTransactFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreTransactFunc struct {\n\tdefaultHook func(context.Context) (DBStore, error)\n\thooks       []func(context.Context) (DBStore, error)\n\thistory     []DBStoreTransactFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreTransactFunc describes the behavior when the Transact method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreTransactFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreTransactFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreTransactFunc) SetDefaultHook(hook func(context.Context) (DBStore, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreTransactFunc) SetDefaultHook(hook func(context.Context) (DBStore, error))\n```\n\nSetDefaultHook sets function that is called when the Transact method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreTransactFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreTransactFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreTransactFunc) PushHook(hook func(context.Context) (DBStore, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreTransactFunc) PushHook(hook func(context.Context) (DBStore, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the Transact method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreTransactFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreTransactFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreTransactFunc) SetDefaultReturn(r0 DBStore, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreTransactFunc) SetDefaultReturn(r0 DBStore, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreTransactFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreTransactFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreTransactFunc) PushReturn(r0 DBStore, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreTransactFunc) PushReturn(r0 DBStore, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreTransactFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreTransactFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreTransactFunc) nextHook() func(context.Context) (DBStore, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreTransactFunc) nextHook() func(context.Context) (DBStore, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreTransactFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreTransactFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreTransactFunc) appendCall(r0 DBStoreTransactFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreTransactFunc) appendCall(r0 DBStoreTransactFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFunc.History",
                    "documentation": {
                      "identifier": "DBStoreTransactFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreTransactFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreTransactFunc) History() []DBStoreTransactFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreTransactFunc) History() []DBStoreTransactFuncCall\n```\n\nHistory returns a sequence of DBStoreTransactFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFuncCall",
              "documentation": {
                "identifier": "DBStoreTransactFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreTransactFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreTransactFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreTransactFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 DBStore\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nDBStoreTransactFuncCall is an object that describes an invocation of method Transact on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreTransactFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreTransactFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreTransactFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreTransactFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreTransactFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreTransactFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreTransactFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreTransactFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreTransactFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFunc",
              "documentation": {
                "identifier": "DBStoreUpdateCommitedAtFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreUpdateCommitedAtFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreUpdateCommitedAtFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreUpdateCommitedAtFunc struct {\n\tdefaultHook func(context.Context, int, time.Time) error\n\thooks       []func(context.Context, int, time.Time) error\n\thistory     []DBStoreUpdateCommitedAtFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreUpdateCommitedAtFunc describes the behavior when the UpdateCommitedAt method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreUpdateCommitedAtFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdateCommitedAtFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdateCommitedAtFunc) SetDefaultHook(hook func(context.Context, int, time.Time) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdateCommitedAtFunc) SetDefaultHook(hook func(context.Context, int, time.Time) error)\n```\n\nSetDefaultHook sets function that is called when the UpdateCommitedAt method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreUpdateCommitedAtFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdateCommitedAtFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdateCommitedAtFunc) PushHook(hook func(context.Context, int, time.Time) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdateCommitedAtFunc) PushHook(hook func(context.Context, int, time.Time) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the UpdateCommitedAt method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreUpdateCommitedAtFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdateCommitedAtFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdateCommitedAtFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdateCommitedAtFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreUpdateCommitedAtFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdateCommitedAtFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdateCommitedAtFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdateCommitedAtFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreUpdateCommitedAtFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdateCommitedAtFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdateCommitedAtFunc) nextHook() func(context.Context, int, time.Time) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdateCommitedAtFunc) nextHook() func(context.Context, int, time.Time) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreUpdateCommitedAtFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdateCommitedAtFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdateCommitedAtFunc) appendCall(r0 DBStoreUpdateCommitedAtFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdateCommitedAtFunc) appendCall(r0 DBStoreUpdateCommitedAtFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFunc.History",
                    "documentation": {
                      "identifier": "DBStoreUpdateCommitedAtFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdateCommitedAtFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdateCommitedAtFunc) History() []DBStoreUpdateCommitedAtFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdateCommitedAtFunc) History() []DBStoreUpdateCommitedAtFuncCall\n```\n\nHistory returns a sequence of DBStoreUpdateCommitedAtFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFuncCall",
              "documentation": {
                "identifier": "DBStoreUpdateCommitedAtFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreUpdateCommitedAtFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreUpdateCommitedAtFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreUpdateCommitedAtFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 time.Time\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nDBStoreUpdateCommitedAtFuncCall is an object that describes an invocation of method UpdateCommitedAt on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreUpdateCommitedAtFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdateCommitedAtFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreUpdateCommitedAtFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreUpdateCommitedAtFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdateCommitedAtFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreUpdateCommitedAtFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdateCommitedAtFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreUpdateCommitedAtFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreUpdateCommitedAtFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFunc",
              "documentation": {
                "identifier": "DBStoreUpdatePackageReferencesFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreUpdatePackageReferencesFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreUpdatePackageReferencesFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreUpdatePackageReferencesFunc struct {\n\tdefaultHook func(context.Context, int, []semantic.PackageReference) error\n\thooks       []func(context.Context, int, []semantic.PackageReference) error\n\thistory     []DBStoreUpdatePackageReferencesFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreUpdatePackageReferencesFunc describes the behavior when the UpdatePackageReferences method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackageReferencesFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackageReferencesFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackageReferencesFunc) SetDefaultHook(hook func(context.Context, int, []semantic.PackageReference) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackageReferencesFunc) SetDefaultHook(hook func(context.Context, int, []semantic.PackageReference) error)\n```\n\nSetDefaultHook sets function that is called when the UpdatePackageReferences method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackageReferencesFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackageReferencesFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackageReferencesFunc) PushHook(hook func(context.Context, int, []semantic.PackageReference) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackageReferencesFunc) PushHook(hook func(context.Context, int, []semantic.PackageReference) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the UpdatePackageReferences method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackageReferencesFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackageReferencesFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackageReferencesFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackageReferencesFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackageReferencesFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackageReferencesFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackageReferencesFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackageReferencesFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackageReferencesFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackageReferencesFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackageReferencesFunc) nextHook() func(context.Context, int, []semantic.PackageReference) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackageReferencesFunc) nextHook() func(context.Context, int, []semantic.PackageReference) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackageReferencesFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackageReferencesFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackageReferencesFunc) appendCall(r0 DBStoreUpdatePackageReferencesFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackageReferencesFunc) appendCall(r0 DBStoreUpdatePackageReferencesFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFunc.History",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackageReferencesFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackageReferencesFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackageReferencesFunc) History() []DBStoreUpdatePackageReferencesFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackageReferencesFunc) History() []DBStoreUpdatePackageReferencesFuncCall\n```\n\nHistory returns a sequence of DBStoreUpdatePackageReferencesFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFuncCall",
              "documentation": {
                "identifier": "DBStoreUpdatePackageReferencesFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreUpdatePackageReferencesFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreUpdatePackageReferencesFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreUpdatePackageReferencesFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 []semantic.PackageReference\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nDBStoreUpdatePackageReferencesFuncCall is an object that describes an invocation of method UpdatePackageReferences on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackageReferencesFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackageReferencesFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreUpdatePackageReferencesFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreUpdatePackageReferencesFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackageReferencesFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackageReferencesFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackageReferencesFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreUpdatePackageReferencesFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreUpdatePackageReferencesFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFunc",
              "documentation": {
                "identifier": "DBStoreUpdatePackagesFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreUpdatePackagesFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreUpdatePackagesFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreUpdatePackagesFunc struct {\n\tdefaultHook func(context.Context, int, []semantic.Package) error\n\thooks       []func(context.Context, int, []semantic.Package) error\n\thistory     []DBStoreUpdatePackagesFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreUpdatePackagesFunc describes the behavior when the UpdatePackages method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackagesFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackagesFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackagesFunc) SetDefaultHook(hook func(context.Context, int, []semantic.Package) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackagesFunc) SetDefaultHook(hook func(context.Context, int, []semantic.Package) error)\n```\n\nSetDefaultHook sets function that is called when the UpdatePackages method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackagesFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackagesFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackagesFunc) PushHook(hook func(context.Context, int, []semantic.Package) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackagesFunc) PushHook(hook func(context.Context, int, []semantic.Package) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the UpdatePackages method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackagesFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackagesFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackagesFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackagesFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackagesFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackagesFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackagesFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackagesFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackagesFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackagesFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackagesFunc) nextHook() func(context.Context, int, []semantic.Package) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackagesFunc) nextHook() func(context.Context, int, []semantic.Package) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackagesFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackagesFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackagesFunc) appendCall(r0 DBStoreUpdatePackagesFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackagesFunc) appendCall(r0 DBStoreUpdatePackagesFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFunc.History",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackagesFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackagesFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreUpdatePackagesFunc) History() []DBStoreUpdatePackagesFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreUpdatePackagesFunc) History() []DBStoreUpdatePackagesFuncCall\n```\n\nHistory returns a sequence of DBStoreUpdatePackagesFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFuncCall",
              "documentation": {
                "identifier": "DBStoreUpdatePackagesFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreUpdatePackagesFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreUpdatePackagesFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreUpdatePackagesFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 []semantic.Package\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nDBStoreUpdatePackagesFuncCall is an object that describes an invocation of method UpdatePackages on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackagesFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackagesFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreUpdatePackagesFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreUpdatePackagesFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreUpdatePackagesFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreUpdatePackagesFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreUpdatePackagesFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreUpdatePackagesFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreUpdatePackagesFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFunc",
              "documentation": {
                "identifier": "DBStoreWithFunc",
                "newPage": false,
                "searchKey": "worker.DBStoreWithFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreWithFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreWithFunc struct {\n\tdefaultHook func(basestore.ShareableStore) DBStore\n\thooks       []func(basestore.ShareableStore) DBStore\n\thistory     []DBStoreWithFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nDBStoreWithFunc describes the behavior when the With method of the parent MockDBStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "DBStoreWithFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreWithFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreWithFunc) SetDefaultHook(hook func(basestore.ShareableStore) DBStore)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreWithFunc) SetDefaultHook(hook func(basestore.ShareableStore) DBStore)\n```\n\nSetDefaultHook sets function that is called when the With method of the parent MockDBStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFunc.PushHook",
                    "documentation": {
                      "identifier": "DBStoreWithFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreWithFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreWithFunc) PushHook(hook func(basestore.ShareableStore) DBStore)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreWithFunc) PushHook(hook func(basestore.ShareableStore) DBStore)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the With method of the parent MockDBStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "DBStoreWithFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreWithFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreWithFunc) SetDefaultReturn(r0 DBStore)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreWithFunc) SetDefaultReturn(r0 DBStore)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFunc.PushReturn",
                    "documentation": {
                      "identifier": "DBStoreWithFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.DBStoreWithFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreWithFunc) PushReturn(r0 DBStore)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreWithFunc) PushReturn(r0 DBStore)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFunc.nextHook",
                    "documentation": {
                      "identifier": "DBStoreWithFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.DBStoreWithFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreWithFunc) nextHook() func(basestore.ShareableStore) DBStore"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreWithFunc) nextHook() func(basestore.ShareableStore) DBStore\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFunc.appendCall",
                    "documentation": {
                      "identifier": "DBStoreWithFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.DBStoreWithFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreWithFunc) appendCall(r0 DBStoreWithFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreWithFunc) appendCall(r0 DBStoreWithFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFunc.History",
                    "documentation": {
                      "identifier": "DBStoreWithFunc.History",
                      "newPage": false,
                      "searchKey": "worker.DBStoreWithFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *DBStoreWithFunc) History() []DBStoreWithFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *DBStoreWithFunc) History() []DBStoreWithFuncCall\n```\n\nHistory returns a sequence of DBStoreWithFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFuncCall",
              "documentation": {
                "identifier": "DBStoreWithFuncCall",
                "newPage": false,
                "searchKey": "worker.DBStoreWithFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type DBStoreWithFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DBStoreWithFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 basestore.ShareableStore\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 DBStore\n}\n```\n\nDBStoreWithFuncCall is an object that describes an invocation of method With on an instance of MockDBStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFuncCall.Args",
                    "documentation": {
                      "identifier": "DBStoreWithFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.DBStoreWithFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreWithFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreWithFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#DBStoreWithFuncCall.Results",
                    "documentation": {
                      "identifier": "DBStoreWithFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.DBStoreWithFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c DBStoreWithFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c DBStoreWithFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockGitserverClient",
              "documentation": {
                "identifier": "MockGitserverClient",
                "newPage": false,
                "searchKey": "worker.MockGitserverClient",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type MockGitserverClient struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype MockGitserverClient struct {\n\t// CommitDateFunc is an instance of a mock function object controlling\n\t// the behavior of the method CommitDate.\n\tCommitDateFunc *GitserverClientCommitDateFunc\n\t// DirectoryChildrenFunc is an instance of a mock function object\n\t// controlling the behavior of the method DirectoryChildren.\n\tDirectoryChildrenFunc *GitserverClientDirectoryChildrenFunc\n\t// ResolveRevisionFunc is an instance of a mock function object\n\t// controlling the behavior of the method ResolveRevision.\n\tResolveRevisionFunc *GitserverClientResolveRevisionFunc\n}\n```\n\nMockGitserverClient is a mock implementation of the GitserverClient interface (from the package github.com/sourcegraph/sourcegraph/enterprise/cmd/precise-code-intel-worker/internal/worker) used for unit testing. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#NewMockGitserverClient",
                    "documentation": {
                      "identifier": "NewMockGitserverClient",
                      "newPage": false,
                      "searchKey": "worker.NewMockGitserverClient",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewMockGitserverClient() *MockGitserverClient"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewMockGitserverClient() *MockGitserverClient\n```\n\nNewMockGitserverClient creates a new mock of the GitserverClient interface. All methods return zero values for all results, unless overwritten. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#NewMockGitserverClientFrom",
                    "documentation": {
                      "identifier": "NewMockGitserverClientFrom",
                      "newPage": false,
                      "searchKey": "worker.NewMockGitserverClientFrom",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewMockGitserverClientFrom(i GitserverClient) *MockGitserverClient"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewMockGitserverClientFrom(i GitserverClient) *MockGitserverClient\n```\n\nNewMockGitserverClientFrom creates a new mock of the MockGitserverClient interface. All methods delegate to the given implementation, unless overwritten. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockGitserverClient.CommitDate",
                    "documentation": {
                      "identifier": "MockGitserverClient.CommitDate",
                      "newPage": false,
                      "searchKey": "worker.MockGitserverClient.CommitDate",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockGitserverClient) CommitDate(v0 context.Context, v1 int, v2 string) (time.Time, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockGitserverClient) CommitDate(v0 context.Context, v1 int, v2 string) (time.Time, error)\n```\n\nCommitDate delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockGitserverClient.DirectoryChildren",
                    "documentation": {
                      "identifier": "MockGitserverClient.DirectoryChildren",
                      "newPage": false,
                      "searchKey": "worker.MockGitserverClient.DirectoryChildren",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockGitserverClient) DirectoryChildren(v0 context.Context, v1 int, v2 string, v3 []string) (map[string][]string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockGitserverClient) DirectoryChildren(v0 context.Context, v1 int, v2 string, v3 []string) (map[string][]string, error)\n```\n\nDirectoryChildren delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockGitserverClient.ResolveRevision",
                    "documentation": {
                      "identifier": "MockGitserverClient.ResolveRevision",
                      "newPage": false,
                      "searchKey": "worker.MockGitserverClient.ResolveRevision",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockGitserverClient) ResolveRevision(v0 context.Context, v1 int, v2 string) (api.CommitID, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockGitserverClient) ResolveRevision(v0 context.Context, v1 int, v2 string) (api.CommitID, error)\n```\n\nResolveRevision delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFunc",
              "documentation": {
                "identifier": "GitserverClientCommitDateFunc",
                "newPage": false,
                "searchKey": "worker.GitserverClientCommitDateFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type GitserverClientCommitDateFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype GitserverClientCommitDateFunc struct {\n\tdefaultHook func(context.Context, int, string) (time.Time, error)\n\thooks       []func(context.Context, int, string) (time.Time, error)\n\thistory     []GitserverClientCommitDateFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nGitserverClientCommitDateFunc describes the behavior when the CommitDate method of the parent MockGitserverClient instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "GitserverClientCommitDateFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientCommitDateFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientCommitDateFunc) SetDefaultHook(hook func(context.Context, int, string) (time.Time, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientCommitDateFunc) SetDefaultHook(hook func(context.Context, int, string) (time.Time, error))\n```\n\nSetDefaultHook sets function that is called when the CommitDate method of the parent MockGitserverClient instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFunc.PushHook",
                    "documentation": {
                      "identifier": "GitserverClientCommitDateFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientCommitDateFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientCommitDateFunc) PushHook(hook func(context.Context, int, string) (time.Time, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientCommitDateFunc) PushHook(hook func(context.Context, int, string) (time.Time, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the CommitDate method of the parent MockGitserverClient instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "GitserverClientCommitDateFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientCommitDateFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientCommitDateFunc) SetDefaultReturn(r0 time.Time, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientCommitDateFunc) SetDefaultReturn(r0 time.Time, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFunc.PushReturn",
                    "documentation": {
                      "identifier": "GitserverClientCommitDateFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientCommitDateFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientCommitDateFunc) PushReturn(r0 time.Time, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientCommitDateFunc) PushReturn(r0 time.Time, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFunc.nextHook",
                    "documentation": {
                      "identifier": "GitserverClientCommitDateFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientCommitDateFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientCommitDateFunc) nextHook() func(context.Context, int, string) (time.Time, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientCommitDateFunc) nextHook() func(context.Context, int, string) (time.Time, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFunc.appendCall",
                    "documentation": {
                      "identifier": "GitserverClientCommitDateFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientCommitDateFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientCommitDateFunc) appendCall(r0 GitserverClientCommitDateFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientCommitDateFunc) appendCall(r0 GitserverClientCommitDateFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFunc.History",
                    "documentation": {
                      "identifier": "GitserverClientCommitDateFunc.History",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientCommitDateFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientCommitDateFunc) History() []GitserverClientCommitDateFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientCommitDateFunc) History() []GitserverClientCommitDateFuncCall\n```\n\nHistory returns a sequence of GitserverClientCommitDateFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFuncCall",
              "documentation": {
                "identifier": "GitserverClientCommitDateFuncCall",
                "newPage": false,
                "searchKey": "worker.GitserverClientCommitDateFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type GitserverClientCommitDateFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype GitserverClientCommitDateFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 string\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 time.Time\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nGitserverClientCommitDateFuncCall is an object that describes an invocation of method CommitDate on an instance of MockGitserverClient. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFuncCall.Args",
                    "documentation": {
                      "identifier": "GitserverClientCommitDateFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientCommitDateFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c GitserverClientCommitDateFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c GitserverClientCommitDateFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientCommitDateFuncCall.Results",
                    "documentation": {
                      "identifier": "GitserverClientCommitDateFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientCommitDateFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c GitserverClientCommitDateFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c GitserverClientCommitDateFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFunc",
              "documentation": {
                "identifier": "GitserverClientDirectoryChildrenFunc",
                "newPage": false,
                "searchKey": "worker.GitserverClientDirectoryChildrenFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type GitserverClientDirectoryChildrenFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype GitserverClientDirectoryChildrenFunc struct {\n\tdefaultHook func(context.Context, int, string, []string) (map[string][]string, error)\n\thooks       []func(context.Context, int, string, []string) (map[string][]string, error)\n\thistory     []GitserverClientDirectoryChildrenFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nGitserverClientDirectoryChildrenFunc describes the behavior when the DirectoryChildren method of the parent MockGitserverClient instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "GitserverClientDirectoryChildrenFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientDirectoryChildrenFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientDirectoryChildrenFunc) SetDefaultHook(hook func(context.Context, int, string, []string) (map[string][]string, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientDirectoryChildrenFunc) SetDefaultHook(hook func(context.Context, int, string, []string) (map[string][]string, error))\n```\n\nSetDefaultHook sets function that is called when the DirectoryChildren method of the parent MockGitserverClient instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFunc.PushHook",
                    "documentation": {
                      "identifier": "GitserverClientDirectoryChildrenFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientDirectoryChildrenFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientDirectoryChildrenFunc) PushHook(hook func(context.Context, int, string, []string) (map[string][]string, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientDirectoryChildrenFunc) PushHook(hook func(context.Context, int, string, []string) (map[string][]string, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the DirectoryChildren method of the parent MockGitserverClient instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "GitserverClientDirectoryChildrenFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientDirectoryChildrenFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientDirectoryChildrenFunc) SetDefaultReturn(r0 map[string][]string, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientDirectoryChildrenFunc) SetDefaultReturn(r0 map[string][]string, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFunc.PushReturn",
                    "documentation": {
                      "identifier": "GitserverClientDirectoryChildrenFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientDirectoryChildrenFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientDirectoryChildrenFunc) PushReturn(r0 map[string][]string, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientDirectoryChildrenFunc) PushReturn(r0 map[string][]string, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFunc.nextHook",
                    "documentation": {
                      "identifier": "GitserverClientDirectoryChildrenFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientDirectoryChildrenFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientDirectoryChildrenFunc) nextHook() func(context.Context, int, string, []string) (map[string][]string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientDirectoryChildrenFunc) nextHook() func(context.Context, int, string, []string) (map[string][]string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFunc.appendCall",
                    "documentation": {
                      "identifier": "GitserverClientDirectoryChildrenFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientDirectoryChildrenFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientDirectoryChildrenFunc) appendCall(r0 GitserverClientDirectoryChildrenFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientDirectoryChildrenFunc) appendCall(r0 GitserverClientDirectoryChildrenFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFunc.History",
                    "documentation": {
                      "identifier": "GitserverClientDirectoryChildrenFunc.History",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientDirectoryChildrenFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientDirectoryChildrenFunc) History() []GitserverClientDirectoryChildrenFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientDirectoryChildrenFunc) History() []GitserverClientDirectoryChildrenFuncCall\n```\n\nHistory returns a sequence of GitserverClientDirectoryChildrenFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFuncCall",
              "documentation": {
                "identifier": "GitserverClientDirectoryChildrenFuncCall",
                "newPage": false,
                "searchKey": "worker.GitserverClientDirectoryChildrenFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type GitserverClientDirectoryChildrenFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype GitserverClientDirectoryChildrenFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 string\n\t// Arg3 is the value of the 4th argument passed to this method\n\t// invocation.\n\tArg3 []string\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 map[string][]string\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nGitserverClientDirectoryChildrenFuncCall is an object that describes an invocation of method DirectoryChildren on an instance of MockGitserverClient. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFuncCall.Args",
                    "documentation": {
                      "identifier": "GitserverClientDirectoryChildrenFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientDirectoryChildrenFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c GitserverClientDirectoryChildrenFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c GitserverClientDirectoryChildrenFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientDirectoryChildrenFuncCall.Results",
                    "documentation": {
                      "identifier": "GitserverClientDirectoryChildrenFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientDirectoryChildrenFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c GitserverClientDirectoryChildrenFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c GitserverClientDirectoryChildrenFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFunc",
              "documentation": {
                "identifier": "GitserverClientResolveRevisionFunc",
                "newPage": false,
                "searchKey": "worker.GitserverClientResolveRevisionFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type GitserverClientResolveRevisionFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype GitserverClientResolveRevisionFunc struct {\n\tdefaultHook func(context.Context, int, string) (api.CommitID, error)\n\thooks       []func(context.Context, int, string) (api.CommitID, error)\n\thistory     []GitserverClientResolveRevisionFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nGitserverClientResolveRevisionFunc describes the behavior when the ResolveRevision method of the parent MockGitserverClient instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "GitserverClientResolveRevisionFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientResolveRevisionFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientResolveRevisionFunc) SetDefaultHook(hook func(context.Context, int, string) (api.CommitID, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientResolveRevisionFunc) SetDefaultHook(hook func(context.Context, int, string) (api.CommitID, error))\n```\n\nSetDefaultHook sets function that is called when the ResolveRevision method of the parent MockGitserverClient instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFunc.PushHook",
                    "documentation": {
                      "identifier": "GitserverClientResolveRevisionFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientResolveRevisionFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientResolveRevisionFunc) PushHook(hook func(context.Context, int, string) (api.CommitID, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientResolveRevisionFunc) PushHook(hook func(context.Context, int, string) (api.CommitID, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the ResolveRevision method of the parent MockGitserverClient instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "GitserverClientResolveRevisionFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientResolveRevisionFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientResolveRevisionFunc) SetDefaultReturn(r0 api.CommitID, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientResolveRevisionFunc) SetDefaultReturn(r0 api.CommitID, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFunc.PushReturn",
                    "documentation": {
                      "identifier": "GitserverClientResolveRevisionFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientResolveRevisionFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientResolveRevisionFunc) PushReturn(r0 api.CommitID, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientResolveRevisionFunc) PushReturn(r0 api.CommitID, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFunc.nextHook",
                    "documentation": {
                      "identifier": "GitserverClientResolveRevisionFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientResolveRevisionFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientResolveRevisionFunc) nextHook() func(context.Context, int, string) (api.CommitID, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientResolveRevisionFunc) nextHook() func(context.Context, int, string) (api.CommitID, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFunc.appendCall",
                    "documentation": {
                      "identifier": "GitserverClientResolveRevisionFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientResolveRevisionFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientResolveRevisionFunc) appendCall(r0 GitserverClientResolveRevisionFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientResolveRevisionFunc) appendCall(r0 GitserverClientResolveRevisionFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFunc.History",
                    "documentation": {
                      "identifier": "GitserverClientResolveRevisionFunc.History",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientResolveRevisionFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *GitserverClientResolveRevisionFunc) History() []GitserverClientResolveRevisionFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *GitserverClientResolveRevisionFunc) History() []GitserverClientResolveRevisionFuncCall\n```\n\nHistory returns a sequence of GitserverClientResolveRevisionFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFuncCall",
              "documentation": {
                "identifier": "GitserverClientResolveRevisionFuncCall",
                "newPage": false,
                "searchKey": "worker.GitserverClientResolveRevisionFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type GitserverClientResolveRevisionFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype GitserverClientResolveRevisionFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 string\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 api.CommitID\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nGitserverClientResolveRevisionFuncCall is an object that describes an invocation of method ResolveRevision on an instance of MockGitserverClient. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFuncCall.Args",
                    "documentation": {
                      "identifier": "GitserverClientResolveRevisionFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientResolveRevisionFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c GitserverClientResolveRevisionFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c GitserverClientResolveRevisionFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#GitserverClientResolveRevisionFuncCall.Results",
                    "documentation": {
                      "identifier": "GitserverClientResolveRevisionFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.GitserverClientResolveRevisionFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c GitserverClientResolveRevisionFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c GitserverClientResolveRevisionFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockLSIFStore",
              "documentation": {
                "identifier": "MockLSIFStore",
                "newPage": false,
                "searchKey": "worker.MockLSIFStore",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type MockLSIFStore struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype MockLSIFStore struct {\n\t// DoneFunc is an instance of a mock function object controlling the\n\t// behavior of the method Done.\n\tDoneFunc *LSIFStoreDoneFunc\n\t// TransactFunc is an instance of a mock function object controlling the\n\t// behavior of the method Transact.\n\tTransactFunc *LSIFStoreTransactFunc\n\t// WriteDefinitionsFunc is an instance of a mock function object\n\t// controlling the behavior of the method WriteDefinitions.\n\tWriteDefinitionsFunc *LSIFStoreWriteDefinitionsFunc\n\t// WriteDocumentationPagesFunc is an instance of a mock function object\n\t// controlling the behavior of the method WriteDocumentationPages.\n\tWriteDocumentationPagesFunc *LSIFStoreWriteDocumentationPagesFunc\n\t// WriteDocumentsFunc is an instance of a mock function object\n\t// controlling the behavior of the method WriteDocuments.\n\tWriteDocumentsFunc *LSIFStoreWriteDocumentsFunc\n\t// WriteMetaFunc is an instance of a mock function object controlling\n\t// the behavior of the method WriteMeta.\n\tWriteMetaFunc *LSIFStoreWriteMetaFunc\n\t// WriteReferencesFunc is an instance of a mock function object\n\t// controlling the behavior of the method WriteReferences.\n\tWriteReferencesFunc *LSIFStoreWriteReferencesFunc\n\t// WriteResultChunksFunc is an instance of a mock function object\n\t// controlling the behavior of the method WriteResultChunks.\n\tWriteResultChunksFunc *LSIFStoreWriteResultChunksFunc\n}\n```\n\nMockLSIFStore is a mock implementation of the LSIFStore interface (from the package github.com/sourcegraph/sourcegraph/enterprise/cmd/precise-code-intel-worker/internal/worker) used for unit testing. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#NewMockLSIFStore",
                    "documentation": {
                      "identifier": "NewMockLSIFStore",
                      "newPage": false,
                      "searchKey": "worker.NewMockLSIFStore",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewMockLSIFStore() *MockLSIFStore"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewMockLSIFStore() *MockLSIFStore\n```\n\nNewMockLSIFStore creates a new mock of the LSIFStore interface. All methods return zero values for all results, unless overwritten. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#NewMockLSIFStoreFrom",
                    "documentation": {
                      "identifier": "NewMockLSIFStoreFrom",
                      "newPage": false,
                      "searchKey": "worker.NewMockLSIFStoreFrom",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewMockLSIFStoreFrom(i LSIFStore) *MockLSIFStore"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewMockLSIFStoreFrom(i LSIFStore) *MockLSIFStore\n```\n\nNewMockLSIFStoreFrom creates a new mock of the MockLSIFStore interface. All methods delegate to the given implementation, unless overwritten. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockLSIFStore.Done",
                    "documentation": {
                      "identifier": "MockLSIFStore.Done",
                      "newPage": false,
                      "searchKey": "worker.MockLSIFStore.Done",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockLSIFStore) Done(v0 error) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockLSIFStore) Done(v0 error) error\n```\n\nDone delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockLSIFStore.Transact",
                    "documentation": {
                      "identifier": "MockLSIFStore.Transact",
                      "newPage": false,
                      "searchKey": "worker.MockLSIFStore.Transact",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockLSIFStore) Transact(v0 context.Context) (LSIFStore, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockLSIFStore) Transact(v0 context.Context) (LSIFStore, error)\n```\n\nTransact delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockLSIFStore.WriteDefinitions",
                    "documentation": {
                      "identifier": "MockLSIFStore.WriteDefinitions",
                      "newPage": false,
                      "searchKey": "worker.MockLSIFStore.WriteDefinitions",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockLSIFStore) WriteDefinitions(v0 context.Context, v1 int, v2 chan semantic.MonikerLocations) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockLSIFStore) WriteDefinitions(v0 context.Context, v1 int, v2 chan semantic.MonikerLocations) error\n```\n\nWriteDefinitions delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockLSIFStore.WriteDocumentationPages",
                    "documentation": {
                      "identifier": "MockLSIFStore.WriteDocumentationPages",
                      "newPage": false,
                      "searchKey": "worker.MockLSIFStore.WriteDocumentationPages",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockLSIFStore) WriteDocumentationPages(v0 context.Context, v1 int, v2 chan *semantic.DocumentationPageData) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockLSIFStore) WriteDocumentationPages(v0 context.Context, v1 int, v2 chan *semantic.DocumentationPageData) error\n```\n\nWriteDocumentationPages delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockLSIFStore.WriteDocuments",
                    "documentation": {
                      "identifier": "MockLSIFStore.WriteDocuments",
                      "newPage": false,
                      "searchKey": "worker.MockLSIFStore.WriteDocuments",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockLSIFStore) WriteDocuments(v0 context.Context, v1 int, v2 chan semantic.KeyedDocumentData) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockLSIFStore) WriteDocuments(v0 context.Context, v1 int, v2 chan semantic.KeyedDocumentData) error\n```\n\nWriteDocuments delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockLSIFStore.WriteMeta",
                    "documentation": {
                      "identifier": "MockLSIFStore.WriteMeta",
                      "newPage": false,
                      "searchKey": "worker.MockLSIFStore.WriteMeta",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockLSIFStore) WriteMeta(v0 context.Context, v1 int, v2 semantic.MetaData) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockLSIFStore) WriteMeta(v0 context.Context, v1 int, v2 semantic.MetaData) error\n```\n\nWriteMeta delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockLSIFStore.WriteReferences",
                    "documentation": {
                      "identifier": "MockLSIFStore.WriteReferences",
                      "newPage": false,
                      "searchKey": "worker.MockLSIFStore.WriteReferences",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockLSIFStore) WriteReferences(v0 context.Context, v1 int, v2 chan semantic.MonikerLocations) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockLSIFStore) WriteReferences(v0 context.Context, v1 int, v2 chan semantic.MonikerLocations) error\n```\n\nWriteReferences delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockLSIFStore.WriteResultChunks",
                    "documentation": {
                      "identifier": "MockLSIFStore.WriteResultChunks",
                      "newPage": false,
                      "searchKey": "worker.MockLSIFStore.WriteResultChunks",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockLSIFStore) WriteResultChunks(v0 context.Context, v1 int, v2 chan semantic.IndexedResultChunkData) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockLSIFStore) WriteResultChunks(v0 context.Context, v1 int, v2 chan semantic.IndexedResultChunkData) error\n```\n\nWriteResultChunks delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFunc",
              "documentation": {
                "identifier": "LSIFStoreDoneFunc",
                "newPage": false,
                "searchKey": "worker.LSIFStoreDoneFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreDoneFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreDoneFunc struct {\n\tdefaultHook func(error) error\n\thooks       []func(error) error\n\thistory     []LSIFStoreDoneFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nLSIFStoreDoneFunc describes the behavior when the Done method of the parent MockLSIFStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "LSIFStoreDoneFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreDoneFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreDoneFunc) SetDefaultHook(hook func(error) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreDoneFunc) SetDefaultHook(hook func(error) error)\n```\n\nSetDefaultHook sets function that is called when the Done method of the parent MockLSIFStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFunc.PushHook",
                    "documentation": {
                      "identifier": "LSIFStoreDoneFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreDoneFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreDoneFunc) PushHook(hook func(error) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreDoneFunc) PushHook(hook func(error) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the Done method of the parent MockLSIFStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "LSIFStoreDoneFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreDoneFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreDoneFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreDoneFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFunc.PushReturn",
                    "documentation": {
                      "identifier": "LSIFStoreDoneFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreDoneFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreDoneFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreDoneFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFunc.nextHook",
                    "documentation": {
                      "identifier": "LSIFStoreDoneFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreDoneFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreDoneFunc) nextHook() func(error) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreDoneFunc) nextHook() func(error) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFunc.appendCall",
                    "documentation": {
                      "identifier": "LSIFStoreDoneFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreDoneFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreDoneFunc) appendCall(r0 LSIFStoreDoneFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreDoneFunc) appendCall(r0 LSIFStoreDoneFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFunc.History",
                    "documentation": {
                      "identifier": "LSIFStoreDoneFunc.History",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreDoneFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreDoneFunc) History() []LSIFStoreDoneFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreDoneFunc) History() []LSIFStoreDoneFuncCall\n```\n\nHistory returns a sequence of LSIFStoreDoneFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFuncCall",
              "documentation": {
                "identifier": "LSIFStoreDoneFuncCall",
                "newPage": false,
                "searchKey": "worker.LSIFStoreDoneFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreDoneFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreDoneFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 error\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nLSIFStoreDoneFuncCall is an object that describes an invocation of method Done on an instance of MockLSIFStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFuncCall.Args",
                    "documentation": {
                      "identifier": "LSIFStoreDoneFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreDoneFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreDoneFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreDoneFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreDoneFuncCall.Results",
                    "documentation": {
                      "identifier": "LSIFStoreDoneFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreDoneFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreDoneFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreDoneFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFunc",
              "documentation": {
                "identifier": "LSIFStoreTransactFunc",
                "newPage": false,
                "searchKey": "worker.LSIFStoreTransactFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreTransactFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreTransactFunc struct {\n\tdefaultHook func(context.Context) (LSIFStore, error)\n\thooks       []func(context.Context) (LSIFStore, error)\n\thistory     []LSIFStoreTransactFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nLSIFStoreTransactFunc describes the behavior when the Transact method of the parent MockLSIFStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "LSIFStoreTransactFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreTransactFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreTransactFunc) SetDefaultHook(hook func(context.Context) (LSIFStore, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreTransactFunc) SetDefaultHook(hook func(context.Context) (LSIFStore, error))\n```\n\nSetDefaultHook sets function that is called when the Transact method of the parent MockLSIFStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFunc.PushHook",
                    "documentation": {
                      "identifier": "LSIFStoreTransactFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreTransactFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreTransactFunc) PushHook(hook func(context.Context) (LSIFStore, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreTransactFunc) PushHook(hook func(context.Context) (LSIFStore, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the Transact method of the parent MockLSIFStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "LSIFStoreTransactFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreTransactFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreTransactFunc) SetDefaultReturn(r0 LSIFStore, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreTransactFunc) SetDefaultReturn(r0 LSIFStore, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFunc.PushReturn",
                    "documentation": {
                      "identifier": "LSIFStoreTransactFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreTransactFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreTransactFunc) PushReturn(r0 LSIFStore, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreTransactFunc) PushReturn(r0 LSIFStore, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFunc.nextHook",
                    "documentation": {
                      "identifier": "LSIFStoreTransactFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreTransactFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreTransactFunc) nextHook() func(context.Context) (LSIFStore, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreTransactFunc) nextHook() func(context.Context) (LSIFStore, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFunc.appendCall",
                    "documentation": {
                      "identifier": "LSIFStoreTransactFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreTransactFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreTransactFunc) appendCall(r0 LSIFStoreTransactFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreTransactFunc) appendCall(r0 LSIFStoreTransactFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFunc.History",
                    "documentation": {
                      "identifier": "LSIFStoreTransactFunc.History",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreTransactFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreTransactFunc) History() []LSIFStoreTransactFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreTransactFunc) History() []LSIFStoreTransactFuncCall\n```\n\nHistory returns a sequence of LSIFStoreTransactFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFuncCall",
              "documentation": {
                "identifier": "LSIFStoreTransactFuncCall",
                "newPage": false,
                "searchKey": "worker.LSIFStoreTransactFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreTransactFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreTransactFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 LSIFStore\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nLSIFStoreTransactFuncCall is an object that describes an invocation of method Transact on an instance of MockLSIFStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFuncCall.Args",
                    "documentation": {
                      "identifier": "LSIFStoreTransactFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreTransactFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreTransactFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreTransactFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreTransactFuncCall.Results",
                    "documentation": {
                      "identifier": "LSIFStoreTransactFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreTransactFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreTransactFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreTransactFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFunc",
              "documentation": {
                "identifier": "LSIFStoreWriteDefinitionsFunc",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteDefinitionsFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteDefinitionsFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteDefinitionsFunc struct {\n\tdefaultHook func(context.Context, int, chan semantic.MonikerLocations) error\n\thooks       []func(context.Context, int, chan semantic.MonikerLocations) error\n\thistory     []LSIFStoreWriteDefinitionsFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nLSIFStoreWriteDefinitionsFunc describes the behavior when the WriteDefinitions method of the parent MockLSIFStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDefinitionsFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDefinitionsFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDefinitionsFunc) SetDefaultHook(hook func(context.Context, int, chan semantic.MonikerLocations) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDefinitionsFunc) SetDefaultHook(hook func(context.Context, int, chan semantic.MonikerLocations) error)\n```\n\nSetDefaultHook sets function that is called when the WriteDefinitions method of the parent MockLSIFStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFunc.PushHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDefinitionsFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDefinitionsFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDefinitionsFunc) PushHook(hook func(context.Context, int, chan semantic.MonikerLocations) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDefinitionsFunc) PushHook(hook func(context.Context, int, chan semantic.MonikerLocations) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the WriteDefinitions method of the parent MockLSIFStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDefinitionsFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDefinitionsFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDefinitionsFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDefinitionsFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFunc.PushReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDefinitionsFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDefinitionsFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDefinitionsFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDefinitionsFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFunc.nextHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDefinitionsFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDefinitionsFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDefinitionsFunc) nextHook() func(context.Context, int, chan semantic.MonikerLocations) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDefinitionsFunc) nextHook() func(context.Context, int, chan semantic.MonikerLocations) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFunc.appendCall",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDefinitionsFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDefinitionsFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDefinitionsFunc) appendCall(r0 LSIFStoreWriteDefinitionsFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDefinitionsFunc) appendCall(r0 LSIFStoreWriteDefinitionsFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFunc.History",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDefinitionsFunc.History",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDefinitionsFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDefinitionsFunc) History() []LSIFStoreWriteDefinitionsFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDefinitionsFunc) History() []LSIFStoreWriteDefinitionsFuncCall\n```\n\nHistory returns a sequence of LSIFStoreWriteDefinitionsFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFuncCall",
              "documentation": {
                "identifier": "LSIFStoreWriteDefinitionsFuncCall",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteDefinitionsFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteDefinitionsFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteDefinitionsFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 chan semantic.MonikerLocations\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nLSIFStoreWriteDefinitionsFuncCall is an object that describes an invocation of method WriteDefinitions on an instance of MockLSIFStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFuncCall.Args",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDefinitionsFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDefinitionsFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteDefinitionsFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteDefinitionsFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDefinitionsFuncCall.Results",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDefinitionsFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDefinitionsFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteDefinitionsFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteDefinitionsFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFunc",
              "documentation": {
                "identifier": "LSIFStoreWriteDocumentationPagesFunc",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteDocumentationPagesFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteDocumentationPagesFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteDocumentationPagesFunc struct {\n\tdefaultHook func(context.Context, int, chan *semantic.DocumentationPageData) error\n\thooks       []func(context.Context, int, chan *semantic.DocumentationPageData) error\n\thistory     []LSIFStoreWriteDocumentationPagesFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nLSIFStoreWriteDocumentationPagesFunc describes the behavior when the WriteDocumentationPages method of the parent MockLSIFStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentationPagesFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentationPagesFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentationPagesFunc) SetDefaultHook(hook func(context.Context, int, chan *semantic.DocumentationPageData) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentationPagesFunc) SetDefaultHook(hook func(context.Context, int, chan *semantic.DocumentationPageData) error)\n```\n\nSetDefaultHook sets function that is called when the WriteDocumentationPages method of the parent MockLSIFStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFunc.PushHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentationPagesFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentationPagesFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentationPagesFunc) PushHook(hook func(context.Context, int, chan *semantic.DocumentationPageData) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentationPagesFunc) PushHook(hook func(context.Context, int, chan *semantic.DocumentationPageData) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the WriteDocumentationPages method of the parent MockLSIFStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentationPagesFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentationPagesFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentationPagesFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentationPagesFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFunc.PushReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentationPagesFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentationPagesFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentationPagesFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentationPagesFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFunc.nextHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentationPagesFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentationPagesFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentationPagesFunc) nextHook() func(context.Context, int, chan *semantic.DocumentationPageData) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentationPagesFunc) nextHook() func(context.Context, int, chan *semantic.DocumentationPageData) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFunc.appendCall",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentationPagesFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentationPagesFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentationPagesFunc) appendCall(r0 LSIFStoreWriteDocumentationPagesFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentationPagesFunc) appendCall(r0 LSIFStoreWriteDocumentationPagesFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFunc.History",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentationPagesFunc.History",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentationPagesFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentationPagesFunc) History() []LSIFStoreWriteDocumentationPagesFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentationPagesFunc) History() []LSIFStoreWriteDocumentationPagesFuncCall\n```\n\nHistory returns a sequence of LSIFStoreWriteDocumentationPagesFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFuncCall",
              "documentation": {
                "identifier": "LSIFStoreWriteDocumentationPagesFuncCall",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteDocumentationPagesFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteDocumentationPagesFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteDocumentationPagesFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 chan *semantic.DocumentationPageData\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nLSIFStoreWriteDocumentationPagesFuncCall is an object that describes an invocation of method WriteDocumentationPages on an instance of MockLSIFStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFuncCall.Args",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentationPagesFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentationPagesFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteDocumentationPagesFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteDocumentationPagesFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentationPagesFuncCall.Results",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentationPagesFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentationPagesFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteDocumentationPagesFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteDocumentationPagesFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFunc",
              "documentation": {
                "identifier": "LSIFStoreWriteDocumentsFunc",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteDocumentsFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteDocumentsFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteDocumentsFunc struct {\n\tdefaultHook func(context.Context, int, chan semantic.KeyedDocumentData) error\n\thooks       []func(context.Context, int, chan semantic.KeyedDocumentData) error\n\thistory     []LSIFStoreWriteDocumentsFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nLSIFStoreWriteDocumentsFunc describes the behavior when the WriteDocuments method of the parent MockLSIFStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentsFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentsFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentsFunc) SetDefaultHook(hook func(context.Context, int, chan semantic.KeyedDocumentData) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentsFunc) SetDefaultHook(hook func(context.Context, int, chan semantic.KeyedDocumentData) error)\n```\n\nSetDefaultHook sets function that is called when the WriteDocuments method of the parent MockLSIFStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFunc.PushHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentsFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentsFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentsFunc) PushHook(hook func(context.Context, int, chan semantic.KeyedDocumentData) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentsFunc) PushHook(hook func(context.Context, int, chan semantic.KeyedDocumentData) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the WriteDocuments method of the parent MockLSIFStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentsFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentsFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentsFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentsFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFunc.PushReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentsFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentsFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentsFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentsFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFunc.nextHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentsFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentsFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentsFunc) nextHook() func(context.Context, int, chan semantic.KeyedDocumentData) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentsFunc) nextHook() func(context.Context, int, chan semantic.KeyedDocumentData) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFunc.appendCall",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentsFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentsFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentsFunc) appendCall(r0 LSIFStoreWriteDocumentsFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentsFunc) appendCall(r0 LSIFStoreWriteDocumentsFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFunc.History",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentsFunc.History",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentsFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteDocumentsFunc) History() []LSIFStoreWriteDocumentsFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteDocumentsFunc) History() []LSIFStoreWriteDocumentsFuncCall\n```\n\nHistory returns a sequence of LSIFStoreWriteDocumentsFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFuncCall",
              "documentation": {
                "identifier": "LSIFStoreWriteDocumentsFuncCall",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteDocumentsFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteDocumentsFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteDocumentsFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 chan semantic.KeyedDocumentData\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nLSIFStoreWriteDocumentsFuncCall is an object that describes an invocation of method WriteDocuments on an instance of MockLSIFStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFuncCall.Args",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentsFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentsFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteDocumentsFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteDocumentsFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteDocumentsFuncCall.Results",
                    "documentation": {
                      "identifier": "LSIFStoreWriteDocumentsFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteDocumentsFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteDocumentsFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteDocumentsFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFunc",
              "documentation": {
                "identifier": "LSIFStoreWriteMetaFunc",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteMetaFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteMetaFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteMetaFunc struct {\n\tdefaultHook func(context.Context, int, semantic.MetaData) error\n\thooks       []func(context.Context, int, semantic.MetaData) error\n\thistory     []LSIFStoreWriteMetaFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nLSIFStoreWriteMetaFunc describes the behavior when the WriteMeta method of the parent MockLSIFStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteMetaFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteMetaFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteMetaFunc) SetDefaultHook(hook func(context.Context, int, semantic.MetaData) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteMetaFunc) SetDefaultHook(hook func(context.Context, int, semantic.MetaData) error)\n```\n\nSetDefaultHook sets function that is called when the WriteMeta method of the parent MockLSIFStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFunc.PushHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteMetaFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteMetaFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteMetaFunc) PushHook(hook func(context.Context, int, semantic.MetaData) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteMetaFunc) PushHook(hook func(context.Context, int, semantic.MetaData) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the WriteMeta method of the parent MockLSIFStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteMetaFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteMetaFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteMetaFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteMetaFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFunc.PushReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteMetaFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteMetaFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteMetaFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteMetaFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFunc.nextHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteMetaFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteMetaFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteMetaFunc) nextHook() func(context.Context, int, semantic.MetaData) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteMetaFunc) nextHook() func(context.Context, int, semantic.MetaData) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFunc.appendCall",
                    "documentation": {
                      "identifier": "LSIFStoreWriteMetaFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteMetaFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteMetaFunc) appendCall(r0 LSIFStoreWriteMetaFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteMetaFunc) appendCall(r0 LSIFStoreWriteMetaFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFunc.History",
                    "documentation": {
                      "identifier": "LSIFStoreWriteMetaFunc.History",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteMetaFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteMetaFunc) History() []LSIFStoreWriteMetaFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteMetaFunc) History() []LSIFStoreWriteMetaFuncCall\n```\n\nHistory returns a sequence of LSIFStoreWriteMetaFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFuncCall",
              "documentation": {
                "identifier": "LSIFStoreWriteMetaFuncCall",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteMetaFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteMetaFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteMetaFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 semantic.MetaData\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nLSIFStoreWriteMetaFuncCall is an object that describes an invocation of method WriteMeta on an instance of MockLSIFStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFuncCall.Args",
                    "documentation": {
                      "identifier": "LSIFStoreWriteMetaFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteMetaFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteMetaFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteMetaFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteMetaFuncCall.Results",
                    "documentation": {
                      "identifier": "LSIFStoreWriteMetaFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteMetaFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteMetaFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteMetaFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFunc",
              "documentation": {
                "identifier": "LSIFStoreWriteReferencesFunc",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteReferencesFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteReferencesFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteReferencesFunc struct {\n\tdefaultHook func(context.Context, int, chan semantic.MonikerLocations) error\n\thooks       []func(context.Context, int, chan semantic.MonikerLocations) error\n\thistory     []LSIFStoreWriteReferencesFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nLSIFStoreWriteReferencesFunc describes the behavior when the WriteReferences method of the parent MockLSIFStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteReferencesFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteReferencesFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteReferencesFunc) SetDefaultHook(hook func(context.Context, int, chan semantic.MonikerLocations) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteReferencesFunc) SetDefaultHook(hook func(context.Context, int, chan semantic.MonikerLocations) error)\n```\n\nSetDefaultHook sets function that is called when the WriteReferences method of the parent MockLSIFStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFunc.PushHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteReferencesFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteReferencesFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteReferencesFunc) PushHook(hook func(context.Context, int, chan semantic.MonikerLocations) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteReferencesFunc) PushHook(hook func(context.Context, int, chan semantic.MonikerLocations) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the WriteReferences method of the parent MockLSIFStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteReferencesFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteReferencesFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteReferencesFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteReferencesFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFunc.PushReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteReferencesFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteReferencesFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteReferencesFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteReferencesFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFunc.nextHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteReferencesFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteReferencesFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteReferencesFunc) nextHook() func(context.Context, int, chan semantic.MonikerLocations) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteReferencesFunc) nextHook() func(context.Context, int, chan semantic.MonikerLocations) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFunc.appendCall",
                    "documentation": {
                      "identifier": "LSIFStoreWriteReferencesFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteReferencesFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteReferencesFunc) appendCall(r0 LSIFStoreWriteReferencesFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteReferencesFunc) appendCall(r0 LSIFStoreWriteReferencesFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFunc.History",
                    "documentation": {
                      "identifier": "LSIFStoreWriteReferencesFunc.History",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteReferencesFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteReferencesFunc) History() []LSIFStoreWriteReferencesFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteReferencesFunc) History() []LSIFStoreWriteReferencesFuncCall\n```\n\nHistory returns a sequence of LSIFStoreWriteReferencesFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFuncCall",
              "documentation": {
                "identifier": "LSIFStoreWriteReferencesFuncCall",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteReferencesFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteReferencesFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteReferencesFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 chan semantic.MonikerLocations\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nLSIFStoreWriteReferencesFuncCall is an object that describes an invocation of method WriteReferences on an instance of MockLSIFStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFuncCall.Args",
                    "documentation": {
                      "identifier": "LSIFStoreWriteReferencesFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteReferencesFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteReferencesFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteReferencesFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteReferencesFuncCall.Results",
                    "documentation": {
                      "identifier": "LSIFStoreWriteReferencesFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteReferencesFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteReferencesFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteReferencesFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFunc",
              "documentation": {
                "identifier": "LSIFStoreWriteResultChunksFunc",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteResultChunksFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteResultChunksFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteResultChunksFunc struct {\n\tdefaultHook func(context.Context, int, chan semantic.IndexedResultChunkData) error\n\thooks       []func(context.Context, int, chan semantic.IndexedResultChunkData) error\n\thistory     []LSIFStoreWriteResultChunksFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nLSIFStoreWriteResultChunksFunc describes the behavior when the WriteResultChunks method of the parent MockLSIFStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteResultChunksFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteResultChunksFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteResultChunksFunc) SetDefaultHook(hook func(context.Context, int, chan semantic.IndexedResultChunkData) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteResultChunksFunc) SetDefaultHook(hook func(context.Context, int, chan semantic.IndexedResultChunkData) error)\n```\n\nSetDefaultHook sets function that is called when the WriteResultChunks method of the parent MockLSIFStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFunc.PushHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteResultChunksFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteResultChunksFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteResultChunksFunc) PushHook(hook func(context.Context, int, chan semantic.IndexedResultChunkData) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteResultChunksFunc) PushHook(hook func(context.Context, int, chan semantic.IndexedResultChunkData) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the WriteResultChunks method of the parent MockLSIFStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteResultChunksFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteResultChunksFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteResultChunksFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteResultChunksFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFunc.PushReturn",
                    "documentation": {
                      "identifier": "LSIFStoreWriteResultChunksFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteResultChunksFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteResultChunksFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteResultChunksFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFunc.nextHook",
                    "documentation": {
                      "identifier": "LSIFStoreWriteResultChunksFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteResultChunksFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteResultChunksFunc) nextHook() func(context.Context, int, chan semantic.IndexedResultChunkData) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteResultChunksFunc) nextHook() func(context.Context, int, chan semantic.IndexedResultChunkData) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFunc.appendCall",
                    "documentation": {
                      "identifier": "LSIFStoreWriteResultChunksFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteResultChunksFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteResultChunksFunc) appendCall(r0 LSIFStoreWriteResultChunksFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteResultChunksFunc) appendCall(r0 LSIFStoreWriteResultChunksFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFunc.History",
                    "documentation": {
                      "identifier": "LSIFStoreWriteResultChunksFunc.History",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteResultChunksFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *LSIFStoreWriteResultChunksFunc) History() []LSIFStoreWriteResultChunksFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *LSIFStoreWriteResultChunksFunc) History() []LSIFStoreWriteResultChunksFuncCall\n```\n\nHistory returns a sequence of LSIFStoreWriteResultChunksFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFuncCall",
              "documentation": {
                "identifier": "LSIFStoreWriteResultChunksFuncCall",
                "newPage": false,
                "searchKey": "worker.LSIFStoreWriteResultChunksFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type LSIFStoreWriteResultChunksFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LSIFStoreWriteResultChunksFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 chan semantic.IndexedResultChunkData\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nLSIFStoreWriteResultChunksFuncCall is an object that describes an invocation of method WriteResultChunks on an instance of MockLSIFStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFuncCall.Args",
                    "documentation": {
                      "identifier": "LSIFStoreWriteResultChunksFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteResultChunksFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteResultChunksFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteResultChunksFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#LSIFStoreWriteResultChunksFuncCall.Results",
                    "documentation": {
                      "identifier": "LSIFStoreWriteResultChunksFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.LSIFStoreWriteResultChunksFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c LSIFStoreWriteResultChunksFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c LSIFStoreWriteResultChunksFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore",
              "documentation": {
                "identifier": "MockWorkerStore",
                "newPage": false,
                "searchKey": "worker.MockWorkerStore",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type MockWorkerStore struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype MockWorkerStore struct {\n\t// AddExecutionLogEntryFunc is an instance of a mock function object\n\t// controlling the behavior of the method AddExecutionLogEntry.\n\tAddExecutionLogEntryFunc *WorkerStoreAddExecutionLogEntryFunc\n\t// DequeueFunc is an instance of a mock function object controlling the\n\t// behavior of the method Dequeue.\n\tDequeueFunc *WorkerStoreDequeueFunc\n\t// DequeueWithIndependentTransactionContextFunc is an instance of a mock\n\t// function object controlling the behavior of the method\n\t// DequeueWithIndependentTransactionContext.\n\tDequeueWithIndependentTransactionContextFunc *WorkerStoreDequeueWithIndependentTransactionContextFunc\n\t// DoneFunc is an instance of a mock function object controlling the\n\t// behavior of the method Done.\n\tDoneFunc *WorkerStoreDoneFunc\n\t// HandleFunc is an instance of a mock function object controlling the\n\t// behavior of the method Handle.\n\tHandleFunc *WorkerStoreHandleFunc\n\t// MarkCompleteFunc is an instance of a mock function object controlling\n\t// the behavior of the method MarkComplete.\n\tMarkCompleteFunc *WorkerStoreMarkCompleteFunc\n\t// MarkErroredFunc is an instance of a mock function object controlling\n\t// the behavior of the method MarkErrored.\n\tMarkErroredFunc *WorkerStoreMarkErroredFunc\n\t// MarkFailedFunc is an instance of a mock function object controlling\n\t// the behavior of the method MarkFailed.\n\tMarkFailedFunc *WorkerStoreMarkFailedFunc\n\t// QueuedCountFunc is an instance of a mock function object controlling\n\t// the behavior of the method QueuedCount.\n\tQueuedCountFunc *WorkerStoreQueuedCountFunc\n\t// RequeueFunc is an instance of a mock function object controlling the\n\t// behavior of the method Requeue.\n\tRequeueFunc *WorkerStoreRequeueFunc\n\t// ResetStalledFunc is an instance of a mock function object controlling\n\t// the behavior of the method ResetStalled.\n\tResetStalledFunc *WorkerStoreResetStalledFunc\n}\n```\n\nMockWorkerStore is a mock implementation of the Store interface (from the package github.com/sourcegraph/sourcegraph/internal/workerutil/dbworker/store) used for unit testing. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#NewMockWorkerStore",
                    "documentation": {
                      "identifier": "NewMockWorkerStore",
                      "newPage": false,
                      "searchKey": "worker.NewMockWorkerStore",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewMockWorkerStore() *MockWorkerStore"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewMockWorkerStore() *MockWorkerStore\n```\n\nNewMockWorkerStore creates a new mock of the Store interface. All methods return zero values for all results, unless overwritten. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#NewMockWorkerStoreFrom",
                    "documentation": {
                      "identifier": "NewMockWorkerStoreFrom",
                      "newPage": false,
                      "searchKey": "worker.NewMockWorkerStoreFrom",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewMockWorkerStoreFrom(i store.Store) *MockWorkerStore"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewMockWorkerStoreFrom(i store.Store) *MockWorkerStore\n```\n\nNewMockWorkerStoreFrom creates a new mock of the MockWorkerStore interface. All methods delegate to the given implementation, unless overwritten. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.AddExecutionLogEntry",
                    "documentation": {
                      "identifier": "MockWorkerStore.AddExecutionLogEntry",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.AddExecutionLogEntry",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) AddExecutionLogEntry(v0 context.Context, v1 int, v2 workerutil.ExecutionLogEntry) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) AddExecutionLogEntry(v0 context.Context, v1 int, v2 workerutil.ExecutionLogEntry) error\n```\n\nAddExecutionLogEntry delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.Dequeue",
                    "documentation": {
                      "identifier": "MockWorkerStore.Dequeue",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.Dequeue",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) Dequeue(v0 context.Context, v1 []*sqlf.Query) (workerutil.Record, store.Store, bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) Dequeue(v0 context.Context, v1 []*sqlf.Query) (workerutil.Record, store.Store, bool, error)\n```\n\nDequeue delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.DequeueWithIndependentTransactionContext",
                    "documentation": {
                      "identifier": "MockWorkerStore.DequeueWithIndependentTransactionContext",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.DequeueWithIndependentTransactionContext",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) DequeueWithIndependentTransactionContext(v0 context.Context, v1 []*sqlf.Query) (workerutil.Record, store.Store, bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) DequeueWithIndependentTransactionContext(v0 context.Context, v1 []*sqlf.Query) (workerutil.Record, store.Store, bool, error)\n```\n\nDequeueWithIndependentTransactionContext delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.Done",
                    "documentation": {
                      "identifier": "MockWorkerStore.Done",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.Done",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) Done(v0 error) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) Done(v0 error) error\n```\n\nDone delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.Handle",
                    "documentation": {
                      "identifier": "MockWorkerStore.Handle",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.Handle",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) Handle() *basestore.TransactableHandle"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) Handle() *basestore.TransactableHandle\n```\n\nHandle delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.MarkComplete",
                    "documentation": {
                      "identifier": "MockWorkerStore.MarkComplete",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.MarkComplete",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) MarkComplete(v0 context.Context, v1 int) (bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) MarkComplete(v0 context.Context, v1 int) (bool, error)\n```\n\nMarkComplete delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.MarkErrored",
                    "documentation": {
                      "identifier": "MockWorkerStore.MarkErrored",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.MarkErrored",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) MarkErrored(v0 context.Context, v1 int, v2 string) (bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) MarkErrored(v0 context.Context, v1 int, v2 string) (bool, error)\n```\n\nMarkErrored delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.MarkFailed",
                    "documentation": {
                      "identifier": "MockWorkerStore.MarkFailed",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.MarkFailed",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) MarkFailed(v0 context.Context, v1 int, v2 string) (bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) MarkFailed(v0 context.Context, v1 int, v2 string) (bool, error)\n```\n\nMarkFailed delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.QueuedCount",
                    "documentation": {
                      "identifier": "MockWorkerStore.QueuedCount",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.QueuedCount",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) QueuedCount(v0 context.Context, v1 []*sqlf.Query) (int, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) QueuedCount(v0 context.Context, v1 []*sqlf.Query) (int, error)\n```\n\nQueuedCount delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.Requeue",
                    "documentation": {
                      "identifier": "MockWorkerStore.Requeue",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.Requeue",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) Requeue(v0 context.Context, v1 int, v2 time.Time) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) Requeue(v0 context.Context, v1 int, v2 time.Time) error\n```\n\nRequeue delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#MockWorkerStore.ResetStalled",
                    "documentation": {
                      "identifier": "MockWorkerStore.ResetStalled",
                      "newPage": false,
                      "searchKey": "worker.MockWorkerStore.ResetStalled",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (m *MockWorkerStore) ResetStalled(v0 context.Context) ([]int, []int, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (m *MockWorkerStore) ResetStalled(v0 context.Context) ([]int, []int, error)\n```\n\nResetStalled delegates to the next hook function in the queue and stores the parameter and result values of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFunc",
              "documentation": {
                "identifier": "WorkerStoreAddExecutionLogEntryFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreAddExecutionLogEntryFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreAddExecutionLogEntryFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreAddExecutionLogEntryFunc struct {\n\tdefaultHook func(context.Context, int, workerutil.ExecutionLogEntry) error\n\thooks       []func(context.Context, int, workerutil.ExecutionLogEntry) error\n\thistory     []WorkerStoreAddExecutionLogEntryFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreAddExecutionLogEntryFunc describes the behavior when the AddExecutionLogEntry method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreAddExecutionLogEntryFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreAddExecutionLogEntryFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreAddExecutionLogEntryFunc) SetDefaultHook(hook func(context.Context, int, workerutil.ExecutionLogEntry) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreAddExecutionLogEntryFunc) SetDefaultHook(hook func(context.Context, int, workerutil.ExecutionLogEntry) error)\n```\n\nSetDefaultHook sets function that is called when the AddExecutionLogEntry method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreAddExecutionLogEntryFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreAddExecutionLogEntryFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreAddExecutionLogEntryFunc) PushHook(hook func(context.Context, int, workerutil.ExecutionLogEntry) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreAddExecutionLogEntryFunc) PushHook(hook func(context.Context, int, workerutil.ExecutionLogEntry) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the AddExecutionLogEntry method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreAddExecutionLogEntryFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreAddExecutionLogEntryFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreAddExecutionLogEntryFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreAddExecutionLogEntryFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreAddExecutionLogEntryFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreAddExecutionLogEntryFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreAddExecutionLogEntryFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreAddExecutionLogEntryFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreAddExecutionLogEntryFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreAddExecutionLogEntryFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreAddExecutionLogEntryFunc) nextHook() func(context.Context, int, workerutil.ExecutionLogEntry) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreAddExecutionLogEntryFunc) nextHook() func(context.Context, int, workerutil.ExecutionLogEntry) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreAddExecutionLogEntryFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreAddExecutionLogEntryFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreAddExecutionLogEntryFunc) appendCall(r0 WorkerStoreAddExecutionLogEntryFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreAddExecutionLogEntryFunc) appendCall(r0 WorkerStoreAddExecutionLogEntryFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreAddExecutionLogEntryFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreAddExecutionLogEntryFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreAddExecutionLogEntryFunc) History() []WorkerStoreAddExecutionLogEntryFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreAddExecutionLogEntryFunc) History() []WorkerStoreAddExecutionLogEntryFuncCall\n```\n\nHistory returns a sequence of WorkerStoreAddExecutionLogEntryFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFuncCall",
              "documentation": {
                "identifier": "WorkerStoreAddExecutionLogEntryFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreAddExecutionLogEntryFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreAddExecutionLogEntryFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreAddExecutionLogEntryFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 workerutil.ExecutionLogEntry\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nWorkerStoreAddExecutionLogEntryFuncCall is an object that describes an invocation of method AddExecutionLogEntry on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreAddExecutionLogEntryFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreAddExecutionLogEntryFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreAddExecutionLogEntryFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreAddExecutionLogEntryFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreAddExecutionLogEntryFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreAddExecutionLogEntryFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreAddExecutionLogEntryFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreAddExecutionLogEntryFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreAddExecutionLogEntryFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFunc",
              "documentation": {
                "identifier": "WorkerStoreDequeueFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreDequeueFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreDequeueFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreDequeueFunc struct {\n\tdefaultHook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error)\n\thooks       []func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error)\n\thistory     []WorkerStoreDequeueFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreDequeueFunc describes the behavior when the Dequeue method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueFunc) SetDefaultHook(hook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueFunc) SetDefaultHook(hook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error))\n```\n\nSetDefaultHook sets function that is called when the Dequeue method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueFunc) PushHook(hook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueFunc) PushHook(hook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the Dequeue method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueFunc) SetDefaultReturn(r0 workerutil.Record, r1 store.Store, r2 bool, r3 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueFunc) SetDefaultReturn(r0 workerutil.Record, r1 store.Store, r2 bool, r3 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueFunc) PushReturn(r0 workerutil.Record, r1 store.Store, r2 bool, r3 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueFunc) PushReturn(r0 workerutil.Record, r1 store.Store, r2 bool, r3 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueFunc) nextHook() func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueFunc) nextHook() func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueFunc) appendCall(r0 WorkerStoreDequeueFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueFunc) appendCall(r0 WorkerStoreDequeueFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueFunc) History() []WorkerStoreDequeueFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueFunc) History() []WorkerStoreDequeueFuncCall\n```\n\nHistory returns a sequence of WorkerStoreDequeueFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFuncCall",
              "documentation": {
                "identifier": "WorkerStoreDequeueFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreDequeueFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreDequeueFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreDequeueFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 []*sqlf.Query\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 workerutil.Record\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 store.Store\n\t// Result2 is the value of the 3rd result returned from this method\n\t// invocation.\n\tResult2 bool\n\t// Result3 is the value of the 4th result returned from this method\n\t// invocation.\n\tResult3 error\n}\n```\n\nWorkerStoreDequeueFuncCall is an object that describes an invocation of method Dequeue on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreDequeueFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreDequeueFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreDequeueFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreDequeueFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFunc",
              "documentation": {
                "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreDequeueWithIndependentTransactionContextFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreDequeueWithIndependentTransactionContextFunc struct {\n\tdefaultHook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error)\n\thooks       []func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error)\n\thistory     []WorkerStoreDequeueWithIndependentTransactionContextFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreDequeueWithIndependentTransactionContextFunc describes the behavior when the DequeueWithIndependentTransactionContext method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) SetDefaultHook(hook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) SetDefaultHook(hook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error))\n```\n\nSetDefaultHook sets function that is called when the DequeueWithIndependentTransactionContext method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) PushHook(hook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) PushHook(hook func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the DequeueWithIndependentTransactionContext method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) SetDefaultReturn(r0 workerutil.Record, r1 store.Store, r2 bool, r3 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) SetDefaultReturn(r0 workerutil.Record, r1 store.Store, r2 bool, r3 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) PushReturn(r0 workerutil.Record, r1 store.Store, r2 bool, r3 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) PushReturn(r0 workerutil.Record, r1 store.Store, r2 bool, r3 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) nextHook() func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) nextHook() func(context.Context, []*sqlf.Query) (workerutil.Record, store.Store, bool, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) appendCall(r0 WorkerStoreDequeueWithIndependentTransactionContextFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) appendCall(r0 WorkerStoreDequeueWithIndependentTransactionContextFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) History() []WorkerStoreDequeueWithIndependentTransactionContextFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDequeueWithIndependentTransactionContextFunc) History() []WorkerStoreDequeueWithIndependentTransactionContextFuncCall\n```\n\nHistory returns a sequence of WorkerStoreDequeueWithIndependentTransactionContextFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFuncCall",
              "documentation": {
                "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreDequeueWithIndependentTransactionContextFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreDequeueWithIndependentTransactionContextFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 []*sqlf.Query\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 workerutil.Record\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 store.Store\n\t// Result2 is the value of the 3rd result returned from this method\n\t// invocation.\n\tResult2 bool\n\t// Result3 is the value of the 4th result returned from this method\n\t// invocation.\n\tResult3 error\n}\n```\n\nWorkerStoreDequeueWithIndependentTransactionContextFuncCall is an object that describes an invocation of method DequeueWithIndependentTransactionContext on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreDequeueWithIndependentTransactionContextFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreDequeueWithIndependentTransactionContextFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDequeueWithIndependentTransactionContextFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreDequeueWithIndependentTransactionContextFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDequeueWithIndependentTransactionContextFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreDequeueWithIndependentTransactionContextFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreDequeueWithIndependentTransactionContextFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFunc",
              "documentation": {
                "identifier": "WorkerStoreDoneFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreDoneFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreDoneFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreDoneFunc struct {\n\tdefaultHook func(error) error\n\thooks       []func(error) error\n\thistory     []WorkerStoreDoneFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreDoneFunc describes the behavior when the Done method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreDoneFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDoneFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDoneFunc) SetDefaultHook(hook func(error) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDoneFunc) SetDefaultHook(hook func(error) error)\n```\n\nSetDefaultHook sets function that is called when the Done method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreDoneFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDoneFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDoneFunc) PushHook(hook func(error) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDoneFunc) PushHook(hook func(error) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the Done method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreDoneFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDoneFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDoneFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDoneFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreDoneFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDoneFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDoneFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDoneFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreDoneFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDoneFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDoneFunc) nextHook() func(error) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDoneFunc) nextHook() func(error) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreDoneFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDoneFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDoneFunc) appendCall(r0 WorkerStoreDoneFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDoneFunc) appendCall(r0 WorkerStoreDoneFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreDoneFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDoneFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreDoneFunc) History() []WorkerStoreDoneFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreDoneFunc) History() []WorkerStoreDoneFuncCall\n```\n\nHistory returns a sequence of WorkerStoreDoneFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFuncCall",
              "documentation": {
                "identifier": "WorkerStoreDoneFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreDoneFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreDoneFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreDoneFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 error\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nWorkerStoreDoneFuncCall is an object that describes an invocation of method Done on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreDoneFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDoneFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreDoneFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreDoneFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreDoneFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreDoneFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreDoneFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreDoneFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreDoneFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFunc",
              "documentation": {
                "identifier": "WorkerStoreHandleFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreHandleFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreHandleFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreHandleFunc struct {\n\tdefaultHook func() *basestore.TransactableHandle\n\thooks       []func() *basestore.TransactableHandle\n\thistory     []WorkerStoreHandleFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreHandleFunc describes the behavior when the Handle method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreHandleFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreHandleFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreHandleFunc) SetDefaultHook(hook func() *basestore.TransactableHandle)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreHandleFunc) SetDefaultHook(hook func() *basestore.TransactableHandle)\n```\n\nSetDefaultHook sets function that is called when the Handle method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreHandleFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreHandleFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreHandleFunc) PushHook(hook func() *basestore.TransactableHandle)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreHandleFunc) PushHook(hook func() *basestore.TransactableHandle)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the Handle method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreHandleFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreHandleFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreHandleFunc) SetDefaultReturn(r0 *basestore.TransactableHandle)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreHandleFunc) SetDefaultReturn(r0 *basestore.TransactableHandle)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreHandleFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreHandleFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreHandleFunc) PushReturn(r0 *basestore.TransactableHandle)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreHandleFunc) PushReturn(r0 *basestore.TransactableHandle)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreHandleFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreHandleFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreHandleFunc) nextHook() func() *basestore.TransactableHandle"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreHandleFunc) nextHook() func() *basestore.TransactableHandle\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreHandleFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreHandleFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreHandleFunc) appendCall(r0 WorkerStoreHandleFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreHandleFunc) appendCall(r0 WorkerStoreHandleFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreHandleFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreHandleFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreHandleFunc) History() []WorkerStoreHandleFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreHandleFunc) History() []WorkerStoreHandleFuncCall\n```\n\nHistory returns a sequence of WorkerStoreHandleFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFuncCall",
              "documentation": {
                "identifier": "WorkerStoreHandleFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreHandleFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreHandleFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreHandleFuncCall struct {\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 *basestore.TransactableHandle\n}\n```\n\nWorkerStoreHandleFuncCall is an object that describes an invocation of method Handle on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreHandleFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreHandleFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreHandleFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreHandleFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreHandleFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreHandleFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreHandleFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreHandleFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreHandleFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFunc",
              "documentation": {
                "identifier": "WorkerStoreMarkCompleteFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreMarkCompleteFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreMarkCompleteFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreMarkCompleteFunc struct {\n\tdefaultHook func(context.Context, int) (bool, error)\n\thooks       []func(context.Context, int) (bool, error)\n\thistory     []WorkerStoreMarkCompleteFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreMarkCompleteFunc describes the behavior when the MarkComplete method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreMarkCompleteFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkCompleteFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkCompleteFunc) SetDefaultHook(hook func(context.Context, int) (bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkCompleteFunc) SetDefaultHook(hook func(context.Context, int) (bool, error))\n```\n\nSetDefaultHook sets function that is called when the MarkComplete method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreMarkCompleteFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkCompleteFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkCompleteFunc) PushHook(hook func(context.Context, int) (bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkCompleteFunc) PushHook(hook func(context.Context, int) (bool, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the MarkComplete method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreMarkCompleteFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkCompleteFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkCompleteFunc) SetDefaultReturn(r0 bool, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkCompleteFunc) SetDefaultReturn(r0 bool, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreMarkCompleteFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkCompleteFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkCompleteFunc) PushReturn(r0 bool, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkCompleteFunc) PushReturn(r0 bool, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreMarkCompleteFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkCompleteFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkCompleteFunc) nextHook() func(context.Context, int) (bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkCompleteFunc) nextHook() func(context.Context, int) (bool, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreMarkCompleteFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkCompleteFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkCompleteFunc) appendCall(r0 WorkerStoreMarkCompleteFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkCompleteFunc) appendCall(r0 WorkerStoreMarkCompleteFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreMarkCompleteFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkCompleteFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkCompleteFunc) History() []WorkerStoreMarkCompleteFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkCompleteFunc) History() []WorkerStoreMarkCompleteFuncCall\n```\n\nHistory returns a sequence of WorkerStoreMarkCompleteFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFuncCall",
              "documentation": {
                "identifier": "WorkerStoreMarkCompleteFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreMarkCompleteFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreMarkCompleteFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreMarkCompleteFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 bool\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nWorkerStoreMarkCompleteFuncCall is an object that describes an invocation of method MarkComplete on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreMarkCompleteFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkCompleteFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreMarkCompleteFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreMarkCompleteFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkCompleteFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreMarkCompleteFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkCompleteFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreMarkCompleteFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreMarkCompleteFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFunc",
              "documentation": {
                "identifier": "WorkerStoreMarkErroredFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreMarkErroredFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreMarkErroredFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreMarkErroredFunc struct {\n\tdefaultHook func(context.Context, int, string) (bool, error)\n\thooks       []func(context.Context, int, string) (bool, error)\n\thistory     []WorkerStoreMarkErroredFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreMarkErroredFunc describes the behavior when the MarkErrored method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreMarkErroredFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkErroredFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkErroredFunc) SetDefaultHook(hook func(context.Context, int, string) (bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkErroredFunc) SetDefaultHook(hook func(context.Context, int, string) (bool, error))\n```\n\nSetDefaultHook sets function that is called when the MarkErrored method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreMarkErroredFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkErroredFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkErroredFunc) PushHook(hook func(context.Context, int, string) (bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkErroredFunc) PushHook(hook func(context.Context, int, string) (bool, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the MarkErrored method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreMarkErroredFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkErroredFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkErroredFunc) SetDefaultReturn(r0 bool, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkErroredFunc) SetDefaultReturn(r0 bool, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreMarkErroredFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkErroredFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkErroredFunc) PushReturn(r0 bool, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkErroredFunc) PushReturn(r0 bool, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreMarkErroredFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkErroredFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkErroredFunc) nextHook() func(context.Context, int, string) (bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkErroredFunc) nextHook() func(context.Context, int, string) (bool, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreMarkErroredFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkErroredFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkErroredFunc) appendCall(r0 WorkerStoreMarkErroredFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkErroredFunc) appendCall(r0 WorkerStoreMarkErroredFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreMarkErroredFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkErroredFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkErroredFunc) History() []WorkerStoreMarkErroredFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkErroredFunc) History() []WorkerStoreMarkErroredFuncCall\n```\n\nHistory returns a sequence of WorkerStoreMarkErroredFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFuncCall",
              "documentation": {
                "identifier": "WorkerStoreMarkErroredFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreMarkErroredFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreMarkErroredFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreMarkErroredFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 string\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 bool\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nWorkerStoreMarkErroredFuncCall is an object that describes an invocation of method MarkErrored on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreMarkErroredFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkErroredFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreMarkErroredFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreMarkErroredFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkErroredFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreMarkErroredFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkErroredFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreMarkErroredFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreMarkErroredFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFunc",
              "documentation": {
                "identifier": "WorkerStoreMarkFailedFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreMarkFailedFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreMarkFailedFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreMarkFailedFunc struct {\n\tdefaultHook func(context.Context, int, string) (bool, error)\n\thooks       []func(context.Context, int, string) (bool, error)\n\thistory     []WorkerStoreMarkFailedFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreMarkFailedFunc describes the behavior when the MarkFailed method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreMarkFailedFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkFailedFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkFailedFunc) SetDefaultHook(hook func(context.Context, int, string) (bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkFailedFunc) SetDefaultHook(hook func(context.Context, int, string) (bool, error))\n```\n\nSetDefaultHook sets function that is called when the MarkFailed method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreMarkFailedFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkFailedFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkFailedFunc) PushHook(hook func(context.Context, int, string) (bool, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkFailedFunc) PushHook(hook func(context.Context, int, string) (bool, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the MarkFailed method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreMarkFailedFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkFailedFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkFailedFunc) SetDefaultReturn(r0 bool, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkFailedFunc) SetDefaultReturn(r0 bool, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreMarkFailedFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkFailedFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkFailedFunc) PushReturn(r0 bool, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkFailedFunc) PushReturn(r0 bool, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreMarkFailedFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkFailedFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkFailedFunc) nextHook() func(context.Context, int, string) (bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkFailedFunc) nextHook() func(context.Context, int, string) (bool, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreMarkFailedFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkFailedFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkFailedFunc) appendCall(r0 WorkerStoreMarkFailedFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkFailedFunc) appendCall(r0 WorkerStoreMarkFailedFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreMarkFailedFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkFailedFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreMarkFailedFunc) History() []WorkerStoreMarkFailedFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreMarkFailedFunc) History() []WorkerStoreMarkFailedFuncCall\n```\n\nHistory returns a sequence of WorkerStoreMarkFailedFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFuncCall",
              "documentation": {
                "identifier": "WorkerStoreMarkFailedFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreMarkFailedFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreMarkFailedFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreMarkFailedFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 string\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 bool\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nWorkerStoreMarkFailedFuncCall is an object that describes an invocation of method MarkFailed on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreMarkFailedFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkFailedFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreMarkFailedFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreMarkFailedFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreMarkFailedFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreMarkFailedFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreMarkFailedFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreMarkFailedFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreMarkFailedFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFunc",
              "documentation": {
                "identifier": "WorkerStoreQueuedCountFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreQueuedCountFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreQueuedCountFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreQueuedCountFunc struct {\n\tdefaultHook func(context.Context, []*sqlf.Query) (int, error)\n\thooks       []func(context.Context, []*sqlf.Query) (int, error)\n\thistory     []WorkerStoreQueuedCountFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreQueuedCountFunc describes the behavior when the QueuedCount method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreQueuedCountFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreQueuedCountFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreQueuedCountFunc) SetDefaultHook(hook func(context.Context, []*sqlf.Query) (int, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreQueuedCountFunc) SetDefaultHook(hook func(context.Context, []*sqlf.Query) (int, error))\n```\n\nSetDefaultHook sets function that is called when the QueuedCount method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreQueuedCountFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreQueuedCountFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreQueuedCountFunc) PushHook(hook func(context.Context, []*sqlf.Query) (int, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreQueuedCountFunc) PushHook(hook func(context.Context, []*sqlf.Query) (int, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the QueuedCount method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreQueuedCountFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreQueuedCountFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreQueuedCountFunc) SetDefaultReturn(r0 int, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreQueuedCountFunc) SetDefaultReturn(r0 int, r1 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreQueuedCountFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreQueuedCountFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreQueuedCountFunc) PushReturn(r0 int, r1 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreQueuedCountFunc) PushReturn(r0 int, r1 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreQueuedCountFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreQueuedCountFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreQueuedCountFunc) nextHook() func(context.Context, []*sqlf.Query) (int, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreQueuedCountFunc) nextHook() func(context.Context, []*sqlf.Query) (int, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreQueuedCountFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreQueuedCountFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreQueuedCountFunc) appendCall(r0 WorkerStoreQueuedCountFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreQueuedCountFunc) appendCall(r0 WorkerStoreQueuedCountFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreQueuedCountFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreQueuedCountFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreQueuedCountFunc) History() []WorkerStoreQueuedCountFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreQueuedCountFunc) History() []WorkerStoreQueuedCountFuncCall\n```\n\nHistory returns a sequence of WorkerStoreQueuedCountFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFuncCall",
              "documentation": {
                "identifier": "WorkerStoreQueuedCountFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreQueuedCountFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreQueuedCountFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreQueuedCountFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 []*sqlf.Query\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 int\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 error\n}\n```\n\nWorkerStoreQueuedCountFuncCall is an object that describes an invocation of method QueuedCount on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreQueuedCountFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreQueuedCountFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreQueuedCountFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreQueuedCountFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreQueuedCountFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreQueuedCountFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreQueuedCountFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreQueuedCountFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreQueuedCountFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFunc",
              "documentation": {
                "identifier": "WorkerStoreRequeueFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreRequeueFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreRequeueFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreRequeueFunc struct {\n\tdefaultHook func(context.Context, int, time.Time) error\n\thooks       []func(context.Context, int, time.Time) error\n\thistory     []WorkerStoreRequeueFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreRequeueFunc describes the behavior when the Requeue method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreRequeueFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreRequeueFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreRequeueFunc) SetDefaultHook(hook func(context.Context, int, time.Time) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreRequeueFunc) SetDefaultHook(hook func(context.Context, int, time.Time) error)\n```\n\nSetDefaultHook sets function that is called when the Requeue method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreRequeueFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreRequeueFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreRequeueFunc) PushHook(hook func(context.Context, int, time.Time) error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreRequeueFunc) PushHook(hook func(context.Context, int, time.Time) error)\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the Requeue method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreRequeueFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreRequeueFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreRequeueFunc) SetDefaultReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreRequeueFunc) SetDefaultReturn(r0 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreRequeueFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreRequeueFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreRequeueFunc) PushReturn(r0 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreRequeueFunc) PushReturn(r0 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreRequeueFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreRequeueFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreRequeueFunc) nextHook() func(context.Context, int, time.Time) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreRequeueFunc) nextHook() func(context.Context, int, time.Time) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreRequeueFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreRequeueFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreRequeueFunc) appendCall(r0 WorkerStoreRequeueFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreRequeueFunc) appendCall(r0 WorkerStoreRequeueFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreRequeueFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreRequeueFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreRequeueFunc) History() []WorkerStoreRequeueFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreRequeueFunc) History() []WorkerStoreRequeueFuncCall\n```\n\nHistory returns a sequence of WorkerStoreRequeueFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFuncCall",
              "documentation": {
                "identifier": "WorkerStoreRequeueFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreRequeueFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreRequeueFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreRequeueFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Arg1 is the value of the 2nd argument passed to this method\n\t// invocation.\n\tArg1 int\n\t// Arg2 is the value of the 3rd argument passed to this method\n\t// invocation.\n\tArg2 time.Time\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 error\n}\n```\n\nWorkerStoreRequeueFuncCall is an object that describes an invocation of method Requeue on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreRequeueFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreRequeueFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreRequeueFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreRequeueFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreRequeueFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreRequeueFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreRequeueFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreRequeueFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreRequeueFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFunc",
              "documentation": {
                "identifier": "WorkerStoreResetStalledFunc",
                "newPage": false,
                "searchKey": "worker.WorkerStoreResetStalledFunc",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreResetStalledFunc struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreResetStalledFunc struct {\n\tdefaultHook func(context.Context) ([]int, []int, error)\n\thooks       []func(context.Context) ([]int, []int, error)\n\thistory     []WorkerStoreResetStalledFuncCall\n\tmutex       sync.Mutex\n}\n```\n\nWorkerStoreResetStalledFunc describes the behavior when the ResetStalled method of the parent MockWorkerStore instance is invoked. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFunc.SetDefaultHook",
                    "documentation": {
                      "identifier": "WorkerStoreResetStalledFunc.SetDefaultHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreResetStalledFunc.SetDefaultHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreResetStalledFunc) SetDefaultHook(hook func(context.Context) ([]int, []int, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreResetStalledFunc) SetDefaultHook(hook func(context.Context) ([]int, []int, error))\n```\n\nSetDefaultHook sets function that is called when the ResetStalled method of the parent MockWorkerStore instance is invoked and the hook queue is empty. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFunc.PushHook",
                    "documentation": {
                      "identifier": "WorkerStoreResetStalledFunc.PushHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreResetStalledFunc.PushHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreResetStalledFunc) PushHook(hook func(context.Context) ([]int, []int, error))"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreResetStalledFunc) PushHook(hook func(context.Context) ([]int, []int, error))\n```\n\nPushHook adds a function to the end of hook queue. Each invocation of the ResetStalled method of the parent MockWorkerStore instance invokes the hook at the front of the queue and discards it. After the queue is empty, the default hook function is invoked for any future action. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFunc.SetDefaultReturn",
                    "documentation": {
                      "identifier": "WorkerStoreResetStalledFunc.SetDefaultReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreResetStalledFunc.SetDefaultReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreResetStalledFunc) SetDefaultReturn(r0 []int, r1 []int, r2 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreResetStalledFunc) SetDefaultReturn(r0 []int, r1 []int, r2 error)\n```\n\nSetDefaultReturn calls SetDefaultDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFunc.PushReturn",
                    "documentation": {
                      "identifier": "WorkerStoreResetStalledFunc.PushReturn",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreResetStalledFunc.PushReturn",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreResetStalledFunc) PushReturn(r0 []int, r1 []int, r2 error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreResetStalledFunc) PushReturn(r0 []int, r1 []int, r2 error)\n```\n\nPushReturn calls PushDefaultHook with a function that returns the given values. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFunc.nextHook",
                    "documentation": {
                      "identifier": "WorkerStoreResetStalledFunc.nextHook",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreResetStalledFunc.nextHook",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreResetStalledFunc) nextHook() func(context.Context) ([]int, []int, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreResetStalledFunc) nextHook() func(context.Context) ([]int, []int, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFunc.appendCall",
                    "documentation": {
                      "identifier": "WorkerStoreResetStalledFunc.appendCall",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreResetStalledFunc.appendCall",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreResetStalledFunc) appendCall(r0 WorkerStoreResetStalledFuncCall)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreResetStalledFunc) appendCall(r0 WorkerStoreResetStalledFuncCall)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFunc.History",
                    "documentation": {
                      "identifier": "WorkerStoreResetStalledFunc.History",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreResetStalledFunc.History",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (f *WorkerStoreResetStalledFunc) History() []WorkerStoreResetStalledFuncCall"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (f *WorkerStoreResetStalledFunc) History() []WorkerStoreResetStalledFuncCall\n```\n\nHistory returns a sequence of WorkerStoreResetStalledFuncCall objects describing the invocations of this function. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFuncCall",
              "documentation": {
                "identifier": "WorkerStoreResetStalledFuncCall",
                "newPage": false,
                "searchKey": "worker.WorkerStoreResetStalledFuncCall",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "type WorkerStoreResetStalledFuncCall struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype WorkerStoreResetStalledFuncCall struct {\n\t// Arg0 is the value of the 1st argument passed to this method\n\t// invocation.\n\tArg0 context.Context\n\t// Result0 is the value of the 1st result returned from this method\n\t// invocation.\n\tResult0 []int\n\t// Result1 is the value of the 2nd result returned from this method\n\t// invocation.\n\tResult1 []int\n\t// Result2 is the value of the 3rd result returned from this method\n\t// invocation.\n\tResult2 error\n}\n```\n\nWorkerStoreResetStalledFuncCall is an object that describes an invocation of method ResetStalled on an instance of MockWorkerStore. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFuncCall.Args",
                    "documentation": {
                      "identifier": "WorkerStoreResetStalledFuncCall.Args",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreResetStalledFuncCall.Args",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreResetStalledFuncCall) Args() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreResetStalledFuncCall) Args() []interface{}\n```\n\nArgs returns an interface slice containing the arguments of this invocation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#WorkerStoreResetStalledFuncCall.Results",
                    "documentation": {
                      "identifier": "WorkerStoreResetStalledFuncCall.Results",
                      "newPage": false,
                      "searchKey": "worker.WorkerStoreResetStalledFuncCall.Results",
                      "tags": null
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c WorkerStoreResetStalledFuncCall) Results() []interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c WorkerStoreResetStalledFuncCall) Results() []interface{}\n```\n\nResults returns an interface slice containing the results of this invocation. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#inTransaction",
              "documentation": {
                "identifier": "inTransaction",
                "newPage": false,
                "searchKey": "worker.inTransaction",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func inTransaction(ctx context.Context, dbStore DBStore, fn func(tx DBStore) error) (err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc inTransaction(ctx context.Context, dbStore DBStore, fn func(tx DBStore) error) (err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#requeueIfCloning",
              "documentation": {
                "identifier": "requeueIfCloning",
                "newPage": false,
                "searchKey": "worker.requeueIfCloning",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func requeueIfCloning(ctx context.Context, workerStore dbworkerstore.Store, upload store.Upload) (requeued bool, _ error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc requeueIfCloning(ctx context.Context, workerStore dbworkerstore.Store, upload store.Upload) (requeued bool, _ error)\n```\n\nrequeueIfCloning ensures that the repo and revision are resolvable. If the repo does not exist, or if the repo has finished cloning and the revision does not exist, then the upload will fail to process. If the repo is currently cloning, then we'll requeue the upload to be tried again later. This will not increase the reset count of the record (so this doesn't count against the upload as a legitimate attempt). \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#withUploadData",
              "documentation": {
                "identifier": "withUploadData",
                "newPage": false,
                "searchKey": "worker.withUploadData",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func withUploadData(ctx context.Context, uploadStore uploadstore.Store, id int, fn func(r io.Reader) error) error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc withUploadData(ctx context.Context, uploadStore uploadstore.Store, id int, fn func(r io.Reader) error) error\n```\n\nwithUploadData will invoke the given function with a reader of the upload's raw data. The consumer should expect raw newline-delimited JSON content. If the function returns without an error, the upload file will be deleted. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#writeData",
              "documentation": {
                "identifier": "writeData",
                "newPage": false,
                "searchKey": "worker.writeData",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func writeData(ctx context.Context, lsifStore LSIFStore, id int, groupedBundleData *semantic.GroupedBundleDataChans) (err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc writeData(ctx context.Context, lsifStore LSIFStore, id int, groupedBundleData *semantic.GroupedBundleDataChans) (err error)\n```\n\nwriteData transactionally writes the given grouped bundle data into the given LSIF store. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#isUniqueConstraintViolation",
              "documentation": {
                "identifier": "isUniqueConstraintViolation",
                "newPage": false,
                "searchKey": "worker.isUniqueConstraintViolation",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func isUniqueConstraintViolation(err error) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc isUniqueConstraintViolation(err error) bool\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#createHoneyEvent",
              "documentation": {
                "identifier": "createHoneyEvent",
                "newPage": false,
                "searchKey": "worker.createHoneyEvent",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func createHoneyEvent(ctx context.Context, upload store.Upload, err error, duration time.Duration) *libhoney.Event"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc createHoneyEvent(ctx context.Context, upload store.Upload, err error, duration time.Duration) *libhoney.Event\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#NewWorker",
              "documentation": {
                "identifier": "NewWorker",
                "newPage": false,
                "searchKey": "worker.NewWorker",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func NewWorker(dbStore DBStore,..."
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc NewWorker(\n\tdbStore DBStore,\n\tworkerStore dbworkerstore.Store,\n\tlsifStore LSIFStore,\n\tuploadStore uploadstore.Store,\n\tgitserverClient GitserverClient,\n\tpollInterval time.Duration,\n\tnumProcessorRoutines int,\n\tbudgetMax int64,\n\tworkerMetrics workerutil.WorkerMetrics,\n) *workerutil.Worker\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#TestHandle",
              "documentation": {
                "identifier": "TestHandle",
                "newPage": false,
                "searchKey": "worker.TestHandle",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestHandle(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestHandle(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#TestHandleError",
              "documentation": {
                "identifier": "TestHandleError",
                "newPage": false,
                "searchKey": "worker.TestHandleError",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestHandleError(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestHandleError(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#TestHandleCloneInProgress",
              "documentation": {
                "identifier": "TestHandleCloneInProgress",
                "newPage": false,
                "searchKey": "worker.TestHandleCloneInProgress",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestHandleCloneInProgress(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestHandleCloneInProgress(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#copyTestDump",
              "documentation": {
                "identifier": "copyTestDump",
                "newPage": false,
                "searchKey": "worker.copyTestDump",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func copyTestDump(ctx context.Context, key string) (io.ReadCloser, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc copyTestDump(ctx context.Context, key string) (io.ReadCloser, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/cmd/precise-code-intel-worker/internal/worker#setupRepoMocks",
              "documentation": {
                "identifier": "setupRepoMocks",
                "newPage": false,
                "searchKey": "worker.setupRepoMocks",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func setupRepoMocks(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc setupRepoMocks(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
