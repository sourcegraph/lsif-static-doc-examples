{
  "pathID": "/enterprise/internal/batches/resolvers",
  "documentation": {
    "identifier": "resolvers",
    "newPage": true,
    "searchKey": "enterprise/internal/batches/resolvers",
    "tags": [
      "package",
      "private"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package resolvers"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/enterprise/internal/batches/resolvers#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangeIDKind",
              "documentation": {
                "identifier": "batchChangeIDKind",
                "newPage": false,
                "searchKey": "resolvers.batchChangeIDKind",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const batchChangeIDKind"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst batchChangeIDKind = \"BatchChange\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangesCredentialIDKind",
              "documentation": {
                "identifier": "batchChangesCredentialIDKind",
                "newPage": false,
                "searchKey": "resolvers.batchChangesCredentialIDKind",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const batchChangesCredentialIDKind"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst batchChangesCredentialIDKind = \"BatchChangesCredential\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchSpecIDKind",
              "documentation": {
                "identifier": "batchSpecIDKind",
                "newPage": false,
                "searchKey": "resolvers.batchSpecIDKind",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const batchSpecIDKind"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst batchSpecIDKind = \"BatchSpec\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#bulkOperationIDKind",
              "documentation": {
                "identifier": "bulkOperationIDKind",
                "newPage": false,
                "searchKey": "resolvers.bulkOperationIDKind",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const bulkOperationIDKind"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst bulkOperationIDKind = \"BulkOperation\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetEventIDKind",
              "documentation": {
                "identifier": "changesetEventIDKind",
                "newPage": false,
                "searchKey": "resolvers.changesetEventIDKind",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const changesetEventIDKind"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst changesetEventIDKind = \"ChangesetEvent\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetIDKind",
              "documentation": {
                "identifier": "changesetIDKind",
                "newPage": false,
                "searchKey": "resolvers.changesetIDKind",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const changesetIDKind"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst changesetIDKind = \"Changeset\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetSpecIDKind",
              "documentation": {
                "identifier": "changesetSpecIDKind",
                "newPage": false,
                "searchKey": "resolvers.changesetSpecIDKind",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const changesetSpecIDKind"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst changesetSpecIDKind = \"ChangesetSpec\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#defaultMaxFirstParam",
              "documentation": {
                "identifier": "defaultMaxFirstParam",
                "newPage": false,
                "searchKey": "resolvers.defaultMaxFirstParam",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const defaultMaxFirstParam"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst defaultMaxFirstParam = 10000\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#listNamespacesBatchChanges",
              "documentation": {
                "identifier": "listNamespacesBatchChanges",
                "newPage": false,
                "searchKey": "resolvers.listNamespacesBatchChanges",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const listNamespacesBatchChanges"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst listNamespacesBatchChanges = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#maxUnlicensedChangesets",
              "documentation": {
                "identifier": "maxUnlicensedChangesets",
                "newPage": false,
                "searchKey": "resolvers.maxUnlicensedChangesets",
                "tags": [
                  "constant",
                  "number",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const maxUnlicensedChangesets"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst maxUnlicensedChangesets = 5\n```\n\nmaxUnlicensedChangesets is the maximum number of changesets that can be attached to a batch change when Sourcegraph is unlicensed or the Batch Changes feature is disabled. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationApplyBatchChange",
              "documentation": {
                "identifier": "mutationApplyBatchChange",
                "newPage": false,
                "searchKey": "resolvers.mutationApplyBatchChange",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationApplyBatchChange"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationApplyBatchChange = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationCreateBatchChange",
              "documentation": {
                "identifier": "mutationCreateBatchChange",
                "newPage": false,
                "searchKey": "resolvers.mutationCreateBatchChange",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationCreateBatchChange"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationCreateBatchChange = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationCreateBatchSpec",
              "documentation": {
                "identifier": "mutationCreateBatchSpec",
                "newPage": false,
                "searchKey": "resolvers.mutationCreateBatchSpec",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationCreateBatchSpec"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationCreateBatchSpec = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationCreateChangesetComments",
              "documentation": {
                "identifier": "mutationCreateChangesetComments",
                "newPage": false,
                "searchKey": "resolvers.mutationCreateChangesetComments",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationCreateChangesetComments"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationCreateChangesetComments = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationCreateChangesetSpec",
              "documentation": {
                "identifier": "mutationCreateChangesetSpec",
                "newPage": false,
                "searchKey": "resolvers.mutationCreateChangesetSpec",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationCreateChangesetSpec"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationCreateChangesetSpec = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationCreateCredential",
              "documentation": {
                "identifier": "mutationCreateCredential",
                "newPage": false,
                "searchKey": "resolvers.mutationCreateCredential",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationCreateCredential"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationCreateCredential = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationDeleteCredential",
              "documentation": {
                "identifier": "mutationDeleteCredential",
                "newPage": false,
                "searchKey": "resolvers.mutationDeleteCredential",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationDeleteCredential"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationDeleteCredential = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationMergeChangesets",
              "documentation": {
                "identifier": "mutationMergeChangesets",
                "newPage": false,
                "searchKey": "resolvers.mutationMergeChangesets",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationMergeChangesets"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationMergeChangesets = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationMoveBatchChange",
              "documentation": {
                "identifier": "mutationMoveBatchChange",
                "newPage": false,
                "searchKey": "resolvers.mutationMoveBatchChange",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationMoveBatchChange"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationMoveBatchChange = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mutationReenqueueChangesets",
              "documentation": {
                "identifier": "mutationReenqueueChangesets",
                "newPage": false,
                "searchKey": "resolvers.mutationReenqueueChangesets",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const mutationReenqueueChangesets"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst mutationReenqueueChangesets = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryBatchChange",
              "documentation": {
                "identifier": "queryBatchChange",
                "newPage": false,
                "searchKey": "resolvers.queryBatchChange",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryBatchChange"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryBatchChange = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryBatchChangeByName",
              "documentation": {
                "identifier": "queryBatchChangeByName",
                "newPage": false,
                "searchKey": "resolvers.queryBatchChangeByName",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryBatchChangeByName"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryBatchChangeByName = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryBatchChangePermLevels",
              "documentation": {
                "identifier": "queryBatchChangePermLevels",
                "newPage": false,
                "searchKey": "resolvers.queryBatchChangePermLevels",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryBatchChangePermLevels"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryBatchChangePermLevels = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryBatchChangesConnection",
              "documentation": {
                "identifier": "queryBatchChangesConnection",
                "newPage": false,
                "searchKey": "resolvers.queryBatchChangesConnection",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryBatchChangesConnection"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryBatchChangesConnection = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryBatchSpecNode",
              "documentation": {
                "identifier": "queryBatchSpecNode",
                "newPage": false,
                "searchKey": "resolvers.queryBatchSpecNode",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryBatchSpecNode"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryBatchSpecNode = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryBatchSpecPermLevels",
              "documentation": {
                "identifier": "queryBatchSpecPermLevels",
                "newPage": false,
                "searchKey": "resolvers.queryBatchSpecPermLevels",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryBatchSpecPermLevels"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryBatchSpecPermLevels = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryBulkOperation",
              "documentation": {
                "identifier": "queryBulkOperation",
                "newPage": false,
                "searchKey": "resolvers.queryBulkOperation",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryBulkOperation"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryBulkOperation = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryBulkOperationConnection",
              "documentation": {
                "identifier": "queryBulkOperationConnection",
                "newPage": false,
                "searchKey": "resolvers.queryBulkOperationConnection",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryBulkOperationConnection"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryBulkOperationConnection = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangeset",
              "documentation": {
                "identifier": "queryChangeset",
                "newPage": false,
                "searchKey": "resolvers.queryChangeset",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangeset"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangeset = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangesetApplyPreview",
              "documentation": {
                "identifier": "queryChangesetApplyPreview",
                "newPage": false,
                "searchKey": "resolvers.queryChangesetApplyPreview",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangesetApplyPreview"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangesetApplyPreview = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangesetApplyPreviewConnection",
              "documentation": {
                "identifier": "queryChangesetApplyPreviewConnection",
                "newPage": false,
                "searchKey": "resolvers.queryChangesetApplyPreviewConnection",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangesetApplyPreviewConnection"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangesetApplyPreviewConnection = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangesetConnection",
              "documentation": {
                "identifier": "queryChangesetConnection",
                "newPage": false,
                "searchKey": "resolvers.queryChangesetConnection",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangesetConnection"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangesetConnection = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangesetCountsConnection",
              "documentation": {
                "identifier": "queryChangesetCountsConnection",
                "newPage": false,
                "searchKey": "resolvers.queryChangesetCountsConnection",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangesetCountsConnection"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangesetCountsConnection = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangesetEventConnection",
              "documentation": {
                "identifier": "queryChangesetEventConnection",
                "newPage": false,
                "searchKey": "resolvers.queryChangesetEventConnection",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangesetEventConnection"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangesetEventConnection = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangesetPermLevels",
              "documentation": {
                "identifier": "queryChangesetPermLevels",
                "newPage": false,
                "searchKey": "resolvers.queryChangesetPermLevels",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangesetPermLevels"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangesetPermLevels = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangesetSpecConnection",
              "documentation": {
                "identifier": "queryChangesetSpecConnection",
                "newPage": false,
                "searchKey": "resolvers.queryChangesetSpecConnection",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangesetSpecConnection"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangesetSpecConnection = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangesetSpecNode",
              "documentation": {
                "identifier": "queryChangesetSpecNode",
                "newPage": false,
                "searchKey": "resolvers.queryChangesetSpecNode",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangesetSpecNode"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangesetSpecNode = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryChangesetSpecPermLevels",
              "documentation": {
                "identifier": "queryChangesetSpecPermLevels",
                "newPage": false,
                "searchKey": "resolvers.queryChangesetSpecPermLevels",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryChangesetSpecPermLevels"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryChangesetSpecPermLevels = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryCodeHostConnection",
              "documentation": {
                "identifier": "queryCodeHostConnection",
                "newPage": false,
                "searchKey": "resolvers.queryCodeHostConnection",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryCodeHostConnection"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryCodeHostConnection = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#queryUserCodeHostConnection",
              "documentation": {
                "identifier": "queryUserCodeHostConnection",
                "newPage": false,
                "searchKey": "resolvers.queryUserCodeHostConnection",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const queryUserCodeHostConnection"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst queryUserCodeHostConnection = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#siteCredentialPrefix",
              "documentation": {
                "identifier": "siteCredentialPrefix",
                "newPage": false,
                "searchKey": "resolvers.siteCredentialPrefix",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const siteCredentialPrefix"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst siteCredentialPrefix = \"site\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#testDiff",
              "documentation": {
                "identifier": "testDiff",
                "newPage": false,
                "searchKey": "resolvers.testDiff",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const testDiff"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst testDiff = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#userCredentialPrefix",
              "documentation": {
                "identifier": "userCredentialPrefix",
                "newPage": false,
                "searchKey": "resolvers.userCredentialPrefix",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const userCredentialPrefix"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst userCredentialPrefix = \"user\"\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/enterprise/internal/batches/resolvers#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#testDiffGraphQL",
              "documentation": {
                "identifier": "testDiffGraphQL",
                "newPage": false,
                "searchKey": "resolvers.testDiffGraphQL",
                "tags": [
                  "variable",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var testDiffGraphQL"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar testDiffGraphQL = ...\n```\n\ntestDiffGraphQL is the parsed representation of testDiff. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#update",
              "documentation": {
                "identifier": "update",
                "newPage": false,
                "searchKey": "resolvers.update",
                "tags": [
                  "variable",
                  "boolean",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var update"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar update = flag.Bool(\"update\", false, \"update testdata\")\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/enterprise/internal/batches/resolvers#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrApplyClosedBatchChange",
              "documentation": {
                "identifier": "ErrApplyClosedBatchChange",
                "newPage": false,
                "searchKey": "resolvers.ErrApplyClosedBatchChange",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrApplyClosedBatchChange struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrApplyClosedBatchChange struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrApplyClosedBatchChange.Error",
                    "documentation": {
                      "identifier": "ErrApplyClosedBatchChange.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrApplyClosedBatchChange.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrApplyClosedBatchChange) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrApplyClosedBatchChange) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrApplyClosedBatchChange.Extensions",
                    "documentation": {
                      "identifier": "ErrApplyClosedBatchChange.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrApplyClosedBatchChange.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrApplyClosedBatchChange) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrApplyClosedBatchChange) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesDisabled",
              "documentation": {
                "identifier": "ErrBatchChangesDisabled",
                "newPage": false,
                "searchKey": "resolvers.ErrBatchChangesDisabled",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrBatchChangesDisabled struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrBatchChangesDisabled struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesDisabled.Error",
                    "documentation": {
                      "identifier": "ErrBatchChangesDisabled.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrBatchChangesDisabled.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrBatchChangesDisabled) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrBatchChangesDisabled) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesDisabled.Extensions",
                    "documentation": {
                      "identifier": "ErrBatchChangesDisabled.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrBatchChangesDisabled.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrBatchChangesDisabled) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrBatchChangesDisabled) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesDisabledForUser",
              "documentation": {
                "identifier": "ErrBatchChangesDisabledForUser",
                "newPage": false,
                "searchKey": "resolvers.ErrBatchChangesDisabledForUser",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrBatchChangesDisabledForUser struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrBatchChangesDisabledForUser struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesDisabledForUser.Error",
                    "documentation": {
                      "identifier": "ErrBatchChangesDisabledForUser.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrBatchChangesDisabledForUser.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrBatchChangesDisabledForUser) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrBatchChangesDisabledForUser) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesDisabledForUser.Extensions",
                    "documentation": {
                      "identifier": "ErrBatchChangesDisabledForUser.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrBatchChangesDisabledForUser.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrBatchChangesDisabledForUser) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrBatchChangesDisabledForUser) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesDotcom",
              "documentation": {
                "identifier": "ErrBatchChangesDotcom",
                "newPage": false,
                "searchKey": "resolvers.ErrBatchChangesDotcom",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrBatchChangesDotcom struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrBatchChangesDotcom struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesDotcom.Error",
                    "documentation": {
                      "identifier": "ErrBatchChangesDotcom.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrBatchChangesDotcom.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrBatchChangesDotcom) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrBatchChangesDotcom) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesDotcom.Extensions",
                    "documentation": {
                      "identifier": "ErrBatchChangesDotcom.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrBatchChangesDotcom.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrBatchChangesDotcom) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrBatchChangesDotcom) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesUnlicensed",
              "documentation": {
                "identifier": "ErrBatchChangesUnlicensed",
                "newPage": false,
                "searchKey": "resolvers.ErrBatchChangesUnlicensed",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrBatchChangesUnlicensed struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrBatchChangesUnlicensed struct{ error }\n```\n\nErrBatchChangesUnlicensed wraps an underlying licensing.featureNotActivatedError to add an error code. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrBatchChangesUnlicensed.Extensions",
                    "documentation": {
                      "identifier": "ErrBatchChangesUnlicensed.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrBatchChangesUnlicensed.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrBatchChangesUnlicensed) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrBatchChangesUnlicensed) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrDuplicateCredential",
              "documentation": {
                "identifier": "ErrDuplicateCredential",
                "newPage": false,
                "searchKey": "resolvers.ErrDuplicateCredential",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrDuplicateCredential struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrDuplicateCredential struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrDuplicateCredential.Error",
                    "documentation": {
                      "identifier": "ErrDuplicateCredential.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrDuplicateCredential.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrDuplicateCredential) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrDuplicateCredential) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrDuplicateCredential.Extensions",
                    "documentation": {
                      "identifier": "ErrDuplicateCredential.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrDuplicateCredential.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrDuplicateCredential) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrDuplicateCredential) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrEnsureBatchChangeFailed",
              "documentation": {
                "identifier": "ErrEnsureBatchChangeFailed",
                "newPage": false,
                "searchKey": "resolvers.ErrEnsureBatchChangeFailed",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrEnsureBatchChangeFailed struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrEnsureBatchChangeFailed struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrEnsureBatchChangeFailed.Error",
                    "documentation": {
                      "identifier": "ErrEnsureBatchChangeFailed.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrEnsureBatchChangeFailed.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrEnsureBatchChangeFailed) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrEnsureBatchChangeFailed) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrEnsureBatchChangeFailed.Extensions",
                    "documentation": {
                      "identifier": "ErrEnsureBatchChangeFailed.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrEnsureBatchChangeFailed.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrEnsureBatchChangeFailed) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrEnsureBatchChangeFailed) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrIDIsZero",
              "documentation": {
                "identifier": "ErrIDIsZero",
                "newPage": false,
                "searchKey": "resolvers.ErrIDIsZero",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrIDIsZero struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrIDIsZero struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrIDIsZero.Error",
                    "documentation": {
                      "identifier": "ErrIDIsZero.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrIDIsZero.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrIDIsZero) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrIDIsZero) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrIDIsZero.Extensions",
                    "documentation": {
                      "identifier": "ErrIDIsZero.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrIDIsZero.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrIDIsZero) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrIDIsZero) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrInvalidFirstParameter",
              "documentation": {
                "identifier": "ErrInvalidFirstParameter",
                "newPage": false,
                "searchKey": "resolvers.ErrInvalidFirstParameter",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrInvalidFirstParameter struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrInvalidFirstParameter struct {\n\tMin, Max, First int\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrInvalidFirstParameter.Error",
                    "documentation": {
                      "identifier": "ErrInvalidFirstParameter.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrInvalidFirstParameter.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrInvalidFirstParameter) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrInvalidFirstParameter) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrInvalidFirstParameter.Extensions",
                    "documentation": {
                      "identifier": "ErrInvalidFirstParameter.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrInvalidFirstParameter.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrInvalidFirstParameter) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrInvalidFirstParameter) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrMatchingBatchChangeExists",
              "documentation": {
                "identifier": "ErrMatchingBatchChangeExists",
                "newPage": false,
                "searchKey": "resolvers.ErrMatchingBatchChangeExists",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrMatchingBatchChangeExists struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrMatchingBatchChangeExists struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrMatchingBatchChangeExists.Error",
                    "documentation": {
                      "identifier": "ErrMatchingBatchChangeExists.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrMatchingBatchChangeExists.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrMatchingBatchChangeExists) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrMatchingBatchChangeExists) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrMatchingBatchChangeExists.Extensions",
                    "documentation": {
                      "identifier": "ErrMatchingBatchChangeExists.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrMatchingBatchChangeExists.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrMatchingBatchChangeExists) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrMatchingBatchChangeExists) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#ErrVerifyCredentialFailed",
              "documentation": {
                "identifier": "ErrVerifyCredentialFailed",
                "newPage": false,
                "searchKey": "resolvers.ErrVerifyCredentialFailed",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ErrVerifyCredentialFailed struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ErrVerifyCredentialFailed struct {\n\tSourceErr error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrVerifyCredentialFailed.Error",
                    "documentation": {
                      "identifier": "ErrVerifyCredentialFailed.Error",
                      "newPage": false,
                      "searchKey": "resolvers.ErrVerifyCredentialFailed.Error",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrVerifyCredentialFailed) Error() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrVerifyCredentialFailed) Error() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#ErrVerifyCredentialFailed.Extensions",
                    "documentation": {
                      "identifier": "ErrVerifyCredentialFailed.Extensions",
                      "newPage": false,
                      "searchKey": "resolvers.ErrVerifyCredentialFailed.Extensions",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (e ErrVerifyCredentialFailed) Extensions() map[string]interface{}"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (e ErrVerifyCredentialFailed) Extensions() map[string]interface{}\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#Resolver",
              "documentation": {
                "identifier": "Resolver",
                "newPage": false,
                "searchKey": "resolvers.Resolver",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Resolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Resolver struct {\n\tstore *store.Store\n}\n```\n\nResolver is the GraphQL resolver of all things related to batch changes. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.ApplyBatchChange",
                    "documentation": {
                      "identifier": "Resolver.ApplyBatchChange",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.ApplyBatchChange",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) ApplyBatchChange(ctx context.Context, args *graphqlbackend.ApplyBatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) ApplyBatchChange(ctx context.Context, args *graphqlbackend.ApplyBatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.ApplyCampaign",
                    "documentation": {
                      "identifier": "Resolver.ApplyCampaign",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.ApplyCampaign",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) ApplyCampaign(ctx context.Context, args *graphqlbackend.ApplyCampaignArgs) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) ApplyCampaign(ctx context.Context, args *graphqlbackend.ApplyCampaignArgs) (graphqlbackend.BatchChangeResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.BatchChange",
                    "documentation": {
                      "identifier": "Resolver.BatchChange",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.BatchChange",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) BatchChange(ctx context.Context, args *graphqlbackend.BatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) BatchChange(ctx context.Context, args *graphqlbackend.BatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.BatchChanges",
                    "documentation": {
                      "identifier": "Resolver.BatchChanges",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.BatchChanges",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) BatchChanges(ctx context.Context, args *graphqlbackend.ListBatchChangesArgs) (graphqlbackend.BatchChangesConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) BatchChanges(ctx context.Context, args *graphqlbackend.ListBatchChangesArgs) (graphqlbackend.BatchChangesConnectionResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.BatchChangesCodeHosts",
                    "documentation": {
                      "identifier": "Resolver.BatchChangesCodeHosts",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.BatchChangesCodeHosts",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) BatchChangesCodeHosts(ctx context.Context, args *graphqlbackend.ListBatchChangesCodeHostsArgs) (graphqlbackend.BatchChangesCodeHostConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) BatchChangesCodeHosts(ctx context.Context, args *graphqlbackend.ListBatchChangesCodeHostsArgs) (graphqlbackend.BatchChangesCodeHostConnectionResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.Campaign",
                    "documentation": {
                      "identifier": "Resolver.Campaign",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.Campaign",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) Campaign(ctx context.Context, args *graphqlbackend.BatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) Campaign(ctx context.Context, args *graphqlbackend.BatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.Campaigns",
                    "documentation": {
                      "identifier": "Resolver.Campaigns",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.Campaigns",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) Campaigns(ctx context.Context, args *graphqlbackend.ListBatchChangesArgs) (graphqlbackend.BatchChangesConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) Campaigns(ctx context.Context, args *graphqlbackend.ListBatchChangesArgs) (graphqlbackend.BatchChangesConnectionResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CampaignsCodeHosts",
                    "documentation": {
                      "identifier": "Resolver.CampaignsCodeHosts",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CampaignsCodeHosts",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CampaignsCodeHosts(ctx context.Context, args *graphqlbackend.ListCampaignsCodeHostsArgs) (graphqlbackend.CampaignsCodeHostConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CampaignsCodeHosts(ctx context.Context, args *graphqlbackend.ListCampaignsCodeHostsArgs) (graphqlbackend.CampaignsCodeHostConnectionResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CloseBatchChange",
                    "documentation": {
                      "identifier": "Resolver.CloseBatchChange",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CloseBatchChange",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CloseBatchChange(ctx context.Context, args *graphqlbackend.CloseBatchChangeArgs) (_ graphqlbackend.BatchChangeResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CloseBatchChange(ctx context.Context, args *graphqlbackend.CloseBatchChangeArgs) (_ graphqlbackend.BatchChangeResolver, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CloseCampaign",
                    "documentation": {
                      "identifier": "Resolver.CloseCampaign",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CloseCampaign",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CloseCampaign(ctx context.Context, args *graphqlbackend.CloseCampaignArgs) (_ graphqlbackend.BatchChangeResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CloseCampaign(ctx context.Context, args *graphqlbackend.CloseCampaignArgs) (_ graphqlbackend.BatchChangeResolver, err error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CreateBatchChange",
                    "documentation": {
                      "identifier": "Resolver.CreateBatchChange",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CreateBatchChange",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CreateBatchChange(ctx context.Context, args *graphqlbackend.CreateBatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CreateBatchChange(ctx context.Context, args *graphqlbackend.CreateBatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CreateBatchChangesCredential",
                    "documentation": {
                      "identifier": "Resolver.CreateBatchChangesCredential",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CreateBatchChangesCredential",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CreateBatchChangesCredential(ctx context.Context, args *graphqlbackend.CreateBatchChangesCredentialArgs) (_ graphqlbackend.BatchChangesCredentialResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CreateBatchChangesCredential(ctx context.Context, args *graphqlbackend.CreateBatchChangesCredentialArgs) (_ graphqlbackend.BatchChangesCredentialResolver, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CreateBatchSpec",
                    "documentation": {
                      "identifier": "Resolver.CreateBatchSpec",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CreateBatchSpec",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CreateBatchSpec(ctx context.Context, args *graphqlbackend.CreateBatchSpecArgs) (graphqlbackend.BatchSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CreateBatchSpec(ctx context.Context, args *graphqlbackend.CreateBatchSpecArgs) (graphqlbackend.BatchSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CreateCampaign",
                    "documentation": {
                      "identifier": "Resolver.CreateCampaign",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CreateCampaign",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CreateCampaign(ctx context.Context, args *graphqlbackend.CreateCampaignArgs) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CreateCampaign(ctx context.Context, args *graphqlbackend.CreateCampaignArgs) (graphqlbackend.BatchChangeResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CreateCampaignSpec",
                    "documentation": {
                      "identifier": "Resolver.CreateCampaignSpec",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CreateCampaignSpec",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CreateCampaignSpec(ctx context.Context, args *graphqlbackend.CreateCampaignSpecArgs) (graphqlbackend.BatchSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CreateCampaignSpec(ctx context.Context, args *graphqlbackend.CreateCampaignSpecArgs) (graphqlbackend.BatchSpecResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CreateCampaignsCredential",
                    "documentation": {
                      "identifier": "Resolver.CreateCampaignsCredential",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CreateCampaignsCredential",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CreateCampaignsCredential(ctx context.Context, args *graphqlbackend.CreateCampaignsCredentialArgs) (_ graphqlbackend.CampaignsCredentialResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CreateCampaignsCredential(ctx context.Context, args *graphqlbackend.CreateCampaignsCredentialArgs) (_ graphqlbackend.CampaignsCredentialResolver, err error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CreateChangesetComments",
                    "documentation": {
                      "identifier": "Resolver.CreateChangesetComments",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CreateChangesetComments",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CreateChangesetComments(ctx context.Context, args *graphqlbackend.CreateChangesetCommentsArgs) (_ graphqlbackend.BulkOperationResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CreateChangesetComments(ctx context.Context, args *graphqlbackend.CreateChangesetCommentsArgs) (_ graphqlbackend.BulkOperationResolver, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.CreateChangesetSpec",
                    "documentation": {
                      "identifier": "Resolver.CreateChangesetSpec",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.CreateChangesetSpec",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) CreateChangesetSpec(ctx context.Context, args *graphqlbackend.CreateChangesetSpecArgs) (graphqlbackend.ChangesetSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) CreateChangesetSpec(ctx context.Context, args *graphqlbackend.CreateChangesetSpecArgs) (graphqlbackend.ChangesetSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.DeleteBatchChange",
                    "documentation": {
                      "identifier": "Resolver.DeleteBatchChange",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.DeleteBatchChange",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) DeleteBatchChange(ctx context.Context, args *graphqlbackend.DeleteBatchChangeArgs) (_ *graphqlbackend.EmptyResponse, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) DeleteBatchChange(ctx context.Context, args *graphqlbackend.DeleteBatchChangeArgs) (_ *graphqlbackend.EmptyResponse, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.DeleteBatchChangesCredential",
                    "documentation": {
                      "identifier": "Resolver.DeleteBatchChangesCredential",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.DeleteBatchChangesCredential",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) DeleteBatchChangesCredential(ctx context.Context, args *graphqlbackend.DeleteBatchChangesCredentialArgs) (_ *graphqlbackend.EmptyResponse, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) DeleteBatchChangesCredential(ctx context.Context, args *graphqlbackend.DeleteBatchChangesCredentialArgs) (_ *graphqlbackend.EmptyResponse, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.DeleteCampaign",
                    "documentation": {
                      "identifier": "Resolver.DeleteCampaign",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.DeleteCampaign",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) DeleteCampaign(ctx context.Context, args *graphqlbackend.DeleteCampaignArgs) (_ *graphqlbackend.EmptyResponse, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) DeleteCampaign(ctx context.Context, args *graphqlbackend.DeleteCampaignArgs) (_ *graphqlbackend.EmptyResponse, err error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.DeleteCampaignsCredential",
                    "documentation": {
                      "identifier": "Resolver.DeleteCampaignsCredential",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.DeleteCampaignsCredential",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) DeleteCampaignsCredential(ctx context.Context, args *graphqlbackend.DeleteCampaignsCredentialArgs) (_ *graphqlbackend.EmptyResponse, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) DeleteCampaignsCredential(ctx context.Context, args *graphqlbackend.DeleteCampaignsCredentialArgs) (_ *graphqlbackend.EmptyResponse, err error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.DetachChangesets",
                    "documentation": {
                      "identifier": "Resolver.DetachChangesets",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.DetachChangesets",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) DetachChangesets(ctx context.Context, args *graphqlbackend.DetachChangesetsArgs) (_ graphqlbackend.BulkOperationResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) DetachChangesets(ctx context.Context, args *graphqlbackend.DetachChangesetsArgs) (_ graphqlbackend.BulkOperationResolver, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.MergeChangesets",
                    "documentation": {
                      "identifier": "Resolver.MergeChangesets",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.MergeChangesets",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) MergeChangesets(ctx context.Context, args *graphqlbackend.MergeChangesetsArgs) (_ graphqlbackend.BulkOperationResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) MergeChangesets(ctx context.Context, args *graphqlbackend.MergeChangesetsArgs) (_ graphqlbackend.BulkOperationResolver, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.MoveBatchChange",
                    "documentation": {
                      "identifier": "Resolver.MoveBatchChange",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.MoveBatchChange",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) MoveBatchChange(ctx context.Context, args *graphqlbackend.MoveBatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) MoveBatchChange(ctx context.Context, args *graphqlbackend.MoveBatchChangeArgs) (graphqlbackend.BatchChangeResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.MoveCampaign",
                    "documentation": {
                      "identifier": "Resolver.MoveCampaign",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.MoveCampaign",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) MoveCampaign(ctx context.Context, args *graphqlbackend.MoveCampaignArgs) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) MoveCampaign(ctx context.Context, args *graphqlbackend.MoveCampaignArgs) (graphqlbackend.BatchChangeResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.NodeResolvers",
                    "documentation": {
                      "identifier": "Resolver.NodeResolvers",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.NodeResolvers",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) NodeResolvers() map[string]graphqlbackend.NodeByIDFunc"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) NodeResolvers() map[string]graphqlbackend.NodeByIDFunc\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.ReenqueueChangeset",
                    "documentation": {
                      "identifier": "Resolver.ReenqueueChangeset",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.ReenqueueChangeset",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) ReenqueueChangeset(ctx context.Context, args *graphqlbackend.ReenqueueChangesetArgs) (_ graphqlbackend.ChangesetResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) ReenqueueChangeset(ctx context.Context, args *graphqlbackend.ReenqueueChangesetArgs) (_ graphqlbackend.ChangesetResolver, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.ReenqueueChangesets",
                    "documentation": {
                      "identifier": "Resolver.ReenqueueChangesets",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.ReenqueueChangesets",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) ReenqueueChangesets(ctx context.Context, args *graphqlbackend.ReenqueueChangesetsArgs) (_ graphqlbackend.BulkOperationResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) ReenqueueChangesets(ctx context.Context, args *graphqlbackend.ReenqueueChangesetsArgs) (_ graphqlbackend.BulkOperationResolver, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.SyncChangeset",
                    "documentation": {
                      "identifier": "Resolver.SyncChangeset",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.SyncChangeset",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) SyncChangeset(ctx context.Context, args *graphqlbackend.SyncChangesetArgs) (_ *graphqlbackend.EmptyResponse, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) SyncChangeset(ctx context.Context, args *graphqlbackend.SyncChangesetArgs) (_ *graphqlbackend.EmptyResponse, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.batchChangeByID",
                    "documentation": {
                      "identifier": "Resolver.batchChangeByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.batchChangeByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) batchChangeByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) batchChangeByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchChangeResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.batchChangesCredentialByID",
                    "documentation": {
                      "identifier": "Resolver.batchChangesCredentialByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.batchChangesCredentialByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) batchChangesCredentialByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchChangesCredentialResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) batchChangesCredentialByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchChangesCredentialResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.batchChangesSiteCredentialByID",
                    "documentation": {
                      "identifier": "Resolver.batchChangesSiteCredentialByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.batchChangesSiteCredentialByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) batchChangesSiteCredentialByID(ctx context.Context, id int64) (graphqlbackend.BatchChangesCredentialResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) batchChangesSiteCredentialByID(ctx context.Context, id int64) (graphqlbackend.BatchChangesCredentialResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.batchChangesUserCredentialByID",
                    "documentation": {
                      "identifier": "Resolver.batchChangesUserCredentialByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.batchChangesUserCredentialByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) batchChangesUserCredentialByID(ctx context.Context, id int64) (graphqlbackend.BatchChangesCredentialResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) batchChangesUserCredentialByID(ctx context.Context, id int64) (graphqlbackend.BatchChangesCredentialResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.batchSpecByID",
                    "documentation": {
                      "identifier": "Resolver.batchSpecByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.batchSpecByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) batchSpecByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) batchSpecByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.bulkOperationByID",
                    "documentation": {
                      "identifier": "Resolver.bulkOperationByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.bulkOperationByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) bulkOperationByID(ctx context.Context, id graphql.ID) (graphqlbackend.BulkOperationResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) bulkOperationByID(ctx context.Context, id graphql.ID) (graphqlbackend.BulkOperationResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.bulkOperationByIDString",
                    "documentation": {
                      "identifier": "Resolver.bulkOperationByIDString",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.bulkOperationByIDString",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) bulkOperationByIDString(ctx context.Context, id string) (graphqlbackend.BulkOperationResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) bulkOperationByIDString(ctx context.Context, id string) (graphqlbackend.BulkOperationResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.campaignByID",
                    "documentation": {
                      "identifier": "Resolver.campaignByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.campaignByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) campaignByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) campaignByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchChangeResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.campaignSpecByID",
                    "documentation": {
                      "identifier": "Resolver.campaignSpecByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.campaignSpecByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) campaignSpecByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) campaignSpecByID(ctx context.Context, id graphql.ID) (graphqlbackend.BatchSpecResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.campaignsCredentialByID",
                    "documentation": {
                      "identifier": "Resolver.campaignsCredentialByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.campaignsCredentialByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) campaignsCredentialByID(ctx context.Context, id graphql.ID) (graphqlbackend.CampaignsCredentialResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) campaignsCredentialByID(ctx context.Context, id graphql.ID) (graphqlbackend.CampaignsCredentialResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.changesetByID",
                    "documentation": {
                      "identifier": "Resolver.changesetByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.changesetByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) changesetByID(ctx context.Context, id graphql.ID) (graphqlbackend.ChangesetResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) changesetByID(ctx context.Context, id graphql.ID) (graphqlbackend.ChangesetResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.changesetSpecByID",
                    "documentation": {
                      "identifier": "Resolver.changesetSpecByID",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.changesetSpecByID",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) changesetSpecByID(ctx context.Context, id graphql.ID) (graphqlbackend.ChangesetSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) changesetSpecByID(ctx context.Context, id graphql.ID) (graphqlbackend.ChangesetSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.createBatchChangesSiteCredential",
                    "documentation": {
                      "identifier": "Resolver.createBatchChangesSiteCredential",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.createBatchChangesSiteCredential",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) createBatchChangesSiteCredential(ctx context.Context, externalServiceURL, externalServiceType string, credential string) (graphqlbackend.BatchChangesCredentialResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) createBatchChangesSiteCredential(ctx context.Context, externalServiceURL, externalServiceType string, credential string) (graphqlbackend.BatchChangesCredentialResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.createBatchChangesUserCredential",
                    "documentation": {
                      "identifier": "Resolver.createBatchChangesUserCredential",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.createBatchChangesUserCredential",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) createBatchChangesUserCredential(ctx context.Context, externalServiceURL, externalServiceType string, userID int32, credential string) (graphqlbackend.BatchChangesCredentialResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) createBatchChangesUserCredential(ctx context.Context, externalServiceURL, externalServiceType string, userID int32, credential string) (graphqlbackend.BatchChangesCredentialResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.deleteBatchChangesSiteCredential",
                    "documentation": {
                      "identifier": "Resolver.deleteBatchChangesSiteCredential",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.deleteBatchChangesSiteCredential",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) deleteBatchChangesSiteCredential(ctx context.Context, credentialDBID int64) (*graphqlbackend.EmptyResponse, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) deleteBatchChangesSiteCredential(ctx context.Context, credentialDBID int64) (*graphqlbackend.EmptyResponse, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.deleteBatchChangesUserCredential",
                    "documentation": {
                      "identifier": "Resolver.deleteBatchChangesUserCredential",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.deleteBatchChangesUserCredential",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) deleteBatchChangesUserCredential(ctx context.Context, credentialDBID int64) (*graphqlbackend.EmptyResponse, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) deleteBatchChangesUserCredential(ctx context.Context, credentialDBID int64) (*graphqlbackend.EmptyResponse, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#Resolver.generateAuthenticatorForCredential",
                    "documentation": {
                      "identifier": "Resolver.generateAuthenticatorForCredential",
                      "newPage": false,
                      "searchKey": "resolvers.Resolver.generateAuthenticatorForCredential",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *Resolver) generateAuthenticatorForCredential(ctx context.Context, externalServiceType, externalServiceURL, credential string) (auth.Authenticator, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *Resolver) generateAuthenticatorForCredential(ctx context.Context, externalServiceType, externalServiceURL, credential string) (auth.Authenticator, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangeDescriptionResolver",
              "documentation": {
                "identifier": "batchChangeDescriptionResolver",
                "newPage": false,
                "searchKey": "resolvers.batchChangeDescriptionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchChangeDescriptionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchChangeDescriptionResolver struct {\n\tname, description string\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeDescriptionResolver.Description",
                    "documentation": {
                      "identifier": "batchChangeDescriptionResolver.Description",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeDescriptionResolver.Description",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeDescriptionResolver) Description() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeDescriptionResolver) Description() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeDescriptionResolver.Name",
                    "documentation": {
                      "identifier": "batchChangeDescriptionResolver.Name",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeDescriptionResolver.Name",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeDescriptionResolver) Name() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeDescriptionResolver) Name() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangeEventArg",
              "documentation": {
                "identifier": "batchChangeEventArg",
                "newPage": false,
                "searchKey": "resolvers.batchChangeEventArg",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchChangeEventArg struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchChangeEventArg struct {\n\tBatchChangeID int64 `json:\"batch_change_id\"`\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver",
              "documentation": {
                "identifier": "batchChangeResolver",
                "newPage": false,
                "searchKey": "resolvers.batchChangeResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchChangeResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchChangeResolver struct {\n\tstore *store.Store\n\n\tbatchChange *btypes.BatchChange\n\n\t// Cache the namespace on the resolver, since it's accessed more than once.\n\tnamespaceOnce sync.Once\n\tnamespace     graphqlbackend.NamespaceResolver\n\tnamespaceErr  error\n\n\t// TODO(campaigns-deprecation): This should be removed once we remove campaigns completely\n\tshouldActAsCampaign bool\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.ActAsCampaign",
                    "documentation": {
                      "identifier": "batchChangeResolver.ActAsCampaign",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.ActAsCampaign",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) ActAsCampaign() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) ActAsCampaign() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.BulkOperations",
                    "documentation": {
                      "identifier": "batchChangeResolver.BulkOperations",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.BulkOperations",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) BulkOperations(ctx context.Context,..."
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) BulkOperations(\n\tctx context.Context,\n\targs *graphqlbackend.ListBatchChangeBulkOperationArgs,\n) (graphqlbackend.BulkOperationConnectionResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.ChangesetCountsOverTime",
                    "documentation": {
                      "identifier": "batchChangeResolver.ChangesetCountsOverTime",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.ChangesetCountsOverTime",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) ChangesetCountsOverTime(ctx context.Context,..."
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) ChangesetCountsOverTime(\n\tctx context.Context,\n\targs *graphqlbackend.ChangesetCountsArgs,\n) ([]graphqlbackend.ChangesetCountsResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.Changesets",
                    "documentation": {
                      "identifier": "batchChangeResolver.Changesets",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.Changesets",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) Changesets(ctx context.Context,..."
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) Changesets(\n\tctx context.Context,\n\targs *graphqlbackend.ListChangesetsArgs,\n) (graphqlbackend.ChangesetsConnectionResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.ChangesetsStats",
                    "documentation": {
                      "identifier": "batchChangeResolver.ChangesetsStats",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.ChangesetsStats",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) ChangesetsStats(ctx context.Context) (graphqlbackend.ChangesetsStatsResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) ChangesetsStats(ctx context.Context) (graphqlbackend.ChangesetsStatsResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.ClosedAt",
                    "documentation": {
                      "identifier": "batchChangeResolver.ClosedAt",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.ClosedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) ClosedAt() *graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) ClosedAt() *graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.CreatedAt",
                    "documentation": {
                      "identifier": "batchChangeResolver.CreatedAt",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.CreatedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) CreatedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) CreatedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.CurrentSpec",
                    "documentation": {
                      "identifier": "batchChangeResolver.CurrentSpec",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.CurrentSpec",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) CurrentSpec(ctx context.Context) (graphqlbackend.BatchSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) CurrentSpec(ctx context.Context) (graphqlbackend.BatchSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.Description",
                    "documentation": {
                      "identifier": "batchChangeResolver.Description",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.Description",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) Description() *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) Description() *string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.DiffStat",
                    "documentation": {
                      "identifier": "batchChangeResolver.DiffStat",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.DiffStat",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) DiffStat(ctx context.Context) (*graphqlbackend.DiffStat, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) DiffStat(ctx context.Context) (*graphqlbackend.DiffStat, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.ID",
                    "documentation": {
                      "identifier": "batchChangeResolver.ID",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.ID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) ID() graphql.ID"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) ID() graphql.ID\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.InitialApplier",
                    "documentation": {
                      "identifier": "batchChangeResolver.InitialApplier",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.InitialApplier",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) InitialApplier(ctx context.Context) (*graphqlbackend.UserResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) InitialApplier(ctx context.Context) (*graphqlbackend.UserResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.LastAppliedAt",
                    "documentation": {
                      "identifier": "batchChangeResolver.LastAppliedAt",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.LastAppliedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) LastAppliedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) LastAppliedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.LastApplier",
                    "documentation": {
                      "identifier": "batchChangeResolver.LastApplier",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.LastApplier",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) LastApplier(ctx context.Context) (*graphqlbackend.UserResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) LastApplier(ctx context.Context) (*graphqlbackend.UserResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.Name",
                    "documentation": {
                      "identifier": "batchChangeResolver.Name",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.Name",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) Name() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) Name() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.Namespace",
                    "documentation": {
                      "identifier": "batchChangeResolver.Namespace",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.Namespace",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) Namespace(ctx context.Context) (graphqlbackend.NamespaceResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) Namespace(ctx context.Context) (graphqlbackend.NamespaceResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.SpecCreator",
                    "documentation": {
                      "identifier": "batchChangeResolver.SpecCreator",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.SpecCreator",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) SpecCreator(ctx context.Context) (*graphqlbackend.UserResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) SpecCreator(ctx context.Context) (*graphqlbackend.UserResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.URL",
                    "documentation": {
                      "identifier": "batchChangeResolver.URL",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.URL",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) URL(ctx context.Context) (string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) URL(ctx context.Context) (string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.UpdatedAt",
                    "documentation": {
                      "identifier": "batchChangeResolver.UpdatedAt",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.UpdatedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) UpdatedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) UpdatedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.ViewerCanAdminister",
                    "documentation": {
                      "identifier": "batchChangeResolver.ViewerCanAdminister",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.ViewerCanAdminister",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) ViewerCanAdminister(ctx context.Context) (bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) ViewerCanAdminister(ctx context.Context) (bool, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangeResolver.computeNamespace",
                    "documentation": {
                      "identifier": "batchChangeResolver.computeNamespace",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangeResolver.computeNamespace",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangeResolver) computeNamespace(ctx context.Context) (graphqlbackend.NamespaceResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangeResolver) computeNamespace(ctx context.Context) (graphqlbackend.NamespaceResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostConnectionResolver",
              "documentation": {
                "identifier": "batchChangesCodeHostConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.batchChangesCodeHostConnectionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchChangesCodeHostConnectionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchChangesCodeHostConnectionResolver struct {\n\tuserID                *int32\n\tonlyWithoutCredential bool\n\topts                  store.ListCodeHostsOpts\n\tlimitOffset           database.LimitOffset\n\tstore                 *store.Store\n\n\tonce          sync.Once\n\tchs           []*btypes.CodeHost\n\tchsPage       []*btypes.CodeHost\n\tcredsByIDType map[idType]graphqlbackend.BatchChangesCredentialResolver\n\tchsErr        error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostConnectionResolver.Nodes",
                    "documentation": {
                      "identifier": "batchChangesCodeHostConnectionResolver.Nodes",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesCodeHostConnectionResolver.Nodes",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesCodeHostConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.BatchChangesCodeHostResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesCodeHostConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.BatchChangesCodeHostResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostConnectionResolver.PageInfo",
                    "documentation": {
                      "identifier": "batchChangesCodeHostConnectionResolver.PageInfo",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesCodeHostConnectionResolver.PageInfo",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesCodeHostConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesCodeHostConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostConnectionResolver.TotalCount",
                    "documentation": {
                      "identifier": "batchChangesCodeHostConnectionResolver.TotalCount",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesCodeHostConnectionResolver.TotalCount",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesCodeHostConnectionResolver) TotalCount(ctx context.Context) (int32, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesCodeHostConnectionResolver) TotalCount(ctx context.Context) (int32, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostConnectionResolver.compute",
                    "documentation": {
                      "identifier": "batchChangesCodeHostConnectionResolver.compute",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesCodeHostConnectionResolver.compute",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesCodeHostConnectionResolver) compute(ctx context.Context) (all, page []*btypes.CodeHost, credsByIDType map[idType]graphqlbackend.BatchChangesCredentialResolver, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesCodeHostConnectionResolver) compute(ctx context.Context) (all, page []*btypes.CodeHost, credsByIDType map[idType]graphqlbackend.BatchChangesCredentialResolver, err error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostResolver",
              "documentation": {
                "identifier": "batchChangesCodeHostResolver",
                "newPage": false,
                "searchKey": "resolvers.batchChangesCodeHostResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchChangesCodeHostResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchChangesCodeHostResolver struct {\n\tcodeHost   *btypes.CodeHost\n\tcredential graphqlbackend.BatchChangesCredentialResolver\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostResolver.Credential",
                    "documentation": {
                      "identifier": "batchChangesCodeHostResolver.Credential",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesCodeHostResolver.Credential",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesCodeHostResolver) Credential() graphqlbackend.BatchChangesCredentialResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesCodeHostResolver) Credential() graphqlbackend.BatchChangesCredentialResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostResolver.ExternalServiceKind",
                    "documentation": {
                      "identifier": "batchChangesCodeHostResolver.ExternalServiceKind",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesCodeHostResolver.ExternalServiceKind",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesCodeHostResolver) ExternalServiceKind() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesCodeHostResolver) ExternalServiceKind() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostResolver.ExternalServiceURL",
                    "documentation": {
                      "identifier": "batchChangesCodeHostResolver.ExternalServiceURL",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesCodeHostResolver.ExternalServiceURL",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesCodeHostResolver) ExternalServiceURL() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesCodeHostResolver) ExternalServiceURL() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesCodeHostResolver.RequiresSSH",
                    "documentation": {
                      "identifier": "batchChangesCodeHostResolver.RequiresSSH",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesCodeHostResolver.RequiresSSH",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesCodeHostResolver) RequiresSSH() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesCodeHostResolver) RequiresSSH() bool\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangesConnectionResolver",
              "documentation": {
                "identifier": "batchChangesConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.batchChangesConnectionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchChangesConnectionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchChangesConnectionResolver struct {\n\tstore *store.Store\n\topts  store.ListBatchChangesOpts\n\n\t// cache results because they are used by multiple fields\n\tonce         sync.Once\n\tbatchChanges []*btypes.BatchChange\n\tnext         int64\n\terr          error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesConnectionResolver.Nodes",
                    "documentation": {
                      "identifier": "batchChangesConnectionResolver.Nodes",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesConnectionResolver.Nodes",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangesConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangesConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.BatchChangeResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesConnectionResolver.PageInfo",
                    "documentation": {
                      "identifier": "batchChangesConnectionResolver.PageInfo",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesConnectionResolver.PageInfo",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangesConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangesConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesConnectionResolver.TotalCount",
                    "documentation": {
                      "identifier": "batchChangesConnectionResolver.TotalCount",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesConnectionResolver.TotalCount",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangesConnectionResolver) TotalCount(ctx context.Context) (int32, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangesConnectionResolver) TotalCount(ctx context.Context) (int32, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesConnectionResolver.compute",
                    "documentation": {
                      "identifier": "batchChangesConnectionResolver.compute",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesConnectionResolver.compute",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchChangesConnectionResolver) compute(ctx context.Context) ([]*btypes.BatchChange, int64, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchChangesConnectionResolver) compute(ctx context.Context) ([]*btypes.BatchChange, int64, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangesSiteCredentialResolver",
              "documentation": {
                "identifier": "batchChangesSiteCredentialResolver",
                "newPage": false,
                "searchKey": "resolvers.batchChangesSiteCredentialResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchChangesSiteCredentialResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchChangesSiteCredentialResolver struct {\n\tcredential *btypes.SiteCredential\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesSiteCredentialResolver.CreatedAt",
                    "documentation": {
                      "identifier": "batchChangesSiteCredentialResolver.CreatedAt",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesSiteCredentialResolver.CreatedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesSiteCredentialResolver) CreatedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesSiteCredentialResolver) CreatedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesSiteCredentialResolver.ExternalServiceKind",
                    "documentation": {
                      "identifier": "batchChangesSiteCredentialResolver.ExternalServiceKind",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesSiteCredentialResolver.ExternalServiceKind",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesSiteCredentialResolver) ExternalServiceKind() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesSiteCredentialResolver) ExternalServiceKind() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesSiteCredentialResolver.ExternalServiceURL",
                    "documentation": {
                      "identifier": "batchChangesSiteCredentialResolver.ExternalServiceURL",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesSiteCredentialResolver.ExternalServiceURL",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesSiteCredentialResolver) ExternalServiceURL() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesSiteCredentialResolver) ExternalServiceURL() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesSiteCredentialResolver.ID",
                    "documentation": {
                      "identifier": "batchChangesSiteCredentialResolver.ID",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesSiteCredentialResolver.ID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesSiteCredentialResolver) ID() graphql.ID"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesSiteCredentialResolver) ID() graphql.ID\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesSiteCredentialResolver.IsSiteCredential",
                    "documentation": {
                      "identifier": "batchChangesSiteCredentialResolver.IsSiteCredential",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesSiteCredentialResolver.IsSiteCredential",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesSiteCredentialResolver) IsSiteCredential() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesSiteCredentialResolver) IsSiteCredential() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesSiteCredentialResolver.SSHPublicKey",
                    "documentation": {
                      "identifier": "batchChangesSiteCredentialResolver.SSHPublicKey",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesSiteCredentialResolver.SSHPublicKey",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesSiteCredentialResolver) SSHPublicKey(ctx context.Context) (*string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesSiteCredentialResolver) SSHPublicKey(ctx context.Context) (*string, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangesUserCredentialResolver",
              "documentation": {
                "identifier": "batchChangesUserCredentialResolver",
                "newPage": false,
                "searchKey": "resolvers.batchChangesUserCredentialResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchChangesUserCredentialResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchChangesUserCredentialResolver struct {\n\tcredential *database.UserCredential\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesUserCredentialResolver.CreatedAt",
                    "documentation": {
                      "identifier": "batchChangesUserCredentialResolver.CreatedAt",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesUserCredentialResolver.CreatedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesUserCredentialResolver) CreatedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesUserCredentialResolver) CreatedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesUserCredentialResolver.ExternalServiceKind",
                    "documentation": {
                      "identifier": "batchChangesUserCredentialResolver.ExternalServiceKind",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesUserCredentialResolver.ExternalServiceKind",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesUserCredentialResolver) ExternalServiceKind() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesUserCredentialResolver) ExternalServiceKind() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesUserCredentialResolver.ExternalServiceURL",
                    "documentation": {
                      "identifier": "batchChangesUserCredentialResolver.ExternalServiceURL",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesUserCredentialResolver.ExternalServiceURL",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesUserCredentialResolver) ExternalServiceURL() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesUserCredentialResolver) ExternalServiceURL() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesUserCredentialResolver.ID",
                    "documentation": {
                      "identifier": "batchChangesUserCredentialResolver.ID",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesUserCredentialResolver.ID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesUserCredentialResolver) ID() graphql.ID"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesUserCredentialResolver) ID() graphql.ID\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesUserCredentialResolver.IsSiteCredential",
                    "documentation": {
                      "identifier": "batchChangesUserCredentialResolver.IsSiteCredential",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesUserCredentialResolver.IsSiteCredential",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesUserCredentialResolver) IsSiteCredential() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesUserCredentialResolver) IsSiteCredential() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchChangesUserCredentialResolver.SSHPublicKey",
                    "documentation": {
                      "identifier": "batchChangesUserCredentialResolver.SSHPublicKey",
                      "newPage": false,
                      "searchKey": "resolvers.batchChangesUserCredentialResolver.SSHPublicKey",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *batchChangesUserCredentialResolver) SSHPublicKey(ctx context.Context) (*string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *batchChangesUserCredentialResolver) SSHPublicKey(ctx context.Context) (*string, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchSpecCreatedArg",
              "documentation": {
                "identifier": "batchSpecCreatedArg",
                "newPage": false,
                "searchKey": "resolvers.batchSpecCreatedArg",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchSpecCreatedArg struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchSpecCreatedArg struct {\n\tChangesetSpecsCount int `json:\"changeset_specs_count\"`\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver",
              "documentation": {
                "identifier": "batchSpecResolver",
                "newPage": false,
                "searchKey": "resolvers.batchSpecResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type batchSpecResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype batchSpecResolver struct {\n\tstore *store.Store\n\n\tbatchSpec          *btypes.BatchSpec\n\tpreloadedNamespace *graphqlbackend.NamespaceResolver\n\n\t// We cache the namespace on the resolver, since it's accessed more than once.\n\tnamespaceOnce sync.Once\n\tnamespace     *graphqlbackend.NamespaceResolver\n\tnamespaceErr  error\n\n\t// TODO(campaigns-deprecation): This should be removed once we remove campaigns completely\n\tshouldActAsCampaignSpec bool\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ActAsCampaignSpec",
                    "documentation": {
                      "identifier": "batchSpecResolver.ActAsCampaignSpec",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ActAsCampaignSpec",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ActAsCampaignSpec() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ActAsCampaignSpec() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.AppliesToBatchChange",
                    "documentation": {
                      "identifier": "batchSpecResolver.AppliesToBatchChange",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.AppliesToBatchChange",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) AppliesToBatchChange(ctx context.Context) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) AppliesToBatchChange(ctx context.Context) (graphqlbackend.BatchChangeResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.AppliesToCampaign",
                    "documentation": {
                      "identifier": "batchSpecResolver.AppliesToCampaign",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.AppliesToCampaign",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) AppliesToCampaign(ctx context.Context) (graphqlbackend.BatchChangeResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) AppliesToCampaign(ctx context.Context) (graphqlbackend.BatchChangeResolver, error)\n```\n\nTODO(campaigns-deprecation): This should be removed once we remove campaigns completely. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ApplyPreview",
                    "documentation": {
                      "identifier": "batchSpecResolver.ApplyPreview",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ApplyPreview",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ApplyPreview(ctx context.Context, args *graphqlbackend.ChangesetApplyPreviewConnectionArgs) (graphqlbackend.ChangesetApplyPreviewConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ApplyPreview(ctx context.Context, args *graphqlbackend.ChangesetApplyPreviewConnectionArgs) (graphqlbackend.ChangesetApplyPreviewConnectionResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ApplyURL",
                    "documentation": {
                      "identifier": "batchSpecResolver.ApplyURL",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ApplyURL",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ApplyURL(ctx context.Context) (string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ApplyURL(ctx context.Context) (string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ChangesetSpecs",
                    "documentation": {
                      "identifier": "batchSpecResolver.ChangesetSpecs",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ChangesetSpecs",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ChangesetSpecs(ctx context.Context, args *graphqlbackend.ChangesetSpecsConnectionArgs) (graphqlbackend.ChangesetSpecConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ChangesetSpecs(ctx context.Context, args *graphqlbackend.ChangesetSpecsConnectionArgs) (graphqlbackend.ChangesetSpecConnectionResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.CreatedAt",
                    "documentation": {
                      "identifier": "batchSpecResolver.CreatedAt",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.CreatedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) CreatedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) CreatedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.Creator",
                    "documentation": {
                      "identifier": "batchSpecResolver.Creator",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.Creator",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) Creator(ctx context.Context) (*graphqlbackend.UserResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) Creator(ctx context.Context) (*graphqlbackend.UserResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.Description",
                    "documentation": {
                      "identifier": "batchSpecResolver.Description",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.Description",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) Description() graphqlbackend.BatchChangeDescriptionResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) Description() graphqlbackend.BatchChangeDescriptionResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.DiffStat",
                    "documentation": {
                      "identifier": "batchSpecResolver.DiffStat",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.DiffStat",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) DiffStat(ctx context.Context) (*graphqlbackend.DiffStat, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) DiffStat(ctx context.Context) (*graphqlbackend.DiffStat, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ExpiresAt",
                    "documentation": {
                      "identifier": "batchSpecResolver.ExpiresAt",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ExpiresAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ExpiresAt() *graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ExpiresAt() *graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ID",
                    "documentation": {
                      "identifier": "batchSpecResolver.ID",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ID() graphql.ID"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ID() graphql.ID\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.Namespace",
                    "documentation": {
                      "identifier": "batchSpecResolver.Namespace",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.Namespace",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) Namespace(ctx context.Context) (*graphqlbackend.NamespaceResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) Namespace(ctx context.Context) (*graphqlbackend.NamespaceResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.OriginalInput",
                    "documentation": {
                      "identifier": "batchSpecResolver.OriginalInput",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.OriginalInput",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) OriginalInput() (string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) OriginalInput() (string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ParsedInput",
                    "documentation": {
                      "identifier": "batchSpecResolver.ParsedInput",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ParsedInput",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ParsedInput() (graphqlbackend.JSONValue, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ParsedInput() (graphqlbackend.JSONValue, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.SupersedingBatchSpec",
                    "documentation": {
                      "identifier": "batchSpecResolver.SupersedingBatchSpec",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.SupersedingBatchSpec",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) SupersedingBatchSpec(ctx context.Context) (graphqlbackend.BatchSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) SupersedingBatchSpec(ctx context.Context) (graphqlbackend.BatchSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.SupersedingCampaignSpec",
                    "documentation": {
                      "identifier": "batchSpecResolver.SupersedingCampaignSpec",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.SupersedingCampaignSpec",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) SupersedingCampaignSpec(ctx context.Context) (graphqlbackend.BatchSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) SupersedingCampaignSpec(ctx context.Context) (graphqlbackend.BatchSpecResolver, error)\n```\n\nTODO(campaigns-deprecation): This should be removed once we remove campaigns completely. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ViewerBatchChangesCodeHosts",
                    "documentation": {
                      "identifier": "batchSpecResolver.ViewerBatchChangesCodeHosts",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ViewerBatchChangesCodeHosts",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ViewerBatchChangesCodeHosts(ctx context.Context, args *graphqlbackend.ListViewerBatchChangesCodeHostsArgs) (graphqlbackend.BatchChangesCodeHostConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ViewerBatchChangesCodeHosts(ctx context.Context, args *graphqlbackend.ListViewerBatchChangesCodeHostsArgs) (graphqlbackend.BatchChangesCodeHostConnectionResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ViewerCampaignsCodeHosts",
                    "documentation": {
                      "identifier": "batchSpecResolver.ViewerCampaignsCodeHosts",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ViewerCampaignsCodeHosts",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ViewerCampaignsCodeHosts(ctx context.Context, args *graphqlbackend.ListViewerCampaignsCodeHostsArgs) (graphqlbackend.CampaignsCodeHostConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ViewerCampaignsCodeHosts(ctx context.Context, args *graphqlbackend.ListViewerCampaignsCodeHostsArgs) (graphqlbackend.CampaignsCodeHostConnectionResolver, error)\n```\n\nTODO(campaigns-deprecation): Remove when campaigns are fully removed \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.ViewerCanAdminister",
                    "documentation": {
                      "identifier": "batchSpecResolver.ViewerCanAdminister",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.ViewerCanAdminister",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) ViewerCanAdminister(ctx context.Context) (bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) ViewerCanAdminister(ctx context.Context) (bool, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#batchSpecResolver.computeNamespace",
                    "documentation": {
                      "identifier": "batchSpecResolver.computeNamespace",
                      "newPage": false,
                      "searchKey": "resolvers.batchSpecResolver.computeNamespace",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *batchSpecResolver) computeNamespace(ctx context.Context) (*graphqlbackend.NamespaceResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *batchSpecResolver) computeNamespace(ctx context.Context) (*graphqlbackend.NamespaceResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#bulkOperationConnectionResolver",
              "documentation": {
                "identifier": "bulkOperationConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.bulkOperationConnectionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type bulkOperationConnectionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype bulkOperationConnectionResolver struct {\n\tstore         *store.Store\n\tbatchChangeID int64\n\topts          store.ListBulkOperationsOpts\n\n\t// Cache results because they are used by multiple fields\n\tonce           sync.Once\n\tbulkOperations []*btypes.BulkOperation\n\tnext           int64\n\terr            error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationConnectionResolver.Nodes",
                    "documentation": {
                      "identifier": "bulkOperationConnectionResolver.Nodes",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationConnectionResolver.Nodes",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.BulkOperationResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.BulkOperationResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationConnectionResolver.PageInfo",
                    "documentation": {
                      "identifier": "bulkOperationConnectionResolver.PageInfo",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationConnectionResolver.PageInfo",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationConnectionResolver.TotalCount",
                    "documentation": {
                      "identifier": "bulkOperationConnectionResolver.TotalCount",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationConnectionResolver.TotalCount",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationConnectionResolver) TotalCount(ctx context.Context) (int32, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationConnectionResolver) TotalCount(ctx context.Context) (int32, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationConnectionResolver.compute",
                    "documentation": {
                      "identifier": "bulkOperationConnectionResolver.compute",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationConnectionResolver.compute",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationConnectionResolver) compute(ctx context.Context) ([]*btypes.BulkOperation, int64, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationConnectionResolver) compute(ctx context.Context) ([]*btypes.BulkOperation, int64, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver",
              "documentation": {
                "identifier": "bulkOperationResolver",
                "newPage": false,
                "searchKey": "resolvers.bulkOperationResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type bulkOperationResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype bulkOperationResolver struct {\n\tstore         *store.Store\n\tbulkOperation *btypes.BulkOperation\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver.ChangesetCount",
                    "documentation": {
                      "identifier": "bulkOperationResolver.ChangesetCount",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationResolver.ChangesetCount",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationResolver) ChangesetCount() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationResolver) ChangesetCount() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver.CreatedAt",
                    "documentation": {
                      "identifier": "bulkOperationResolver.CreatedAt",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationResolver.CreatedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationResolver) CreatedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationResolver) CreatedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver.Errors",
                    "documentation": {
                      "identifier": "bulkOperationResolver.Errors",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationResolver.Errors",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationResolver) Errors(ctx context.Context) ([]graphqlbackend.ChangesetJobErrorResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationResolver) Errors(ctx context.Context) ([]graphqlbackend.ChangesetJobErrorResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver.FinishedAt",
                    "documentation": {
                      "identifier": "bulkOperationResolver.FinishedAt",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationResolver.FinishedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationResolver) FinishedAt() *graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationResolver) FinishedAt() *graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver.ID",
                    "documentation": {
                      "identifier": "bulkOperationResolver.ID",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationResolver.ID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationResolver) ID() graphql.ID"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationResolver) ID() graphql.ID\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver.Initiator",
                    "documentation": {
                      "identifier": "bulkOperationResolver.Initiator",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationResolver.Initiator",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationResolver) Initiator(ctx context.Context) (*graphqlbackend.UserResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationResolver) Initiator(ctx context.Context) (*graphqlbackend.UserResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver.Progress",
                    "documentation": {
                      "identifier": "bulkOperationResolver.Progress",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationResolver.Progress",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationResolver) Progress() float64"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationResolver) Progress() float64\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver.State",
                    "documentation": {
                      "identifier": "bulkOperationResolver.State",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationResolver.State",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationResolver) State() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationResolver) State() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#bulkOperationResolver.Type",
                    "documentation": {
                      "identifier": "bulkOperationResolver.Type",
                      "newPage": false,
                      "searchKey": "resolvers.bulkOperationResolver.Type",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *bulkOperationResolver) Type() (string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *bulkOperationResolver) Type() (string, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#campaignsCodeHostConnectionResolver",
              "documentation": {
                "identifier": "campaignsCodeHostConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.campaignsCodeHostConnectionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type campaignsCodeHostConnectionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype campaignsCodeHostConnectionResolver struct {\n\tgraphqlbackend.BatchChangesCodeHostConnectionResolver\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#campaignsCodeHostConnectionResolver.Nodes",
                    "documentation": {
                      "identifier": "campaignsCodeHostConnectionResolver.Nodes",
                      "newPage": false,
                      "searchKey": "resolvers.campaignsCodeHostConnectionResolver.Nodes",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *campaignsCodeHostConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.CampaignsCodeHostResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *campaignsCodeHostConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.CampaignsCodeHostResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#campaignsCodeHostConnectionResolver.PageInfo",
                    "documentation": {
                      "identifier": "campaignsCodeHostConnectionResolver.PageInfo",
                      "newPage": false,
                      "searchKey": "resolvers.campaignsCodeHostConnectionResolver.PageInfo",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *campaignsCodeHostConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *campaignsCodeHostConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#campaignsCodeHostConnectionResolver.TotalCount",
                    "documentation": {
                      "identifier": "campaignsCodeHostConnectionResolver.TotalCount",
                      "newPage": false,
                      "searchKey": "resolvers.campaignsCodeHostConnectionResolver.TotalCount",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *campaignsCodeHostConnectionResolver) TotalCount(ctx context.Context) (int32, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *campaignsCodeHostConnectionResolver) TotalCount(ctx context.Context) (int32, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#campaignsCodeHostResolver",
              "documentation": {
                "identifier": "campaignsCodeHostResolver",
                "newPage": false,
                "searchKey": "resolvers.campaignsCodeHostResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type campaignsCodeHostResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype campaignsCodeHostResolver struct {\n\tgraphqlbackend.BatchChangesCodeHostResolver\n}\n```\n\nTODO(campaigns-deprecation): Remove this wrapper type. It just exists to fulfil the interface of graphqlbackend.CampaignsCodeHostConnectionResolver. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#campaignsCodeHostResolver.Credential",
                    "documentation": {
                      "identifier": "campaignsCodeHostResolver.Credential",
                      "newPage": false,
                      "searchKey": "resolvers.campaignsCodeHostResolver.Credential",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *campaignsCodeHostResolver) Credential() graphqlbackend.CampaignsCredentialResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *campaignsCodeHostResolver) Credential() graphqlbackend.CampaignsCredentialResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#campaignsCodeHostResolver.ExternalServiceKind",
                    "documentation": {
                      "identifier": "campaignsCodeHostResolver.ExternalServiceKind",
                      "newPage": false,
                      "searchKey": "resolvers.campaignsCodeHostResolver.ExternalServiceKind",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *campaignsCodeHostResolver) ExternalServiceKind() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *campaignsCodeHostResolver) ExternalServiceKind() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#campaignsCodeHostResolver.ExternalServiceURL",
                    "documentation": {
                      "identifier": "campaignsCodeHostResolver.ExternalServiceURL",
                      "newPage": false,
                      "searchKey": "resolvers.campaignsCodeHostResolver.ExternalServiceURL",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *campaignsCodeHostResolver) ExternalServiceURL() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *campaignsCodeHostResolver) ExternalServiceURL() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#campaignsCodeHostResolver.RequiresSSH",
                    "documentation": {
                      "identifier": "campaignsCodeHostResolver.RequiresSSH",
                      "newPage": false,
                      "searchKey": "resolvers.campaignsCodeHostResolver.RequiresSSH",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *campaignsCodeHostResolver) RequiresSSH() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *campaignsCodeHostResolver) RequiresSSH() bool\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionResolver",
              "documentation": {
                "identifier": "changesetApplyPreviewConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetApplyPreviewConnectionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetApplyPreviewConnectionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetApplyPreviewConnectionResolver struct {\n\tstore *store.Store\n\n\topts        store.GetRewirerMappingsOpts\n\taction      *btypes.ReconcilerOperation\n\tbatchSpecID int64\n\n\tonce     sync.Once\n\tmappings *rewirerMappingsFacade\n\terr      error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionResolver.Nodes",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionResolver.Nodes",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionResolver.Nodes",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.ChangesetApplyPreviewResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.ChangesetApplyPreviewResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionResolver.PageInfo",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionResolver.PageInfo",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionResolver.PageInfo",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionResolver.Stats",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionResolver.Stats",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionResolver.Stats",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionResolver) Stats(ctx context.Context) (graphqlbackend.ChangesetApplyPreviewConnectionStatsResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionResolver) Stats(ctx context.Context) (graphqlbackend.ChangesetApplyPreviewConnectionStatsResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionResolver.TotalCount",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionResolver.TotalCount",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionResolver.TotalCount",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionResolver) TotalCount(ctx context.Context) (int32, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionResolver) TotalCount(ctx context.Context) (int32, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionResolver.compute",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionResolver.compute",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionResolver.compute",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionResolver) compute(ctx context.Context) (*rewirerMappingsFacade, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionResolver) compute(ctx context.Context) (*rewirerMappingsFacade, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver",
              "documentation": {
                "identifier": "changesetApplyPreviewConnectionStatsResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetApplyPreviewConnectionStatsResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetApplyPreviewConnectionStatsResolver struct {\n\tpush         int32\n\tupdate       int32\n\tundraft      int32\n\tpublish      int32\n\tpublishDraft int32\n\tsync         int32\n\t_import      int32\n\tclose        int32\n\treopen       int32\n\tsleep        int32\n\tdetach       int32\n\tarchive      int32\n\n\tadded    int32\n\tmodified int32\n\tremoved  int32\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Added",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Added",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Added",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Added() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Added() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Archive",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Archive",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Archive",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Archive() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Archive() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Close",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Close",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Close",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Close() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Close() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Detach",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Detach",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Detach",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Detach() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Detach() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Import",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Import",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Import",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Import() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Import() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Modified",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Modified",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Modified",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Modified() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Modified() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Publish",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Publish",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Publish",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Publish() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Publish() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.PublishDraft",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.PublishDraft",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.PublishDraft",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) PublishDraft() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) PublishDraft() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Push",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Push",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Push",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Push() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Push() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Removed",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Removed",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Removed",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Removed() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Removed() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Reopen",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Reopen",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Reopen",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Reopen() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Reopen() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Sleep",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Sleep",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Sleep",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Sleep() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Sleep() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Sync",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Sync",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Sync",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Sync() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Sync() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Undraft",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Undraft",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Undraft",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Undraft() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Undraft() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewConnectionStatsResolver.Update",
                    "documentation": {
                      "identifier": "changesetApplyPreviewConnectionStatsResolver.Update",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewConnectionStatsResolver.Update",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewConnectionStatsResolver) Update() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewConnectionStatsResolver) Update() int32\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewResolver",
              "documentation": {
                "identifier": "changesetApplyPreviewResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetApplyPreviewResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetApplyPreviewResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetApplyPreviewResolver struct {\n\tstore *store.Store\n\n\tmapping              *btypes.RewirerMapping\n\tpreloadedNextSync    time.Time\n\tpreloadedBatchChange *btypes.BatchChange\n\tbatchSpecID          int64\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewResolver.ToHiddenChangesetApplyPreview",
                    "documentation": {
                      "identifier": "changesetApplyPreviewResolver.ToHiddenChangesetApplyPreview",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewResolver.ToHiddenChangesetApplyPreview",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewResolver) ToHiddenChangesetApplyPreview() (graphqlbackend.HiddenChangesetApplyPreviewResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewResolver) ToHiddenChangesetApplyPreview() (graphqlbackend.HiddenChangesetApplyPreviewResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewResolver.ToVisibleChangesetApplyPreview",
                    "documentation": {
                      "identifier": "changesetApplyPreviewResolver.ToVisibleChangesetApplyPreview",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewResolver.ToVisibleChangesetApplyPreview",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewResolver) ToVisibleChangesetApplyPreview() (graphqlbackend.VisibleChangesetApplyPreviewResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewResolver) ToVisibleChangesetApplyPreview() (graphqlbackend.VisibleChangesetApplyPreviewResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetApplyPreviewResolver.repoAccessible",
                    "documentation": {
                      "identifier": "changesetApplyPreviewResolver.repoAccessible",
                      "newPage": false,
                      "searchKey": "resolvers.changesetApplyPreviewResolver.repoAccessible",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetApplyPreviewResolver) repoAccessible() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetApplyPreviewResolver) repoAccessible() bool\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver",
              "documentation": {
                "identifier": "changesetCountsResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetCountsResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetCountsResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetCountsResolver struct {\n\tcounts *state.ChangesetCounts\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver.Closed",
                    "documentation": {
                      "identifier": "changesetCountsResolver.Closed",
                      "newPage": false,
                      "searchKey": "resolvers.changesetCountsResolver.Closed",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetCountsResolver) Closed() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetCountsResolver) Closed() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver.Date",
                    "documentation": {
                      "identifier": "changesetCountsResolver.Date",
                      "newPage": false,
                      "searchKey": "resolvers.changesetCountsResolver.Date",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetCountsResolver) Date() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetCountsResolver) Date() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver.Draft",
                    "documentation": {
                      "identifier": "changesetCountsResolver.Draft",
                      "newPage": false,
                      "searchKey": "resolvers.changesetCountsResolver.Draft",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetCountsResolver) Draft() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetCountsResolver) Draft() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver.Merged",
                    "documentation": {
                      "identifier": "changesetCountsResolver.Merged",
                      "newPage": false,
                      "searchKey": "resolvers.changesetCountsResolver.Merged",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetCountsResolver) Merged() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetCountsResolver) Merged() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver.Open",
                    "documentation": {
                      "identifier": "changesetCountsResolver.Open",
                      "newPage": false,
                      "searchKey": "resolvers.changesetCountsResolver.Open",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetCountsResolver) Open() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetCountsResolver) Open() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver.OpenApproved",
                    "documentation": {
                      "identifier": "changesetCountsResolver.OpenApproved",
                      "newPage": false,
                      "searchKey": "resolvers.changesetCountsResolver.OpenApproved",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetCountsResolver) OpenApproved() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetCountsResolver) OpenApproved() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver.OpenChangesRequested",
                    "documentation": {
                      "identifier": "changesetCountsResolver.OpenChangesRequested",
                      "newPage": false,
                      "searchKey": "resolvers.changesetCountsResolver.OpenChangesRequested",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetCountsResolver) OpenChangesRequested() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetCountsResolver) OpenChangesRequested() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver.OpenPending",
                    "documentation": {
                      "identifier": "changesetCountsResolver.OpenPending",
                      "newPage": false,
                      "searchKey": "resolvers.changesetCountsResolver.OpenPending",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetCountsResolver) OpenPending() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetCountsResolver) OpenPending() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetCountsResolver.Total",
                    "documentation": {
                      "identifier": "changesetCountsResolver.Total",
                      "newPage": false,
                      "searchKey": "resolvers.changesetCountsResolver.Total",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetCountsResolver) Total() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetCountsResolver) Total() int32\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver",
              "documentation": {
                "identifier": "changesetDescriptionResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetDescriptionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetDescriptionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetDescriptionResolver struct {\n\tstore        *store.Store\n\trepoResolver *graphqlbackend.RepositoryResolver\n\tdesc         *btypes.ChangesetSpecDescription\n\tdiffStat     diff.Stat\n}\n```\n\nchangesetDescriptionResolver implements both ChangesetDescription interfaces: ExistingChangesetReferenceResolver and GitBranchChangesetDescriptionResolver. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.BaseRef",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.BaseRef",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.BaseRef",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) BaseRef() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) BaseRef() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.BaseRepository",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.BaseRepository",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.BaseRepository",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) BaseRepository() *graphqlbackend.RepositoryResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) BaseRepository() *graphqlbackend.RepositoryResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.BaseRev",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.BaseRev",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.BaseRev",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) BaseRev() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) BaseRev() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.Body",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.Body",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.Body",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) Body() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) Body() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.Commits",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.Commits",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.Commits",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) Commits() []graphqlbackend.GitCommitDescriptionResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) Commits() []graphqlbackend.GitCommitDescriptionResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.Diff",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.Diff",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.Diff",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) Diff(ctx context.Context) (graphqlbackend.PreviewRepositoryComparisonResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) Diff(ctx context.Context) (graphqlbackend.PreviewRepositoryComparisonResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.DiffStat",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.DiffStat",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.DiffStat",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) DiffStat() *graphqlbackend.DiffStat"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) DiffStat() *graphqlbackend.DiffStat\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.ExternalID",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.ExternalID",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.ExternalID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) ExternalID() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) ExternalID() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.HeadRef",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.HeadRef",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.HeadRef",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) HeadRef() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) HeadRef() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.HeadRepository",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.HeadRepository",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.HeadRepository",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) HeadRepository() *graphqlbackend.RepositoryResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) HeadRepository() *graphqlbackend.RepositoryResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.Published",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.Published",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.Published",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) Published() batches.PublishedValue"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) Published() batches.PublishedValue\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.Title",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.Title",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.Title",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) Title() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) Title() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.ToExistingChangesetReference",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.ToExistingChangesetReference",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.ToExistingChangesetReference",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) ToExistingChangesetReference() (graphqlbackend.ExistingChangesetReferenceResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) ToExistingChangesetReference() (graphqlbackend.ExistingChangesetReferenceResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetDescriptionResolver.ToGitBranchChangesetDescription",
                    "documentation": {
                      "identifier": "changesetDescriptionResolver.ToGitBranchChangesetDescription",
                      "newPage": false,
                      "searchKey": "resolvers.changesetDescriptionResolver.ToGitBranchChangesetDescription",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetDescriptionResolver) ToGitBranchChangesetDescription() (graphqlbackend.GitBranchChangesetDescriptionResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetDescriptionResolver) ToGitBranchChangesetDescription() (graphqlbackend.GitBranchChangesetDescriptionResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetEventResolver",
              "documentation": {
                "identifier": "changesetEventResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetEventResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetEventResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetEventResolver struct {\n\tstore             *store.Store\n\tchangesetResolver *changesetResolver\n\t*btypes.ChangesetEvent\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetEventResolver.Changeset",
                    "documentation": {
                      "identifier": "changesetEventResolver.Changeset",
                      "newPage": false,
                      "searchKey": "resolvers.changesetEventResolver.Changeset",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetEventResolver) Changeset() graphqlbackend.ExternalChangesetResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetEventResolver) Changeset() graphqlbackend.ExternalChangesetResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetEventResolver.CreatedAt",
                    "documentation": {
                      "identifier": "changesetEventResolver.CreatedAt",
                      "newPage": false,
                      "searchKey": "resolvers.changesetEventResolver.CreatedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetEventResolver) CreatedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetEventResolver) CreatedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetEventResolver.ID",
                    "documentation": {
                      "identifier": "changesetEventResolver.ID",
                      "newPage": false,
                      "searchKey": "resolvers.changesetEventResolver.ID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetEventResolver) ID() graphql.ID"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetEventResolver) ID() graphql.ID\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetEventsConnectionResolver",
              "documentation": {
                "identifier": "changesetEventsConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetEventsConnectionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetEventsConnectionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetEventsConnectionResolver struct {\n\tstore             *store.Store\n\tchangesetResolver *changesetResolver\n\tfirst             int\n\tcursor            int64\n\n\t// cache results because they are used by multiple fields\n\tonce            sync.Once\n\tchangesetEvents []*btypes.ChangesetEvent\n\tnext            int64\n\terr             error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetEventsConnectionResolver.Nodes",
                    "documentation": {
                      "identifier": "changesetEventsConnectionResolver.Nodes",
                      "newPage": false,
                      "searchKey": "resolvers.changesetEventsConnectionResolver.Nodes",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetEventsConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.ChangesetEventResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetEventsConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.ChangesetEventResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetEventsConnectionResolver.PageInfo",
                    "documentation": {
                      "identifier": "changesetEventsConnectionResolver.PageInfo",
                      "newPage": false,
                      "searchKey": "resolvers.changesetEventsConnectionResolver.PageInfo",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetEventsConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetEventsConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetEventsConnectionResolver.TotalCount",
                    "documentation": {
                      "identifier": "changesetEventsConnectionResolver.TotalCount",
                      "newPage": false,
                      "searchKey": "resolvers.changesetEventsConnectionResolver.TotalCount",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetEventsConnectionResolver) TotalCount(ctx context.Context) (int32, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetEventsConnectionResolver) TotalCount(ctx context.Context) (int32, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetEventsConnectionResolver.compute",
                    "documentation": {
                      "identifier": "changesetEventsConnectionResolver.compute",
                      "newPage": false,
                      "searchKey": "resolvers.changesetEventsConnectionResolver.compute",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetEventsConnectionResolver) compute(ctx context.Context) ([]*btypes.ChangesetEvent, int64, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetEventsConnectionResolver) compute(ctx context.Context) ([]*btypes.ChangesetEvent, int64, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetJobErrorResolver",
              "documentation": {
                "identifier": "changesetJobErrorResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetJobErrorResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetJobErrorResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetJobErrorResolver struct {\n\tstore     *store.Store\n\tchangeset *btypes.Changeset\n\trepo      *types.Repo\n\terror     string\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetJobErrorResolver.Changeset",
                    "documentation": {
                      "identifier": "changesetJobErrorResolver.Changeset",
                      "newPage": false,
                      "searchKey": "resolvers.changesetJobErrorResolver.Changeset",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetJobErrorResolver) Changeset() graphqlbackend.ChangesetResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetJobErrorResolver) Changeset() graphqlbackend.ChangesetResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetJobErrorResolver.Error",
                    "documentation": {
                      "identifier": "changesetJobErrorResolver.Error",
                      "newPage": false,
                      "searchKey": "resolvers.changesetJobErrorResolver.Error",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetJobErrorResolver) Error() *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetJobErrorResolver) Error() *string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetLabelResolver",
              "documentation": {
                "identifier": "changesetLabelResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetLabelResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetLabelResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetLabelResolver struct {\n\tlabel btypes.ChangesetLabel\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetLabelResolver.Color",
                    "documentation": {
                      "identifier": "changesetLabelResolver.Color",
                      "newPage": false,
                      "searchKey": "resolvers.changesetLabelResolver.Color",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetLabelResolver) Color() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetLabelResolver) Color() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetLabelResolver.Description",
                    "documentation": {
                      "identifier": "changesetLabelResolver.Description",
                      "newPage": false,
                      "searchKey": "resolvers.changesetLabelResolver.Description",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetLabelResolver) Description() *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetLabelResolver) Description() *string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetLabelResolver.Text",
                    "documentation": {
                      "identifier": "changesetLabelResolver.Text",
                      "newPage": false,
                      "searchKey": "resolvers.changesetLabelResolver.Text",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetLabelResolver) Text() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetLabelResolver) Text() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetResolver",
              "documentation": {
                "identifier": "changesetResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetResolver struct {\n\tstore *store.Store\n\n\tchangeset *btypes.Changeset\n\n\t// When repo is nil, this resolver resolves to a `HiddenExternalChangeset` in the API.\n\trepo         *types.Repo\n\trepoResolver *graphqlbackend.RepositoryResolver\n\n\tattemptedPreloadNextSyncAt bool\n\t// When the next sync is scheduled\n\tpreloadedNextSyncAt time.Time\n\tnextSyncAtOnce      sync.Once\n\tnextSyncAt          time.Time\n\tnextSyncAtErr       error\n\n\t// cache the current ChangesetSpec as it's accessed by multiple methods\n\tspecOnce sync.Once\n\tspec     *btypes.ChangesetSpec\n\tspecErr  error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#NewChangesetResolver",
                    "documentation": {
                      "identifier": "NewChangesetResolver",
                      "newPage": false,
                      "searchKey": "resolvers.NewChangesetResolver",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewChangesetResolver(store *store.Store, changeset *btypes.Changeset, repo *types.Repo) *changesetResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewChangesetResolver(store *store.Store, changeset *btypes.Changeset, repo *types.Repo) *changesetResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#NewChangesetResolverWithNextSync",
                    "documentation": {
                      "identifier": "NewChangesetResolverWithNextSync",
                      "newPage": false,
                      "searchKey": "resolvers.NewChangesetResolverWithNextSync",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewChangesetResolverWithNextSync(store *store.Store, changeset *btypes.Changeset, repo *types.Repo, nextSyncAt time.Time) *changesetResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewChangesetResolverWithNextSync(store *store.Store, changeset *btypes.Changeset, repo *types.Repo, nextSyncAt time.Time) *changesetResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.Author",
                    "documentation": {
                      "identifier": "changesetResolver.Author",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.Author",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) Author() (*graphqlbackend.PersonResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) Author() (*graphqlbackend.PersonResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.BatchChanges",
                    "documentation": {
                      "identifier": "changesetResolver.BatchChanges",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.BatchChanges",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) BatchChanges(ctx context.Context, args *graphqlbackend.ListBatchChangesArgs) (graphqlbackend.BatchChangesConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) BatchChanges(ctx context.Context, args *graphqlbackend.ListBatchChangesArgs) (graphqlbackend.BatchChangesConnectionResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.Body",
                    "documentation": {
                      "identifier": "changesetResolver.Body",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.Body",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) Body(ctx context.Context) (*string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) Body(ctx context.Context) (*string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.Campaigns",
                    "documentation": {
                      "identifier": "changesetResolver.Campaigns",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.Campaigns",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) Campaigns(ctx context.Context, args *graphqlbackend.ListBatchChangesArgs) (graphqlbackend.BatchChangesConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) Campaigns(ctx context.Context, args *graphqlbackend.ListBatchChangesArgs) (graphqlbackend.BatchChangesConnectionResolver, error)\n```\n\nTODO(campaigns-deprecation): This should be removed once we remove campaigns completely. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.CheckState",
                    "documentation": {
                      "identifier": "changesetResolver.CheckState",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.CheckState",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) CheckState() *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) CheckState() *string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.CreatedAt",
                    "documentation": {
                      "identifier": "changesetResolver.CreatedAt",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.CreatedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) CreatedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) CreatedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.CurrentSpec",
                    "documentation": {
                      "identifier": "changesetResolver.CurrentSpec",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.CurrentSpec",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) CurrentSpec(ctx context.Context) (graphqlbackend.VisibleChangesetSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) CurrentSpec(ctx context.Context) (graphqlbackend.VisibleChangesetSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.Diff",
                    "documentation": {
                      "identifier": "changesetResolver.Diff",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.Diff",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) Diff(ctx context.Context) (graphqlbackend.RepositoryComparisonInterface, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) Diff(ctx context.Context) (graphqlbackend.RepositoryComparisonInterface, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.DiffStat",
                    "documentation": {
                      "identifier": "changesetResolver.DiffStat",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.DiffStat",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) DiffStat(ctx context.Context) (*graphqlbackend.DiffStat, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) DiffStat(ctx context.Context) (*graphqlbackend.DiffStat, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.Error",
                    "documentation": {
                      "identifier": "changesetResolver.Error",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.Error",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) Error() *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) Error() *string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.Events",
                    "documentation": {
                      "identifier": "changesetResolver.Events",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.Events",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) Events(ctx context.Context, args *graphqlbackend.ChangesetEventsConnectionArgs) (graphqlbackend.ChangesetEventsConnectionResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) Events(ctx context.Context, args *graphqlbackend.ChangesetEventsConnectionArgs) (graphqlbackend.ChangesetEventsConnectionResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.ExternalID",
                    "documentation": {
                      "identifier": "changesetResolver.ExternalID",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.ExternalID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) ExternalID() *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) ExternalID() *string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.ExternalState",
                    "documentation": {
                      "identifier": "changesetResolver.ExternalState",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.ExternalState",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) ExternalState() *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) ExternalState() *string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.ExternalURL",
                    "documentation": {
                      "identifier": "changesetResolver.ExternalURL",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.ExternalURL",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) ExternalURL() (*externallink.Resolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) ExternalURL() (*externallink.Resolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.ID",
                    "documentation": {
                      "identifier": "changesetResolver.ID",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.ID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) ID() graphql.ID"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) ID() graphql.ID\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.Labels",
                    "documentation": {
                      "identifier": "changesetResolver.Labels",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.Labels",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) Labels(ctx context.Context) ([]graphqlbackend.ChangesetLabelResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) Labels(ctx context.Context) ([]graphqlbackend.ChangesetLabelResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.NextSyncAt",
                    "documentation": {
                      "identifier": "changesetResolver.NextSyncAt",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.NextSyncAt",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) NextSyncAt(ctx context.Context) (*graphqlbackend.DateTime, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) NextSyncAt(ctx context.Context) (*graphqlbackend.DateTime, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.PublicationState",
                    "documentation": {
                      "identifier": "changesetResolver.PublicationState",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.PublicationState",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) PublicationState() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) PublicationState() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.ReconcilerState",
                    "documentation": {
                      "identifier": "changesetResolver.ReconcilerState",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.ReconcilerState",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) ReconcilerState() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) ReconcilerState() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.Repository",
                    "documentation": {
                      "identifier": "changesetResolver.Repository",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.Repository",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) Repository(ctx context.Context) *graphqlbackend.RepositoryResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) Repository(ctx context.Context) *graphqlbackend.RepositoryResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.ReviewState",
                    "documentation": {
                      "identifier": "changesetResolver.ReviewState",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.ReviewState",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) ReviewState(ctx context.Context) *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) ReviewState(ctx context.Context) *string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.ScheduleEstimateAt",
                    "documentation": {
                      "identifier": "changesetResolver.ScheduleEstimateAt",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.ScheduleEstimateAt",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) ScheduleEstimateAt(ctx context.Context) (*graphqlbackend.DateTime, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) ScheduleEstimateAt(ctx context.Context) (*graphqlbackend.DateTime, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.State",
                    "documentation": {
                      "identifier": "changesetResolver.State",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.State",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) State() (string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) State() (string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.SyncerError",
                    "documentation": {
                      "identifier": "changesetResolver.SyncerError",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.SyncerError",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) SyncerError() *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) SyncerError() *string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.Title",
                    "documentation": {
                      "identifier": "changesetResolver.Title",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.Title",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) Title(ctx context.Context) (*string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) Title(ctx context.Context) (*string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.ToExternalChangeset",
                    "documentation": {
                      "identifier": "changesetResolver.ToExternalChangeset",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.ToExternalChangeset",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) ToExternalChangeset() (graphqlbackend.ExternalChangesetResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) ToExternalChangeset() (graphqlbackend.ExternalChangesetResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.ToHiddenExternalChangeset",
                    "documentation": {
                      "identifier": "changesetResolver.ToHiddenExternalChangeset",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.ToHiddenExternalChangeset",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) ToHiddenExternalChangeset() (graphqlbackend.HiddenExternalChangesetResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) ToHiddenExternalChangeset() (graphqlbackend.HiddenExternalChangesetResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.UpdatedAt",
                    "documentation": {
                      "identifier": "changesetResolver.UpdatedAt",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.UpdatedAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) UpdatedAt() graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) UpdatedAt() graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.computeNextSyncAt",
                    "documentation": {
                      "identifier": "changesetResolver.computeNextSyncAt",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.computeNextSyncAt",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) computeNextSyncAt(ctx context.Context) (time.Time, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) computeNextSyncAt(ctx context.Context) (time.Time, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.computeSpec",
                    "documentation": {
                      "identifier": "changesetResolver.computeSpec",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.computeSpec",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) computeSpec(ctx context.Context) (*btypes.ChangesetSpec, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) computeSpec(ctx context.Context) (*btypes.ChangesetSpec, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.getBranchSpecDescription",
                    "documentation": {
                      "identifier": "changesetResolver.getBranchSpecDescription",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.getBranchSpecDescription",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) getBranchSpecDescription(ctx context.Context) (*btypes.ChangesetSpecDescription, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) getBranchSpecDescription(ctx context.Context) (*btypes.ChangesetSpecDescription, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetResolver.repoAccessible",
                    "documentation": {
                      "identifier": "changesetResolver.repoAccessible",
                      "newPage": false,
                      "searchKey": "resolvers.changesetResolver.repoAccessible",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetResolver) repoAccessible() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetResolver) repoAccessible() bool\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetSpecConnectionResolver",
              "documentation": {
                "identifier": "changesetSpecConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetSpecConnectionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetSpecConnectionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetSpecConnectionResolver struct {\n\tstore *store.Store\n\n\topts        store.ListChangesetSpecsOpts\n\tbatchSpecID int64\n\n\t// Cache results because they are used by multiple fields\n\tonce           sync.Once\n\tchangesetSpecs btypes.ChangesetSpecs\n\treposByID      map[api.RepoID]*types.Repo\n\tnext           int64\n\terr            error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecConnectionResolver.Nodes",
                    "documentation": {
                      "identifier": "changesetSpecConnectionResolver.Nodes",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecConnectionResolver.Nodes",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.ChangesetSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.ChangesetSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecConnectionResolver.PageInfo",
                    "documentation": {
                      "identifier": "changesetSpecConnectionResolver.PageInfo",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecConnectionResolver.PageInfo",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecConnectionResolver.TotalCount",
                    "documentation": {
                      "identifier": "changesetSpecConnectionResolver.TotalCount",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecConnectionResolver.TotalCount",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecConnectionResolver) TotalCount(ctx context.Context) (int32, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecConnectionResolver) TotalCount(ctx context.Context) (int32, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecConnectionResolver.compute",
                    "documentation": {
                      "identifier": "changesetSpecConnectionResolver.compute",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecConnectionResolver.compute",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecConnectionResolver) compute(ctx context.Context) (btypes.ChangesetSpecs, map[api.RepoID]*types.Repo, int64, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecConnectionResolver) compute(ctx context.Context) (btypes.ChangesetSpecs, map[api.RepoID]*types.Repo, int64, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetSpecDeltaResolver",
              "documentation": {
                "identifier": "changesetSpecDeltaResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetSpecDeltaResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetSpecDeltaResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetSpecDeltaResolver struct {\n\tdelta reconciler.ChangesetSpecDelta\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecDeltaResolver.AuthorEmailChanged",
                    "documentation": {
                      "identifier": "changesetSpecDeltaResolver.AuthorEmailChanged",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecDeltaResolver.AuthorEmailChanged",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *changesetSpecDeltaResolver) AuthorEmailChanged() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *changesetSpecDeltaResolver) AuthorEmailChanged() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecDeltaResolver.AuthorNameChanged",
                    "documentation": {
                      "identifier": "changesetSpecDeltaResolver.AuthorNameChanged",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecDeltaResolver.AuthorNameChanged",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *changesetSpecDeltaResolver) AuthorNameChanged() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *changesetSpecDeltaResolver) AuthorNameChanged() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecDeltaResolver.BaseRefChanged",
                    "documentation": {
                      "identifier": "changesetSpecDeltaResolver.BaseRefChanged",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecDeltaResolver.BaseRefChanged",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *changesetSpecDeltaResolver) BaseRefChanged() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *changesetSpecDeltaResolver) BaseRefChanged() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecDeltaResolver.BodyChanged",
                    "documentation": {
                      "identifier": "changesetSpecDeltaResolver.BodyChanged",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecDeltaResolver.BodyChanged",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *changesetSpecDeltaResolver) BodyChanged() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *changesetSpecDeltaResolver) BodyChanged() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecDeltaResolver.CommitMessageChanged",
                    "documentation": {
                      "identifier": "changesetSpecDeltaResolver.CommitMessageChanged",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecDeltaResolver.CommitMessageChanged",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *changesetSpecDeltaResolver) CommitMessageChanged() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *changesetSpecDeltaResolver) CommitMessageChanged() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecDeltaResolver.DiffChanged",
                    "documentation": {
                      "identifier": "changesetSpecDeltaResolver.DiffChanged",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecDeltaResolver.DiffChanged",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *changesetSpecDeltaResolver) DiffChanged() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *changesetSpecDeltaResolver) DiffChanged() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecDeltaResolver.TitleChanged",
                    "documentation": {
                      "identifier": "changesetSpecDeltaResolver.TitleChanged",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecDeltaResolver.TitleChanged",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *changesetSpecDeltaResolver) TitleChanged() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *changesetSpecDeltaResolver) TitleChanged() bool\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecDeltaResolver.Undraft",
                    "documentation": {
                      "identifier": "changesetSpecDeltaResolver.Undraft",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecDeltaResolver.Undraft",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (c *changesetSpecDeltaResolver) Undraft() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (c *changesetSpecDeltaResolver) Undraft() bool\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetSpecResolver",
              "documentation": {
                "identifier": "changesetSpecResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetSpecResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetSpecResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetSpecResolver struct {\n\tstore *store.Store\n\n\tchangesetSpec *btypes.ChangesetSpec\n\n\trepo *types.Repo\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#NewChangesetSpecResolver",
                    "documentation": {
                      "identifier": "NewChangesetSpecResolver",
                      "newPage": false,
                      "searchKey": "resolvers.NewChangesetSpecResolver",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewChangesetSpecResolver(ctx context.Context, store *store.Store, changesetSpec *btypes.ChangesetSpec) (*changesetSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewChangesetSpecResolver(ctx context.Context, store *store.Store, changesetSpec *btypes.ChangesetSpec) (*changesetSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#NewChangesetSpecResolverWithRepo",
                    "documentation": {
                      "identifier": "NewChangesetSpecResolverWithRepo",
                      "newPage": false,
                      "searchKey": "resolvers.NewChangesetSpecResolverWithRepo",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewChangesetSpecResolverWithRepo(store *store.Store, repo *types.Repo, changesetSpec *btypes.ChangesetSpec) *changesetSpecResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewChangesetSpecResolverWithRepo(store *store.Store, repo *types.Repo, changesetSpec *btypes.ChangesetSpec) *changesetSpecResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecResolver.Description",
                    "documentation": {
                      "identifier": "changesetSpecResolver.Description",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecResolver.Description",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecResolver) Description(ctx context.Context) (graphqlbackend.ChangesetDescription, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecResolver) Description(ctx context.Context) (graphqlbackend.ChangesetDescription, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecResolver.ExpiresAt",
                    "documentation": {
                      "identifier": "changesetSpecResolver.ExpiresAt",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecResolver.ExpiresAt",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecResolver) ExpiresAt() *graphqlbackend.DateTime"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecResolver) ExpiresAt() *graphqlbackend.DateTime\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecResolver.ID",
                    "documentation": {
                      "identifier": "changesetSpecResolver.ID",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecResolver.ID",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecResolver) ID() graphql.ID"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecResolver) ID() graphql.ID\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecResolver.ToHiddenChangesetSpec",
                    "documentation": {
                      "identifier": "changesetSpecResolver.ToHiddenChangesetSpec",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecResolver.ToHiddenChangesetSpec",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecResolver) ToHiddenChangesetSpec() (graphqlbackend.HiddenChangesetSpecResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecResolver) ToHiddenChangesetSpec() (graphqlbackend.HiddenChangesetSpecResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecResolver.ToVisibleChangesetSpec",
                    "documentation": {
                      "identifier": "changesetSpecResolver.ToVisibleChangesetSpec",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecResolver.ToVisibleChangesetSpec",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecResolver) ToVisibleChangesetSpec() (graphqlbackend.VisibleChangesetSpecResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecResolver) ToVisibleChangesetSpec() (graphqlbackend.VisibleChangesetSpecResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecResolver.Type",
                    "documentation": {
                      "identifier": "changesetSpecResolver.Type",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecResolver.Type",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecResolver) Type() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecResolver) Type() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetSpecResolver.repoAccessible",
                    "documentation": {
                      "identifier": "changesetSpecResolver.repoAccessible",
                      "newPage": false,
                      "searchKey": "resolvers.changesetSpecResolver.repoAccessible",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetSpecResolver) repoAccessible() bool"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetSpecResolver) repoAccessible() bool\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetsConnectionResolver",
              "documentation": {
                "identifier": "changesetsConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetsConnectionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetsConnectionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetsConnectionResolver struct {\n\tstore *store.Store\n\n\topts store.ListChangesetsOpts\n\t// 🚨 SECURITY: If the given opts do not reveal hidden information about a\n\t// changeset by including the changeset in the result set, this should be\n\t// set to true.\n\toptsSafe bool\n\n\tonce sync.Once\n\t// changesets contains all changesets in this connection.\n\tchangesets btypes.Changesets\n\tnext       int64\n\terr        error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsConnectionResolver.Nodes",
                    "documentation": {
                      "identifier": "changesetsConnectionResolver.Nodes",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsConnectionResolver.Nodes",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.ChangesetResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsConnectionResolver) Nodes(ctx context.Context) ([]graphqlbackend.ChangesetResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsConnectionResolver.PageInfo",
                    "documentation": {
                      "identifier": "changesetsConnectionResolver.PageInfo",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsConnectionResolver.PageInfo",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsConnectionResolver) PageInfo(ctx context.Context) (*graphqlutil.PageInfo, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsConnectionResolver.TotalCount",
                    "documentation": {
                      "identifier": "changesetsConnectionResolver.TotalCount",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsConnectionResolver.TotalCount",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsConnectionResolver) TotalCount(ctx context.Context) (int32, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsConnectionResolver) TotalCount(ctx context.Context) (int32, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsConnectionResolver.compute",
                    "documentation": {
                      "identifier": "changesetsConnectionResolver.compute",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsConnectionResolver.compute",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsConnectionResolver) compute(ctx context.Context) (cs btypes.Changesets, next int64, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsConnectionResolver) compute(ctx context.Context) (cs btypes.Changesets, next int64, err error)\n```\n\ncompute loads all changesets matched by r.opts. If r.optsSafe is true, it returns all of them. If not, it filters out the ones to which the user doesn't have access by using the authz filter. \n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver",
              "documentation": {
                "identifier": "changesetsStatsResolver",
                "newPage": false,
                "searchKey": "resolvers.changesetsStatsResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type changesetsStatsResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype changesetsStatsResolver struct {\n\tstats btypes.ChangesetsStats\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Archived",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Archived",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Archived",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Archived() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Archived() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Closed",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Closed",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Closed",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Closed() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Closed() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Deleted",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Deleted",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Deleted",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Deleted() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Deleted() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Draft",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Draft",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Draft",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Draft() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Draft() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Failed",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Failed",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Failed",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Failed() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Failed() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Merged",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Merged",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Merged",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Merged() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Merged() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Open",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Open",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Open",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Open() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Open() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Processing",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Processing",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Processing",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Processing() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Processing() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Retrying",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Retrying",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Retrying",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Retrying() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Retrying() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Scheduled",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Scheduled",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Scheduled",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Scheduled() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Scheduled() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Total",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Total",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Total",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Total() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Total() int32\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#changesetsStatsResolver.Unpublished",
                    "documentation": {
                      "identifier": "changesetsStatsResolver.Unpublished",
                      "newPage": false,
                      "searchKey": "resolvers.changesetsStatsResolver.Unpublished",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *changesetsStatsResolver) Unpublished() int32"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *changesetsStatsResolver) Unpublished() int32\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#gitCommitDescriptionResolver",
              "documentation": {
                "identifier": "gitCommitDescriptionResolver",
                "newPage": false,
                "searchKey": "resolvers.gitCommitDescriptionResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type gitCommitDescriptionResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype gitCommitDescriptionResolver struct {\n\tstore       *store.Store\n\tmessage     string\n\tdiff        string\n\tauthorName  string\n\tauthorEmail string\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#gitCommitDescriptionResolver.Author",
                    "documentation": {
                      "identifier": "gitCommitDescriptionResolver.Author",
                      "newPage": false,
                      "searchKey": "resolvers.gitCommitDescriptionResolver.Author",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *gitCommitDescriptionResolver) Author() *graphqlbackend.PersonResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *gitCommitDescriptionResolver) Author() *graphqlbackend.PersonResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#gitCommitDescriptionResolver.Body",
                    "documentation": {
                      "identifier": "gitCommitDescriptionResolver.Body",
                      "newPage": false,
                      "searchKey": "resolvers.gitCommitDescriptionResolver.Body",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *gitCommitDescriptionResolver) Body() *string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *gitCommitDescriptionResolver) Body() *string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#gitCommitDescriptionResolver.Diff",
                    "documentation": {
                      "identifier": "gitCommitDescriptionResolver.Diff",
                      "newPage": false,
                      "searchKey": "resolvers.gitCommitDescriptionResolver.Diff",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *gitCommitDescriptionResolver) Diff() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *gitCommitDescriptionResolver) Diff() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#gitCommitDescriptionResolver.Message",
                    "documentation": {
                      "identifier": "gitCommitDescriptionResolver.Message",
                      "newPage": false,
                      "searchKey": "resolvers.gitCommitDescriptionResolver.Message",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *gitCommitDescriptionResolver) Message() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *gitCommitDescriptionResolver) Message() string\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#gitCommitDescriptionResolver.Subject",
                    "documentation": {
                      "identifier": "gitCommitDescriptionResolver.Subject",
                      "newPage": false,
                      "searchKey": "resolvers.gitCommitDescriptionResolver.Subject",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *gitCommitDescriptionResolver) Subject() string"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *gitCommitDescriptionResolver) Subject() string\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#hiddenApplyPreviewTargetsResolver",
              "documentation": {
                "identifier": "hiddenApplyPreviewTargetsResolver",
                "newPage": false,
                "searchKey": "resolvers.hiddenApplyPreviewTargetsResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type hiddenApplyPreviewTargetsResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype hiddenApplyPreviewTargetsResolver struct {\n\tstore *store.Store\n\n\tmapping           *btypes.RewirerMapping\n\tpreloadedNextSync time.Time\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#hiddenApplyPreviewTargetsResolver.Changeset",
                    "documentation": {
                      "identifier": "hiddenApplyPreviewTargetsResolver.Changeset",
                      "newPage": false,
                      "searchKey": "resolvers.hiddenApplyPreviewTargetsResolver.Changeset",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *hiddenApplyPreviewTargetsResolver) Changeset(ctx context.Context) (graphqlbackend.HiddenExternalChangesetResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *hiddenApplyPreviewTargetsResolver) Changeset(ctx context.Context) (graphqlbackend.HiddenExternalChangesetResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#hiddenApplyPreviewTargetsResolver.ChangesetSpec",
                    "documentation": {
                      "identifier": "hiddenApplyPreviewTargetsResolver.ChangesetSpec",
                      "newPage": false,
                      "searchKey": "resolvers.hiddenApplyPreviewTargetsResolver.ChangesetSpec",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *hiddenApplyPreviewTargetsResolver) ChangesetSpec(ctx context.Context) (graphqlbackend.HiddenChangesetSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *hiddenApplyPreviewTargetsResolver) ChangesetSpec(ctx context.Context) (graphqlbackend.HiddenChangesetSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#hiddenApplyPreviewTargetsResolver.ToHiddenApplyPreviewTargetsAttach",
                    "documentation": {
                      "identifier": "hiddenApplyPreviewTargetsResolver.ToHiddenApplyPreviewTargetsAttach",
                      "newPage": false,
                      "searchKey": "resolvers.hiddenApplyPreviewTargetsResolver.ToHiddenApplyPreviewTargetsAttach",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *hiddenApplyPreviewTargetsResolver) ToHiddenApplyPreviewTargetsAttach() (graphqlbackend.HiddenApplyPreviewTargetsAttachResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *hiddenApplyPreviewTargetsResolver) ToHiddenApplyPreviewTargetsAttach() (graphqlbackend.HiddenApplyPreviewTargetsAttachResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#hiddenApplyPreviewTargetsResolver.ToHiddenApplyPreviewTargetsDetach",
                    "documentation": {
                      "identifier": "hiddenApplyPreviewTargetsResolver.ToHiddenApplyPreviewTargetsDetach",
                      "newPage": false,
                      "searchKey": "resolvers.hiddenApplyPreviewTargetsResolver.ToHiddenApplyPreviewTargetsDetach",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *hiddenApplyPreviewTargetsResolver) ToHiddenApplyPreviewTargetsDetach() (graphqlbackend.HiddenApplyPreviewTargetsDetachResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *hiddenApplyPreviewTargetsResolver) ToHiddenApplyPreviewTargetsDetach() (graphqlbackend.HiddenApplyPreviewTargetsDetachResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#hiddenApplyPreviewTargetsResolver.ToHiddenApplyPreviewTargetsUpdate",
                    "documentation": {
                      "identifier": "hiddenApplyPreviewTargetsResolver.ToHiddenApplyPreviewTargetsUpdate",
                      "newPage": false,
                      "searchKey": "resolvers.hiddenApplyPreviewTargetsResolver.ToHiddenApplyPreviewTargetsUpdate",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *hiddenApplyPreviewTargetsResolver) ToHiddenApplyPreviewTargetsUpdate() (graphqlbackend.HiddenApplyPreviewTargetsUpdateResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *hiddenApplyPreviewTargetsResolver) ToHiddenApplyPreviewTargetsUpdate() (graphqlbackend.HiddenApplyPreviewTargetsUpdateResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#hiddenChangesetApplyPreviewResolver",
              "documentation": {
                "identifier": "hiddenChangesetApplyPreviewResolver",
                "newPage": false,
                "searchKey": "resolvers.hiddenChangesetApplyPreviewResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type hiddenChangesetApplyPreviewResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype hiddenChangesetApplyPreviewResolver struct {\n\tstore *store.Store\n\n\tmapping           *btypes.RewirerMapping\n\tpreloadedNextSync time.Time\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#hiddenChangesetApplyPreviewResolver.Delta",
                    "documentation": {
                      "identifier": "hiddenChangesetApplyPreviewResolver.Delta",
                      "newPage": false,
                      "searchKey": "resolvers.hiddenChangesetApplyPreviewResolver.Delta",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *hiddenChangesetApplyPreviewResolver) Delta(ctx context.Context) (graphqlbackend.ChangesetSpecDeltaResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *hiddenChangesetApplyPreviewResolver) Delta(ctx context.Context) (graphqlbackend.ChangesetSpecDeltaResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#hiddenChangesetApplyPreviewResolver.Operations",
                    "documentation": {
                      "identifier": "hiddenChangesetApplyPreviewResolver.Operations",
                      "newPage": false,
                      "searchKey": "resolvers.hiddenChangesetApplyPreviewResolver.Operations",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *hiddenChangesetApplyPreviewResolver) Operations(ctx context.Context) ([]string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *hiddenChangesetApplyPreviewResolver) Operations(ctx context.Context) ([]string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#hiddenChangesetApplyPreviewResolver.Targets",
                    "documentation": {
                      "identifier": "hiddenChangesetApplyPreviewResolver.Targets",
                      "newPage": false,
                      "searchKey": "resolvers.hiddenChangesetApplyPreviewResolver.Targets",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *hiddenChangesetApplyPreviewResolver) Targets() graphqlbackend.HiddenApplyPreviewTargetsResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *hiddenChangesetApplyPreviewResolver) Targets() graphqlbackend.HiddenApplyPreviewTargetsResolver\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#idType",
              "documentation": {
                "identifier": "idType",
                "newPage": false,
                "searchKey": "resolvers.idType",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type idType struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype idType struct {\n\texternalServiceID   string\n\texternalServiceType string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mockChangesetApplyPreviewResolver",
              "documentation": {
                "identifier": "mockChangesetApplyPreviewResolver",
                "newPage": false,
                "searchKey": "resolvers.mockChangesetApplyPreviewResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type mockChangesetApplyPreviewResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype mockChangesetApplyPreviewResolver struct {\n\thidden  graphqlbackend.HiddenChangesetApplyPreviewResolver\n\tvisible graphqlbackend.VisibleChangesetApplyPreviewResolver\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#mockChangesetApplyPreviewResolver.ToHiddenChangesetApplyPreview",
                    "documentation": {
                      "identifier": "mockChangesetApplyPreviewResolver.ToHiddenChangesetApplyPreview",
                      "newPage": false,
                      "searchKey": "resolvers.mockChangesetApplyPreviewResolver.ToHiddenChangesetApplyPreview",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *mockChangesetApplyPreviewResolver) ToHiddenChangesetApplyPreview() (graphqlbackend.HiddenChangesetApplyPreviewResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *mockChangesetApplyPreviewResolver) ToHiddenChangesetApplyPreview() (graphqlbackend.HiddenChangesetApplyPreviewResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#mockChangesetApplyPreviewResolver.ToVisibleChangesetApplyPreview",
                    "documentation": {
                      "identifier": "mockChangesetApplyPreviewResolver.ToVisibleChangesetApplyPreview",
                      "newPage": false,
                      "searchKey": "resolvers.mockChangesetApplyPreviewResolver.ToVisibleChangesetApplyPreview",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *mockChangesetApplyPreviewResolver) ToVisibleChangesetApplyPreview() (graphqlbackend.VisibleChangesetApplyPreviewResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *mockChangesetApplyPreviewResolver) ToVisibleChangesetApplyPreview() (graphqlbackend.VisibleChangesetApplyPreviewResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mockHiddenChangesetApplyPreviewResolver",
              "documentation": {
                "identifier": "mockHiddenChangesetApplyPreviewResolver",
                "newPage": false,
                "searchKey": "resolvers.mockHiddenChangesetApplyPreviewResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type mockHiddenChangesetApplyPreviewResolver struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype mockHiddenChangesetApplyPreviewResolver struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#mockHiddenChangesetApplyPreviewResolver.Delta",
                    "documentation": {
                      "identifier": "mockHiddenChangesetApplyPreviewResolver.Delta",
                      "newPage": false,
                      "searchKey": "resolvers.mockHiddenChangesetApplyPreviewResolver.Delta",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (*mockHiddenChangesetApplyPreviewResolver) Delta(context.Context) (graphqlbackend.ChangesetSpecDeltaResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (*mockHiddenChangesetApplyPreviewResolver) Delta(context.Context) (graphqlbackend.ChangesetSpecDeltaResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#mockHiddenChangesetApplyPreviewResolver.Operations",
                    "documentation": {
                      "identifier": "mockHiddenChangesetApplyPreviewResolver.Operations",
                      "newPage": false,
                      "searchKey": "resolvers.mockHiddenChangesetApplyPreviewResolver.Operations",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (*mockHiddenChangesetApplyPreviewResolver) Operations(context.Context) ([]string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (*mockHiddenChangesetApplyPreviewResolver) Operations(context.Context) ([]string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#mockHiddenChangesetApplyPreviewResolver.Targets",
                    "documentation": {
                      "identifier": "mockHiddenChangesetApplyPreviewResolver.Targets",
                      "newPage": false,
                      "searchKey": "resolvers.mockHiddenChangesetApplyPreviewResolver.Targets",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (*mockHiddenChangesetApplyPreviewResolver) Targets() graphqlbackend.HiddenApplyPreviewTargetsResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (*mockHiddenChangesetApplyPreviewResolver) Targets() graphqlbackend.HiddenApplyPreviewTargetsResolver\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mockVisibleChangesetApplyPreviewResolver",
              "documentation": {
                "identifier": "mockVisibleChangesetApplyPreviewResolver",
                "newPage": false,
                "searchKey": "resolvers.mockVisibleChangesetApplyPreviewResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type mockVisibleChangesetApplyPreviewResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype mockVisibleChangesetApplyPreviewResolver struct {\n\toperations    []btypes.ReconcilerOperation\n\toperationsErr error\n\tdelta         graphqlbackend.ChangesetSpecDeltaResolver\n\tdeltaErr      error\n\ttargets       graphqlbackend.VisibleApplyPreviewTargetsResolver\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#mockVisibleChangesetApplyPreviewResolver.Delta",
                    "documentation": {
                      "identifier": "mockVisibleChangesetApplyPreviewResolver.Delta",
                      "newPage": false,
                      "searchKey": "resolvers.mockVisibleChangesetApplyPreviewResolver.Delta",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *mockVisibleChangesetApplyPreviewResolver) Delta(context.Context) (graphqlbackend.ChangesetSpecDeltaResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *mockVisibleChangesetApplyPreviewResolver) Delta(context.Context) (graphqlbackend.ChangesetSpecDeltaResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#mockVisibleChangesetApplyPreviewResolver.Operations",
                    "documentation": {
                      "identifier": "mockVisibleChangesetApplyPreviewResolver.Operations",
                      "newPage": false,
                      "searchKey": "resolvers.mockVisibleChangesetApplyPreviewResolver.Operations",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *mockVisibleChangesetApplyPreviewResolver) Operations(context.Context) ([]string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *mockVisibleChangesetApplyPreviewResolver) Operations(context.Context) ([]string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#mockVisibleChangesetApplyPreviewResolver.Targets",
                    "documentation": {
                      "identifier": "mockVisibleChangesetApplyPreviewResolver.Targets",
                      "newPage": false,
                      "searchKey": "resolvers.mockVisibleChangesetApplyPreviewResolver.Targets",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *mockVisibleChangesetApplyPreviewResolver) Targets() graphqlbackend.VisibleApplyPreviewTargetsResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *mockVisibleChangesetApplyPreviewResolver) Targets() graphqlbackend.VisibleApplyPreviewTargetsResolver\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#rewirerMappingPage",
              "documentation": {
                "identifier": "rewirerMappingPage",
                "newPage": false,
                "searchKey": "resolvers.rewirerMappingPage",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type rewirerMappingPage struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype rewirerMappingPage struct {\n\tMappings btypes.RewirerMappings\n\n\t// TotalCount represents the total count of filtered results, but not\n\t// necessarily the full set of results.\n\tTotalCount int\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#rewirerMappingPageOpts",
              "documentation": {
                "identifier": "rewirerMappingPageOpts",
                "newPage": false,
                "searchKey": "resolvers.rewirerMappingPageOpts",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type rewirerMappingPageOpts struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype rewirerMappingPageOpts struct {\n\t*database.LimitOffset\n\tOp *btypes.ReconcilerOperation\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#rewirerMappingsFacade",
              "documentation": {
                "identifier": "rewirerMappingsFacade",
                "newPage": false,
                "searchKey": "resolvers.rewirerMappingsFacade",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type rewirerMappingsFacade struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype rewirerMappingsFacade struct {\n\tAll btypes.RewirerMappings\n\n\t// Inputs from outside the resolver that we need to build other resolvers.\n\tbatchSpecID int64\n\tstore       *store.Store\n\n\t// This field is set when ReconcileBatchChange is called.\n\tbatchChange *btypes.BatchChange\n\n\t// Cache of filtered pages.\n\tpagesMu sync.Mutex\n\tpages   map[rewirerMappingPageOpts]*rewirerMappingPage\n\n\t// Cache of rewirer mapping resolvers.\n\tresolversMu sync.Mutex\n\tresolvers   map[*btypes.RewirerMapping]graphqlbackend.ChangesetApplyPreviewResolver\n}\n```\n\nrewirerMappingsFacade wraps btypes.RewirerMappings to provide memoised pagination and filtering functionality. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#newRewirerMappingsFacade",
                    "documentation": {
                      "identifier": "newRewirerMappingsFacade",
                      "newPage": false,
                      "searchKey": "resolvers.newRewirerMappingsFacade",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func newRewirerMappingsFacade(s *store.Store, batchSpecID int64) *rewirerMappingsFacade"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc newRewirerMappingsFacade(s *store.Store, batchSpecID int64) *rewirerMappingsFacade\n```\n\nnewRewirerMappingsFacade creates a new rewirer mappings object, which includes dry running the batch change reconciliation. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#rewirerMappingsFacade.Page",
                    "documentation": {
                      "identifier": "rewirerMappingsFacade.Page",
                      "newPage": false,
                      "searchKey": "resolvers.rewirerMappingsFacade.Page",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (rmf *rewirerMappingsFacade) Page(ctx context.Context, opts rewirerMappingPageOpts) (*rewirerMappingPage, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (rmf *rewirerMappingsFacade) Page(ctx context.Context, opts rewirerMappingPageOpts) (*rewirerMappingPage, error)\n```\n\nPage applies the given filter, and paginates the results. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#rewirerMappingsFacade.Resolver",
                    "documentation": {
                      "identifier": "rewirerMappingsFacade.Resolver",
                      "newPage": false,
                      "searchKey": "resolvers.rewirerMappingsFacade.Resolver",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (rmf *rewirerMappingsFacade) Resolver(mapping *btypes.RewirerMapping) graphqlbackend.ChangesetApplyPreviewResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (rmf *rewirerMappingsFacade) Resolver(mapping *btypes.RewirerMapping) graphqlbackend.ChangesetApplyPreviewResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#rewirerMappingsFacade.ResolverWithNextSync",
                    "documentation": {
                      "identifier": "rewirerMappingsFacade.ResolverWithNextSync",
                      "newPage": false,
                      "searchKey": "resolvers.rewirerMappingsFacade.ResolverWithNextSync",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (rmf *rewirerMappingsFacade) ResolverWithNextSync(mapping *btypes.RewirerMapping, nextSync time.Time) graphqlbackend.ChangesetApplyPreviewResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (rmf *rewirerMappingsFacade) ResolverWithNextSync(mapping *btypes.RewirerMapping, nextSync time.Time) graphqlbackend.ChangesetApplyPreviewResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#rewirerMappingsFacade.compute",
                    "documentation": {
                      "identifier": "rewirerMappingsFacade.compute",
                      "newPage": false,
                      "searchKey": "resolvers.rewirerMappingsFacade.compute",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (rmf *rewirerMappingsFacade) compute(ctx context.Context, opts store.GetRewirerMappingsOpts) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (rmf *rewirerMappingsFacade) compute(ctx context.Context, opts store.GetRewirerMappingsOpts) error\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#visibleApplyPreviewTargetsResolver",
              "documentation": {
                "identifier": "visibleApplyPreviewTargetsResolver",
                "newPage": false,
                "searchKey": "resolvers.visibleApplyPreviewTargetsResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type visibleApplyPreviewTargetsResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype visibleApplyPreviewTargetsResolver struct {\n\tstore *store.Store\n\n\tmapping           *btypes.RewirerMapping\n\tpreloadedNextSync time.Time\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleApplyPreviewTargetsResolver.Changeset",
                    "documentation": {
                      "identifier": "visibleApplyPreviewTargetsResolver.Changeset",
                      "newPage": false,
                      "searchKey": "resolvers.visibleApplyPreviewTargetsResolver.Changeset",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleApplyPreviewTargetsResolver) Changeset(ctx context.Context) (graphqlbackend.ExternalChangesetResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleApplyPreviewTargetsResolver) Changeset(ctx context.Context) (graphqlbackend.ExternalChangesetResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleApplyPreviewTargetsResolver.ChangesetSpec",
                    "documentation": {
                      "identifier": "visibleApplyPreviewTargetsResolver.ChangesetSpec",
                      "newPage": false,
                      "searchKey": "resolvers.visibleApplyPreviewTargetsResolver.ChangesetSpec",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleApplyPreviewTargetsResolver) ChangesetSpec(ctx context.Context) (graphqlbackend.VisibleChangesetSpecResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleApplyPreviewTargetsResolver) ChangesetSpec(ctx context.Context) (graphqlbackend.VisibleChangesetSpecResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleApplyPreviewTargetsResolver.ToVisibleApplyPreviewTargetsAttach",
                    "documentation": {
                      "identifier": "visibleApplyPreviewTargetsResolver.ToVisibleApplyPreviewTargetsAttach",
                      "newPage": false,
                      "searchKey": "resolvers.visibleApplyPreviewTargetsResolver.ToVisibleApplyPreviewTargetsAttach",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleApplyPreviewTargetsResolver) ToVisibleApplyPreviewTargetsAttach() (graphqlbackend.VisibleApplyPreviewTargetsAttachResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleApplyPreviewTargetsResolver) ToVisibleApplyPreviewTargetsAttach() (graphqlbackend.VisibleApplyPreviewTargetsAttachResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleApplyPreviewTargetsResolver.ToVisibleApplyPreviewTargetsDetach",
                    "documentation": {
                      "identifier": "visibleApplyPreviewTargetsResolver.ToVisibleApplyPreviewTargetsDetach",
                      "newPage": false,
                      "searchKey": "resolvers.visibleApplyPreviewTargetsResolver.ToVisibleApplyPreviewTargetsDetach",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleApplyPreviewTargetsResolver) ToVisibleApplyPreviewTargetsDetach() (graphqlbackend.VisibleApplyPreviewTargetsDetachResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleApplyPreviewTargetsResolver) ToVisibleApplyPreviewTargetsDetach() (graphqlbackend.VisibleApplyPreviewTargetsDetachResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleApplyPreviewTargetsResolver.ToVisibleApplyPreviewTargetsUpdate",
                    "documentation": {
                      "identifier": "visibleApplyPreviewTargetsResolver.ToVisibleApplyPreviewTargetsUpdate",
                      "newPage": false,
                      "searchKey": "resolvers.visibleApplyPreviewTargetsResolver.ToVisibleApplyPreviewTargetsUpdate",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleApplyPreviewTargetsResolver) ToVisibleApplyPreviewTargetsUpdate() (graphqlbackend.VisibleApplyPreviewTargetsUpdateResolver, bool)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleApplyPreviewTargetsResolver) ToVisibleApplyPreviewTargetsUpdate() (graphqlbackend.VisibleApplyPreviewTargetsUpdateResolver, bool)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#visibleChangesetApplyPreviewResolver",
              "documentation": {
                "identifier": "visibleChangesetApplyPreviewResolver",
                "newPage": false,
                "searchKey": "resolvers.visibleChangesetApplyPreviewResolver",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type visibleChangesetApplyPreviewResolver struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype visibleChangesetApplyPreviewResolver struct {\n\tstore *store.Store\n\n\tmapping              *btypes.RewirerMapping\n\tpreloadedNextSync    time.Time\n\tpreloadedBatchChange *btypes.BatchChange\n\tbatchSpecID          int64\n\n\tplanOnce sync.Once\n\tplan     *reconciler.Plan\n\tplanErr  error\n\n\tbatchChangeOnce sync.Once\n\tbatchChange     *btypes.BatchChange\n\tbatchChangeErr  error\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleChangesetApplyPreviewResolver.Delta",
                    "documentation": {
                      "identifier": "visibleChangesetApplyPreviewResolver.Delta",
                      "newPage": false,
                      "searchKey": "resolvers.visibleChangesetApplyPreviewResolver.Delta",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleChangesetApplyPreviewResolver) Delta(ctx context.Context) (graphqlbackend.ChangesetSpecDeltaResolver, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleChangesetApplyPreviewResolver) Delta(ctx context.Context) (graphqlbackend.ChangesetSpecDeltaResolver, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleChangesetApplyPreviewResolver.Operations",
                    "documentation": {
                      "identifier": "visibleChangesetApplyPreviewResolver.Operations",
                      "newPage": false,
                      "searchKey": "resolvers.visibleChangesetApplyPreviewResolver.Operations",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleChangesetApplyPreviewResolver) Operations(ctx context.Context) ([]string, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleChangesetApplyPreviewResolver) Operations(ctx context.Context) ([]string, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleChangesetApplyPreviewResolver.Targets",
                    "documentation": {
                      "identifier": "visibleChangesetApplyPreviewResolver.Targets",
                      "newPage": false,
                      "searchKey": "resolvers.visibleChangesetApplyPreviewResolver.Targets",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleChangesetApplyPreviewResolver) Targets() graphqlbackend.VisibleApplyPreviewTargetsResolver"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleChangesetApplyPreviewResolver) Targets() graphqlbackend.VisibleApplyPreviewTargetsResolver\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleChangesetApplyPreviewResolver.computeBatchChange",
                    "documentation": {
                      "identifier": "visibleChangesetApplyPreviewResolver.computeBatchChange",
                      "newPage": false,
                      "searchKey": "resolvers.visibleChangesetApplyPreviewResolver.computeBatchChange",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleChangesetApplyPreviewResolver) computeBatchChange(ctx context.Context) (*btypes.BatchChange, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleChangesetApplyPreviewResolver) computeBatchChange(ctx context.Context) (*btypes.BatchChange, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/batches/resolvers#visibleChangesetApplyPreviewResolver.computePlan",
                    "documentation": {
                      "identifier": "visibleChangesetApplyPreviewResolver.computePlan",
                      "newPage": false,
                      "searchKey": "resolvers.visibleChangesetApplyPreviewResolver.computePlan",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *visibleChangesetApplyPreviewResolver) computePlan(ctx context.Context) (*reconciler.Plan, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *visibleChangesetApplyPreviewResolver) computePlan(ctx context.Context) (*reconciler.Plan, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#wantBatchChangeResponse",
              "documentation": {
                "identifier": "wantBatchChangeResponse",
                "newPage": false,
                "searchKey": "resolvers.wantBatchChangeResponse",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type wantBatchChangeResponse struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype wantBatchChangeResponse struct {\n\tchangesetTypes      map[string]int\n\tchangesetsCount     int\n\tchangesetStats      apitest.ChangesetsStats\n\tbatchChangeDiffStat apitest.DiffStat\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#wantBatchSpecResponse",
              "documentation": {
                "identifier": "wantBatchSpecResponse",
                "newPage": false,
                "searchKey": "resolvers.wantBatchSpecResponse",
                "tags": [
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type wantBatchSpecResponse struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype wantBatchSpecResponse struct {\n\tchangesetPreviewTypes map[string]int\n\tchangesetPreviewCount int\n\tchangesetSpecTypes    map[string]int\n\tchangesetSpecsCount   int\n\tbatchSpecDiffStat     apitest.DiffStat\n}\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/enterprise/internal/batches/resolvers#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "package",
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#New",
              "documentation": {
                "identifier": "New",
                "newPage": false,
                "searchKey": "resolvers.New",
                "tags": [
                  "method"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func New(store *store.Store) graphqlbackend.BatchChangesResolver"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc New(store *store.Store) graphqlbackend.BatchChangesResolver\n```\n\nNew returns a new Resolver whose store uses the given database \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestApplyBatchChange",
              "documentation": {
                "identifier": "TestApplyBatchChange",
                "newPage": false,
                "searchKey": "resolvers.TestApplyBatchChange",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestApplyBatchChange(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestApplyBatchChange(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestBatchChangeConnectionResolver",
              "documentation": {
                "identifier": "TestBatchChangeConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.TestBatchChangeConnectionResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBatchChangeConnectionResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBatchChangeConnectionResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestBatchChangeResolver",
              "documentation": {
                "identifier": "TestBatchChangeResolver",
                "newPage": false,
                "searchKey": "resolvers.TestBatchChangeResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBatchChangeResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBatchChangeResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestBatchChangesListing",
              "documentation": {
                "identifier": "TestBatchChangesListing",
                "newPage": false,
                "searchKey": "resolvers.TestBatchChangesListing",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBatchChangesListing(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBatchChangesListing(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestBatchSpecResolver",
              "documentation": {
                "identifier": "TestBatchSpecResolver",
                "newPage": false,
                "searchKey": "resolvers.TestBatchSpecResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBatchSpecResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBatchSpecResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestBulkOperationConnectionResolver",
              "documentation": {
                "identifier": "TestBulkOperationConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.TestBulkOperationConnectionResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBulkOperationConnectionResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBulkOperationConnectionResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestBulkOperationResolver",
              "documentation": {
                "identifier": "TestBulkOperationResolver",
                "newPage": false,
                "searchKey": "resolvers.TestBulkOperationResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestBulkOperationResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestBulkOperationResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestChangesetApplyPreviewConnectionResolver",
              "documentation": {
                "identifier": "TestChangesetApplyPreviewConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.TestChangesetApplyPreviewConnectionResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChangesetApplyPreviewConnectionResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChangesetApplyPreviewConnectionResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestChangesetApplyPreviewResolver",
              "documentation": {
                "identifier": "TestChangesetApplyPreviewResolver",
                "newPage": false,
                "searchKey": "resolvers.TestChangesetApplyPreviewResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChangesetApplyPreviewResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChangesetApplyPreviewResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestChangesetConnectionResolver",
              "documentation": {
                "identifier": "TestChangesetConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.TestChangesetConnectionResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChangesetConnectionResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChangesetConnectionResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestChangesetCountsOverTimeIntegration",
              "documentation": {
                "identifier": "TestChangesetCountsOverTimeIntegration",
                "newPage": false,
                "searchKey": "resolvers.TestChangesetCountsOverTimeIntegration",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChangesetCountsOverTimeIntegration(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChangesetCountsOverTimeIntegration(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestChangesetCountsOverTimeResolver",
              "documentation": {
                "identifier": "TestChangesetCountsOverTimeResolver",
                "newPage": false,
                "searchKey": "resolvers.TestChangesetCountsOverTimeResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChangesetCountsOverTimeResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChangesetCountsOverTimeResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestChangesetEventConnectionResolver",
              "documentation": {
                "identifier": "TestChangesetEventConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.TestChangesetEventConnectionResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChangesetEventConnectionResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChangesetEventConnectionResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestChangesetResolver",
              "documentation": {
                "identifier": "TestChangesetResolver",
                "newPage": false,
                "searchKey": "resolvers.TestChangesetResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChangesetResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChangesetResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestChangesetSpecConnectionResolver",
              "documentation": {
                "identifier": "TestChangesetSpecConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.TestChangesetSpecConnectionResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChangesetSpecConnectionResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChangesetSpecConnectionResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestChangesetSpecResolver",
              "documentation": {
                "identifier": "TestChangesetSpecResolver",
                "newPage": false,
                "searchKey": "resolvers.TestChangesetSpecResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestChangesetSpecResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestChangesetSpecResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestCodeHostConnectionResolver",
              "documentation": {
                "identifier": "TestCodeHostConnectionResolver",
                "newPage": false,
                "searchKey": "resolvers.TestCodeHostConnectionResolver",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCodeHostConnectionResolver(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCodeHostConnectionResolver(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestCommentSSHKey",
              "documentation": {
                "identifier": "TestCommentSSHKey",
                "newPage": false,
                "searchKey": "resolvers.TestCommentSSHKey",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCommentSSHKey(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCommentSSHKey(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestCreateBatchChange",
              "documentation": {
                "identifier": "TestCreateBatchChange",
                "newPage": false,
                "searchKey": "resolvers.TestCreateBatchChange",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCreateBatchChange(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCreateBatchChange(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestCreateBatchChangesCredential",
              "documentation": {
                "identifier": "TestCreateBatchChangesCredential",
                "newPage": false,
                "searchKey": "resolvers.TestCreateBatchChangesCredential",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCreateBatchChangesCredential(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCreateBatchChangesCredential(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestCreateBatchSpec",
              "documentation": {
                "identifier": "TestCreateBatchSpec",
                "newPage": false,
                "searchKey": "resolvers.TestCreateBatchSpec",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCreateBatchSpec(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCreateBatchSpec(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestCreateChangesetComments",
              "documentation": {
                "identifier": "TestCreateChangesetComments",
                "newPage": false,
                "searchKey": "resolvers.TestCreateChangesetComments",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCreateChangesetComments(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCreateChangesetComments(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestCreateChangesetSpec",
              "documentation": {
                "identifier": "TestCreateChangesetSpec",
                "newPage": false,
                "searchKey": "resolvers.TestCreateChangesetSpec",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestCreateChangesetSpec(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestCreateChangesetSpec(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestDeleteBatchChangesCredential",
              "documentation": {
                "identifier": "TestDeleteBatchChangesCredential",
                "newPage": false,
                "searchKey": "resolvers.TestDeleteBatchChangesCredential",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDeleteBatchChangesCredential(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDeleteBatchChangesCredential(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestListChangesetOptsFromArgs",
              "documentation": {
                "identifier": "TestListChangesetOptsFromArgs",
                "newPage": false,
                "searchKey": "resolvers.TestListChangesetOptsFromArgs",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestListChangesetOptsFromArgs(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestListChangesetOptsFromArgs(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestMain",
              "documentation": {
                "identifier": "TestMain",
                "newPage": false,
                "searchKey": "resolvers.TestMain",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMain(m *testing.M)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMain(m *testing.M)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestMergeChangesets",
              "documentation": {
                "identifier": "TestMergeChangesets",
                "newPage": false,
                "searchKey": "resolvers.TestMergeChangesets",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMergeChangesets(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMergeChangesets(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestMoveBatchChange",
              "documentation": {
                "identifier": "TestMoveBatchChange",
                "newPage": false,
                "searchKey": "resolvers.TestMoveBatchChange",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestMoveBatchChange(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestMoveBatchChange(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestNullIDResilience",
              "documentation": {
                "identifier": "TestNullIDResilience",
                "newPage": false,
                "searchKey": "resolvers.TestNullIDResilience",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNullIDResilience(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNullIDResilience(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestPermissionLevels",
              "documentation": {
                "identifier": "TestPermissionLevels",
                "newPage": false,
                "searchKey": "resolvers.TestPermissionLevels",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestPermissionLevels(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestPermissionLevels(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestReenqueueChangesets",
              "documentation": {
                "identifier": "TestReenqueueChangesets",
                "newPage": false,
                "searchKey": "resolvers.TestReenqueueChangesets",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestReenqueueChangesets(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestReenqueueChangesets(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestRepositoryPermissions",
              "documentation": {
                "identifier": "TestRepositoryPermissions",
                "newPage": false,
                "searchKey": "resolvers.TestRepositoryPermissions",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestRepositoryPermissions(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestRepositoryPermissions(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestRewirerMappings",
              "documentation": {
                "identifier": "TestRewirerMappings",
                "newPage": false,
                "searchKey": "resolvers.TestRewirerMappings",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestRewirerMappings(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestRewirerMappings(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#TestUnmarshalBatchChangesCredentialID",
              "documentation": {
                "identifier": "TestUnmarshalBatchChangesCredentialID",
                "newPage": false,
                "searchKey": "resolvers.TestUnmarshalBatchChangesCredentialID",
                "tags": [
                  "method",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestUnmarshalBatchChangesCredentialID(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestUnmarshalBatchChangesCredentialID(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#addChangeset",
              "documentation": {
                "identifier": "addChangeset",
                "newPage": false,
                "searchKey": "resolvers.addChangeset",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func addChangeset(t *testing.T, ctx context.Context, s *store.Store, c *btypes.Changeset, batchChange int64)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc addChangeset(t *testing.T, ctx context.Context, s *store.Store, c *btypes.Changeset, batchChange int64)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangeURL",
              "documentation": {
                "identifier": "batchChangeURL",
                "newPage": false,
                "searchKey": "resolvers.batchChangeURL",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func batchChangeURL(n graphqlbackend.Namespace, c graphqlbackend.BatchChangeResolver) string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc batchChangeURL(n graphqlbackend.Namespace, c graphqlbackend.BatchChangeResolver) string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangesApplyURL",
              "documentation": {
                "identifier": "batchChangesApplyURL",
                "newPage": false,
                "searchKey": "resolvers.batchChangesApplyURL",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func batchChangesApplyURL(n graphqlbackend.Namespace, c graphqlbackend.BatchSpecResolver) string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc batchChangesApplyURL(n graphqlbackend.Namespace, c graphqlbackend.BatchSpecResolver) string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangesCreateAccess",
              "documentation": {
                "identifier": "batchChangesCreateAccess",
                "newPage": false,
                "searchKey": "resolvers.batchChangesCreateAccess",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func batchChangesCreateAccess(ctx context.Context) error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc batchChangesCreateAccess(ctx context.Context) error\n```\n\nbatchChangesCreateAccess returns true if the current user can create batchChanges/changesetSpecs/batchSpecs. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#batchChangesEnabled",
              "documentation": {
                "identifier": "batchChangesEnabled",
                "newPage": false,
                "searchKey": "resolvers.batchChangesEnabled",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func batchChangesEnabled(ctx context.Context, db dbutil.DB) error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc batchChangesEnabled(ctx context.Context, db dbutil.DB) error\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#changesetJobTypeToBulkOperationType",
              "documentation": {
                "identifier": "changesetJobTypeToBulkOperationType",
                "newPage": false,
                "searchKey": "resolvers.changesetJobTypeToBulkOperationType",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func changesetJobTypeToBulkOperationType(t btypes.ChangesetJobType) (string, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc changesetJobTypeToBulkOperationType(t btypes.ChangesetJobType) (string, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#checkLicense",
              "documentation": {
                "identifier": "checkLicense",
                "newPage": false,
                "searchKey": "resolvers.checkLicense",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func checkLicense() error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc checkLicense() error\n```\n\ncheckLicense returns a user-facing error if the batchChanges feature is not purchased with the current license or any error occurred while validating the license. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#checkSiteAdminOrSameUser",
              "documentation": {
                "identifier": "checkSiteAdminOrSameUser",
                "newPage": false,
                "searchKey": "resolvers.checkSiteAdminOrSameUser",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func checkSiteAdminOrSameUser(ctx context.Context, db dbutil.DB, userID int32) (bool, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc checkSiteAdminOrSameUser(ctx context.Context, db dbutil.DB, userID int32) (bool, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#commentSSHKey",
              "documentation": {
                "identifier": "commentSSHKey",
                "newPage": false,
                "searchKey": "resolvers.commentSSHKey",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func commentSSHKey(ssh auth.AuthenticatorWithSSH) string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc commentSSHKey(ssh auth.AuthenticatorWithSSH) string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#listChangesetOptsFromArgs",
              "documentation": {
                "identifier": "listChangesetOptsFromArgs",
                "newPage": false,
                "searchKey": "resolvers.listChangesetOptsFromArgs",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func listChangesetOptsFromArgs(args *graphqlbackend.ListChangesetsArgs, batchChangeID int64) (opts store.ListChangesetsOpts, optsSafe bool, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc listChangesetOptsFromArgs(args *graphqlbackend.ListChangesetsArgs, batchChangeID int64) (opts store.ListChangesetsOpts, optsSafe bool, err error)\n```\n\nlistChangesetOptsFromArgs turns the graphqlbackend.ListChangesetsArgs into ListChangesetsOpts. If the args do not include a filter that would reveal sensitive information about a changeset the user doesn't have access to, the second return value is false. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#logBackendEvent",
              "documentation": {
                "identifier": "logBackendEvent",
                "newPage": false,
                "searchKey": "resolvers.logBackendEvent",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func logBackendEvent(ctx context.Context, db dbutil.DB, name string, args interface{}) error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc logBackendEvent(ctx context.Context, db dbutil.DB, name string, args interface{}) error\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#marshalBatchChangeID",
              "documentation": {
                "identifier": "marshalBatchChangeID",
                "newPage": false,
                "searchKey": "resolvers.marshalBatchChangeID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func marshalBatchChangeID(id int64) graphql.ID"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc marshalBatchChangeID(id int64) graphql.ID\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#marshalBatchChangesCredentialID",
              "documentation": {
                "identifier": "marshalBatchChangesCredentialID",
                "newPage": false,
                "searchKey": "resolvers.marshalBatchChangesCredentialID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func marshalBatchChangesCredentialID(id int64, isSiteCredential bool) graphql.ID"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc marshalBatchChangesCredentialID(id int64, isSiteCredential bool) graphql.ID\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#marshalBatchSpecRandID",
              "documentation": {
                "identifier": "marshalBatchSpecRandID",
                "newPage": false,
                "searchKey": "resolvers.marshalBatchSpecRandID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func marshalBatchSpecRandID(id string) graphql.ID"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc marshalBatchSpecRandID(id string) graphql.ID\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#marshalBulkOperationID",
              "documentation": {
                "identifier": "marshalBulkOperationID",
                "newPage": false,
                "searchKey": "resolvers.marshalBulkOperationID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func marshalBulkOperationID(id string) graphql.ID"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc marshalBulkOperationID(id string) graphql.ID\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#marshalChangesetEventID",
              "documentation": {
                "identifier": "marshalChangesetEventID",
                "newPage": false,
                "searchKey": "resolvers.marshalChangesetEventID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func marshalChangesetEventID(id int64) graphql.ID"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc marshalChangesetEventID(id int64) graphql.ID\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#marshalChangesetID",
              "documentation": {
                "identifier": "marshalChangesetID",
                "newPage": false,
                "searchKey": "resolvers.marshalChangesetID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func marshalChangesetID(id int64) graphql.ID"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc marshalChangesetID(id int64) graphql.ID\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#marshalChangesetSpecRandID",
              "documentation": {
                "identifier": "marshalChangesetSpecRandID",
                "newPage": false,
                "searchKey": "resolvers.marshalChangesetSpecRandID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func marshalChangesetSpecRandID(id string) graphql.ID"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc marshalChangesetSpecRandID(id string) graphql.ID\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#marshalDateTime",
              "documentation": {
                "identifier": "marshalDateTime",
                "newPage": false,
                "searchKey": "resolvers.marshalDateTime",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func marshalDateTime(t testing.TB, ts time.Time) string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc marshalDateTime(t testing.TB, ts time.Time) string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mockBackendCommits",
              "documentation": {
                "identifier": "mockBackendCommits",
                "newPage": false,
                "searchKey": "resolvers.mockBackendCommits",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func mockBackendCommits(t *testing.T, revs ...api.CommitID)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc mockBackendCommits(t *testing.T, revs ...api.CommitID)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#mockRepoComparison",
              "documentation": {
                "identifier": "mockRepoComparison",
                "newPage": false,
                "searchKey": "resolvers.mockRepoComparison",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func mockRepoComparison(t *testing.T, baseRev, headRev, diff string)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc mockRepoComparison(t *testing.T, baseRev, headRev, diff string)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#newGitHubExternalService",
              "documentation": {
                "identifier": "newGitHubExternalService",
                "newPage": false,
                "searchKey": "resolvers.newGitHubExternalService",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func newGitHubExternalService(t *testing.T, store *database.ExternalServiceStore) *types.ExternalService"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc newGitHubExternalService(t *testing.T, store *database.ExternalServiceStore) *types.ExternalService\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#newGitHubTestRepo",
              "documentation": {
                "identifier": "newGitHubTestRepo",
                "newPage": false,
                "searchKey": "resolvers.newGitHubTestRepo",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func newGitHubTestRepo(name string, externalService *types.ExternalService) *types.Repo"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc newGitHubTestRepo(name string, externalService *types.ExternalService) *types.Repo\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#parseBatchChangeState",
              "documentation": {
                "identifier": "parseBatchChangeState",
                "newPage": false,
                "searchKey": "resolvers.parseBatchChangeState",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func parseBatchChangeState(s *string) (btypes.BatchChangeState, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc parseBatchChangeState(s *string) (btypes.BatchChangeState, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#parseJSONTime",
              "documentation": {
                "identifier": "parseJSONTime",
                "newPage": false,
                "searchKey": "resolvers.parseJSONTime",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func parseJSONTime(t testing.TB, ts string) time.Time"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc parseJSONTime(t testing.TB, ts string) time.Time\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#pruneSiteCredentials",
              "documentation": {
                "identifier": "pruneSiteCredentials",
                "newPage": false,
                "searchKey": "resolvers.pruneSiteCredentials",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func pruneSiteCredentials(t *testing.T, cstore *store.Store)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc pruneSiteCredentials(t *testing.T, cstore *store.Store)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#pruneUserCredentials",
              "documentation": {
                "identifier": "pruneUserCredentials",
                "newPage": false,
                "searchKey": "resolvers.pruneUserCredentials",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func pruneUserCredentials(t *testing.T, db dbutil.DB, key encryption.Key)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc pruneUserCredentials(t *testing.T, db dbutil.DB, key encryption.Key)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#strPtr",
              "documentation": {
                "identifier": "strPtr",
                "newPage": false,
                "searchKey": "resolvers.strPtr",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func strPtr(s string) *string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc strPtr(s string) *string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#stringPtr",
              "documentation": {
                "identifier": "stringPtr",
                "newPage": false,
                "searchKey": "resolvers.stringPtr",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func stringPtr(s string) *string"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc stringPtr(s string) *string\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#testBatchChangeResponse",
              "documentation": {
                "identifier": "testBatchChangeResponse",
                "newPage": false,
                "searchKey": "resolvers.testBatchChangeResponse",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testBatchChangeResponse(t *testing.T, s *graphql.Schema, ctx context.Context, in map[string]interface{}, w wantBatchChangeResponse)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testBatchChangeResponse(t *testing.T, s *graphql.Schema, ctx context.Context, in map[string]interface{}, w wantBatchChangeResponse)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#testBatchSpecResponse",
              "documentation": {
                "identifier": "testBatchSpecResponse",
                "newPage": false,
                "searchKey": "resolvers.testBatchSpecResponse",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testBatchSpecResponse(t *testing.T, s *graphql.Schema, ctx context.Context, batchSpecRandID string, w wantBatchSpecResponse)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testBatchSpecResponse(t *testing.T, s *graphql.Schema, ctx context.Context, batchSpecRandID string, w wantBatchSpecResponse)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#testChangesetResponse",
              "documentation": {
                "identifier": "testChangesetResponse",
                "newPage": false,
                "searchKey": "resolvers.testChangesetResponse",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testChangesetResponse(t *testing.T, s *graphql.Schema, ctx context.Context, id int64, wantType string)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testChangesetResponse(t *testing.T, s *graphql.Schema, ctx context.Context, id int64, wantType string)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#testChangesetSpecResponse",
              "documentation": {
                "identifier": "testChangesetSpecResponse",
                "newPage": false,
                "searchKey": "resolvers.testChangesetSpecResponse",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func testChangesetSpecResponse(t *testing.T, s *graphql.Schema, ctx context.Context, randID, wantType string)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc testChangesetSpecResponse(t *testing.T, s *graphql.Schema, ctx context.Context, randID, wantType string)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#uniqueChangesetIDsForBulkOperationErrors",
              "documentation": {
                "identifier": "uniqueChangesetIDsForBulkOperationErrors",
                "newPage": false,
                "searchKey": "resolvers.uniqueChangesetIDsForBulkOperationErrors",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func uniqueChangesetIDsForBulkOperationErrors(errors []*btypes.BulkOperationError) []int64"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc uniqueChangesetIDsForBulkOperationErrors(errors []*btypes.BulkOperationError) []int64\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#unmarshalBatchChangeID",
              "documentation": {
                "identifier": "unmarshalBatchChangeID",
                "newPage": false,
                "searchKey": "resolvers.unmarshalBatchChangeID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func unmarshalBatchChangeID(id graphql.ID) (batchChangeID int64, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc unmarshalBatchChangeID(id graphql.ID) (batchChangeID int64, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#unmarshalBatchChangesCredentialID",
              "documentation": {
                "identifier": "unmarshalBatchChangesCredentialID",
                "newPage": false,
                "searchKey": "resolvers.unmarshalBatchChangesCredentialID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func unmarshalBatchChangesCredentialID(id graphql.ID) (credentialID int64, isSiteCredential bool, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc unmarshalBatchChangesCredentialID(id graphql.ID) (credentialID int64, isSiteCredential bool, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#unmarshalBatchSpecID",
              "documentation": {
                "identifier": "unmarshalBatchSpecID",
                "newPage": false,
                "searchKey": "resolvers.unmarshalBatchSpecID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func unmarshalBatchSpecID(id graphql.ID) (batchSpecRandID string, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc unmarshalBatchSpecID(id graphql.ID) (batchSpecRandID string, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#unmarshalBulkOperationBaseArgs",
              "documentation": {
                "identifier": "unmarshalBulkOperationBaseArgs",
                "newPage": false,
                "searchKey": "resolvers.unmarshalBulkOperationBaseArgs",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func unmarshalBulkOperationBaseArgs(args graphqlbackend.BulkOperationBaseArgs) (batchChangeID int64, changesetIDs []int64, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc unmarshalBulkOperationBaseArgs(args graphqlbackend.BulkOperationBaseArgs) (batchChangeID int64, changesetIDs []int64, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#unmarshalBulkOperationID",
              "documentation": {
                "identifier": "unmarshalBulkOperationID",
                "newPage": false,
                "searchKey": "resolvers.unmarshalBulkOperationID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func unmarshalBulkOperationID(id graphql.ID) (bulkOperationID string, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc unmarshalBulkOperationID(id graphql.ID) (bulkOperationID string, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#unmarshalChangesetID",
              "documentation": {
                "identifier": "unmarshalChangesetID",
                "newPage": false,
                "searchKey": "resolvers.unmarshalChangesetID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func unmarshalChangesetID(id graphql.ID) (cid int64, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc unmarshalChangesetID(id graphql.ID) (cid int64, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#unmarshalChangesetSpecID",
              "documentation": {
                "identifier": "unmarshalChangesetSpecID",
                "newPage": false,
                "searchKey": "resolvers.unmarshalChangesetSpecID",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func unmarshalChangesetSpecID(id graphql.ID) (changesetSpecRandID string, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc unmarshalChangesetSpecID(id graphql.ID) (changesetSpecRandID string, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#validateFirstParam",
              "documentation": {
                "identifier": "validateFirstParam",
                "newPage": false,
                "searchKey": "resolvers.validateFirstParam",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func validateFirstParam(first int32, max int) error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc validateFirstParam(first int32, max int) error\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/batches/resolvers#validateFirstParamDefaults",
              "documentation": {
                "identifier": "validateFirstParamDefaults",
                "newPage": false,
                "searchKey": "resolvers.validateFirstParamDefaults",
                "tags": [
                  "method",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func validateFirstParamDefaults(first int32) error"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc validateFirstParamDefaults(first int32) error\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "pathID": "/enterprise/internal/batches/resolvers/apitest"
    }
  ]
}
