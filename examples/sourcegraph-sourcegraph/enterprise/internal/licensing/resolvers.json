{
  "pathID": "/enterprise/internal/licensing/resolvers",
  "documentation": {
    "identifier": "resolvers",
    "newPage": true,
    "searchKey": "enterprise/internal/licensing/resolvers",
    "tags": [
      "private",
      "package"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package resolvers"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/enterprise/internal/licensing/resolvers#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/licensing/resolvers#LicenseResolver",
              "documentation": {
                "identifier": "LicenseResolver",
                "newPage": false,
                "searchKey": "resolvers.LicenseResolver",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type LicenseResolver struct{}"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype LicenseResolver struct{}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/licensing/resolvers#LicenseResolver.EnterpriseLicenseHasFeature",
                    "documentation": {
                      "identifier": "LicenseResolver.EnterpriseLicenseHasFeature",
                      "newPage": false,
                      "searchKey": "resolvers.LicenseResolver.EnterpriseLicenseHasFeature",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (LicenseResolver) EnterpriseLicenseHasFeature(ctx context.Context, args *graphqlbackend.EnterpriseLicenseHasFeatureArgs) (bool, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (LicenseResolver) EnterpriseLicenseHasFeature(ctx context.Context, args *graphqlbackend.EnterpriseLicenseHasFeatureArgs) (bool, error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/enterprise/internal/licensing/resolvers#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/licensing/resolvers#TestEnterpriseLicenseHasFeature",
              "documentation": {
                "identifier": "TestEnterpriseLicenseHasFeature",
                "newPage": false,
                "searchKey": "resolvers.TestEnterpriseLicenseHasFeature",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestEnterpriseLicenseHasFeature(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestEnterpriseLicenseHasFeature(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
