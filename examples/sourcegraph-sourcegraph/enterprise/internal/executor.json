{
  "pathID": "/enterprise/internal/executor",
  "documentation": {
    "identifier": "executor",
    "newPage": true,
    "searchKey": "enterprise/internal/executor",
    "tags": []
  },
  "label": {
    "kind": "plaintext",
    "value": "Package executor"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/enterprise/internal/executor#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": []
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/executor#Job",
              "documentation": {
                "identifier": "Job",
                "newPage": false,
                "searchKey": "executor.Job",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Job struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Job struct {\n\t// ID is the unique identifier of a job within the source queue. Note\n\t// that different queues can share identifiers.\n\tID int `json:\"id\"`\n\n\t// RepositoryName is the name of the repository to be cloned into the\n\t// workspace prior to job execution.\n\tRepositoryName string `json:\"repositoryName\"`\n\n\t// Commit is the revhash that should be checked out prior to job execution.\n\tCommit string `json:\"commit\"`\n\n\t// VirtualMachineFiles is a map from file names to content. Each entry in\n\t// this map will be written into the workspace prior to job execution.\n\tVirtualMachineFiles map[string]string `json:\"files\"`\n\n\t// DockerSteps describe a series of docker run commands to be invoked in the\n\t// workspace. This may be done inside or outside of a Firecracker virtual\n\t// machine.\n\tDockerSteps []DockerStep `json:\"dockerSteps\"`\n\n\t// CliSteps describe a series of src commands to be invoked in the workspace.\n\t// These run after all docker commands have been completed successfully. This\n\t// may be done inside or outside of a Firecracker virtual machine.\n\tCliSteps []CliStep `json:\"cliSteps\"`\n\n\t// RedactedValues is a map from strings to replace to their replacement in the command\n\t// output before sending it to the underlying job store. This should contain all worker\n\t// environment variables, as well as secret values passed along with the dequeued job\n\t// payload, which may be sensitive (e.g. shared API tokens, URLs with credentials).\n\tRedactedValues map[string]string `json:\"redactedValues\"`\n}\n```\n\nJob describes a series of steps to perform within an executor. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/executor#Job.RecordID",
                    "documentation": {
                      "identifier": "Job.RecordID",
                      "newPage": false,
                      "searchKey": "executor.Job.RecordID",
                      "tags": [
                        "exported"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (j Job) RecordID() int"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (j Job) RecordID() int\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/executor#DockerStep",
              "documentation": {
                "identifier": "DockerStep",
                "newPage": false,
                "searchKey": "executor.DockerStep",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type DockerStep struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DockerStep struct {\n\t// Image specifies the docker image.\n\tImage string `json:\"image\"`\n\n\t// Commands specifies the arguments supplied to the end of a docker run command.\n\tCommands []string `json:\"commands\"`\n\n\t// Dir specifies the target working directory.\n\tDir string `json:\"dir\"`\n\n\t// Env specifies a set of NAME=value pairs to supply to the docker command.\n\tEnv []string `json:\"env\"`\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/executor#CliStep",
              "documentation": {
                "identifier": "CliStep",
                "newPage": false,
                "searchKey": "executor.CliStep",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type CliStep struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype CliStep struct {\n\t// Commands specifies the arguments supplied to the src command.\n\tCommands []string `json:\"command\"`\n\n\t// Dir specifies the target working directory.\n\tDir string `json:\"dir\"`\n\n\t// Env specifies a set of NAME=value pairs to supply to the src command.\n\tEnv []string `json:\"env\"`\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/executor#DequeueRequest",
              "documentation": {
                "identifier": "DequeueRequest",
                "newPage": false,
                "searchKey": "executor.DequeueRequest",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type DequeueRequest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype DequeueRequest struct {\n\tExecutorName string `json:\"executorName\"`\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/executor#AddExecutionLogEntryRequest",
              "documentation": {
                "identifier": "AddExecutionLogEntryRequest",
                "newPage": false,
                "searchKey": "executor.AddExecutionLogEntryRequest",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type AddExecutionLogEntryRequest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype AddExecutionLogEntryRequest struct {\n\tExecutorName string `json:\"executorName\"`\n\tJobID        int    `json:\"jobId\"`\n\tworkerutil.ExecutionLogEntry\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/executor#MarkCompleteRequest",
              "documentation": {
                "identifier": "MarkCompleteRequest",
                "newPage": false,
                "searchKey": "executor.MarkCompleteRequest",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type MarkCompleteRequest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype MarkCompleteRequest struct {\n\tExecutorName string `json:\"executorName\"`\n\tJobID        int    `json:\"jobId\"`\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/executor#MarkErroredRequest",
              "documentation": {
                "identifier": "MarkErroredRequest",
                "newPage": false,
                "searchKey": "executor.MarkErroredRequest",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type MarkErroredRequest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype MarkErroredRequest struct {\n\tExecutorName string `json:\"executorName\"`\n\tJobID        int    `json:\"jobId\"`\n\tErrorMessage string `json:\"errorMessage\"`\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/executor#HeartbeatRequest",
              "documentation": {
                "identifier": "HeartbeatRequest",
                "newPage": false,
                "searchKey": "executor.HeartbeatRequest",
                "tags": [
                  "exported"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type HeartbeatRequest struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype HeartbeatRequest struct {\n\tExecutorName string `json:\"executorName\"`\n\tJobIDs       []int  `json:\"jobIds\"`\n}\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
