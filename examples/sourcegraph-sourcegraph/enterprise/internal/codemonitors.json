{
  "pathID": "/enterprise/internal/codemonitors",
  "documentation": {
    "identifier": "codemonitors",
    "newPage": true,
    "searchKey": "enterprise/internal/codemonitors",
    "tags": [
      "private",
      "package"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package codemonitors"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/enterprise/internal/codemonitors#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#actionEmailByIDFmtStr",
              "documentation": {
                "identifier": "actionEmailByIDFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.actionEmailByIDFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const actionEmailByIDFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst actionEmailByIDFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#actionJobForIDFmtStr",
              "documentation": {
                "identifier": "actionJobForIDFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.actionJobForIDFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const actionJobForIDFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst actionJobForIDFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#allRecipientsForEmailIDInt64FmtStr",
              "documentation": {
                "identifier": "allRecipientsForEmailIDInt64FmtStr",
                "newPage": false,
                "searchKey": "codemonitors.allRecipientsForEmailIDInt64FmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const allRecipientsForEmailIDInt64FmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst allRecipientsForEmailIDInt64FmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#createActionEmailFmtStr",
              "documentation": {
                "identifier": "createActionEmailFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.createActionEmailFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const createActionEmailFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst createActionEmailFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#createRecipientFmtStr",
              "documentation": {
                "identifier": "createRecipientFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.createRecipientFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const createRecipientFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst createRecipientFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#createTriggerQueryFmtStr",
              "documentation": {
                "identifier": "createTriggerQueryFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.createTriggerQueryFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const createTriggerQueryFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst createTriggerQueryFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#deleteActionEmailFmtStr",
              "documentation": {
                "identifier": "deleteActionEmailFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.deleteActionEmailFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const deleteActionEmailFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst deleteActionEmailFmtStr = `DELETE FROM cm_emails WHERE id in (%s) AND MONITOR = %s`\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#deleteMonitorFmtStr",
              "documentation": {
                "identifier": "deleteMonitorFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.deleteMonitorFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const deleteMonitorFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst deleteMonitorFmtStr = `DELETE FROM cm_monitors WHERE id = %s`\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#deleteObsoleteJobLogsFmtStr",
              "documentation": {
                "identifier": "deleteObsoleteJobLogsFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.deleteObsoleteJobLogsFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const deleteObsoleteJobLogsFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst deleteObsoleteJobLogsFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#deleteOldJobLogsFmtStr",
              "documentation": {
                "identifier": "deleteOldJobLogsFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.deleteOldJobLogsFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const deleteOldJobLogsFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst deleteOldJobLogsFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#deleteRecipientFmtStr",
              "documentation": {
                "identifier": "deleteRecipientFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.deleteRecipientFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const deleteRecipientFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst deleteRecipientFmtStr = `DELETE FROM cm_recipients WHERE email = %s`\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#enqueueActionEmailFmtStr",
              "documentation": {
                "identifier": "enqueueActionEmailFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.enqueueActionEmailFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const enqueueActionEmailFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst enqueueActionEmailFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#enqueueTriggerQueryFmtStr",
              "documentation": {
                "identifier": "enqueueTriggerQueryFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.enqueueTriggerQueryFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const enqueueTriggerQueryFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst enqueueTriggerQueryFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#getActionJobMetadataFmtStr",
              "documentation": {
                "identifier": "getActionJobMetadataFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.getActionJobMetadataFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const getActionJobMetadataFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst getActionJobMetadataFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#getEventsForQueryIDInt64FmtStr",
              "documentation": {
                "identifier": "getEventsForQueryIDInt64FmtStr",
                "newPage": false,
                "searchKey": "codemonitors.getEventsForQueryIDInt64FmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const getEventsForQueryIDInt64FmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst getEventsForQueryIDInt64FmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#getJobIDs",
              "documentation": {
                "identifier": "getJobIDs",
                "newPage": false,
                "searchKey": "codemonitors.getJobIDs",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const getJobIDs"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst getJobIDs = `\nSELECT id\nFROM cm_trigger_jobs;\n`\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#getQueryByRecordIDFmtStr",
              "documentation": {
                "identifier": "getQueryByRecordIDFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.getQueryByRecordIDFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const getQueryByRecordIDFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst getQueryByRecordIDFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#insertCodeMonitorFmtStr",
              "documentation": {
                "identifier": "insertCodeMonitorFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.insertCodeMonitorFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const insertCodeMonitorFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst insertCodeMonitorFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#logSearchFmtStr",
              "documentation": {
                "identifier": "logSearchFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.logSearchFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const logSearchFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst logSearchFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#monitorByIDFmtStr",
              "documentation": {
                "identifier": "monitorByIDFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.monitorByIDFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const monitorByIDFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst monitorByIDFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#monitorsFmtStr",
              "documentation": {
                "identifier": "monitorsFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.monitorsFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const monitorsFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst monitorsFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#readActionEmailEventsFmtStr",
              "documentation": {
                "identifier": "readActionEmailEventsFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.readActionEmailEventsFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const readActionEmailEventsFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst readActionEmailEventsFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#readActionEmailFmtStr",
              "documentation": {
                "identifier": "readActionEmailFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.readActionEmailFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const readActionEmailFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst readActionEmailFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#readRecipientQueryFmtStr",
              "documentation": {
                "identifier": "readRecipientQueryFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.readRecipientQueryFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const readRecipientQueryFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst readRecipientQueryFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#resetTriggerQueryTimestamps",
              "documentation": {
                "identifier": "resetTriggerQueryTimestamps",
                "newPage": false,
                "searchKey": "codemonitors.resetTriggerQueryTimestamps",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const resetTriggerQueryTimestamps"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst resetTriggerQueryTimestamps = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#setToCompletedFmtStr",
              "documentation": {
                "identifier": "setToCompletedFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.setToCompletedFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const setToCompletedFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst setToCompletedFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#setTriggerQueryNextRunFmtStr",
              "documentation": {
                "identifier": "setTriggerQueryNextRunFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.setTriggerQueryNextRunFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const setTriggerQueryNextRunFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst setTriggerQueryNextRunFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#testDescription",
              "documentation": {
                "identifier": "testDescription",
                "newPage": false,
                "searchKey": "codemonitors.testDescription",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const testDescription"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst testDescription = \"test description\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#testQuery",
              "documentation": {
                "identifier": "testQuery",
                "newPage": false,
                "searchKey": "codemonitors.testQuery",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const testQuery"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst testQuery = \"repo:github\\\\.com/sourcegraph/sourcegraph func type:diff patternType:literal\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#toggleCodeMonitorFmtStr",
              "documentation": {
                "identifier": "toggleCodeMonitorFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.toggleCodeMonitorFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const toggleCodeMonitorFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst toggleCodeMonitorFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#totalActionEmailEventsFmtStr",
              "documentation": {
                "identifier": "totalActionEmailEventsFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.totalActionEmailEventsFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const totalActionEmailEventsFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst totalActionEmailEventsFmtStr = `\nSELECT COUNT(*)\nFROM cm_action_jobs\nWHERE %s\n`\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#totalCountActionEmailsFmtStr",
              "documentation": {
                "identifier": "totalCountActionEmailsFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.totalCountActionEmailsFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const totalCountActionEmailsFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst totalCountActionEmailsFmtStr = `\nSELECT COUNT(*)\nFROM cm_emails\nWHERE monitor = %s;\n`\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#totalCountEventsForQueryIDInt64FmtStr",
              "documentation": {
                "identifier": "totalCountEventsForQueryIDInt64FmtStr",
                "newPage": false,
                "searchKey": "codemonitors.totalCountEventsForQueryIDInt64FmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const totalCountEventsForQueryIDInt64FmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst totalCountEventsForQueryIDInt64FmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#totalCountMonitorsFmtStr",
              "documentation": {
                "identifier": "totalCountMonitorsFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.totalCountMonitorsFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const totalCountMonitorsFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst totalCountMonitorsFmtStr = `\nSELECT COUNT(*)\nFROM cm_monitors\nWHERE namespace_user_id = %s;\n`\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#totalCountRecipientsFmtStr",
              "documentation": {
                "identifier": "totalCountRecipientsFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.totalCountRecipientsFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const totalCountRecipientsFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst totalCountRecipientsFmtStr = `\nSELECT COUNT(*)\nFROM cm_recipients\nWHERE email = %s\n`\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#triggerQueryByIDFmtStr",
              "documentation": {
                "identifier": "triggerQueryByIDFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.triggerQueryByIDFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const triggerQueryByIDFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst triggerQueryByIDFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#triggerQueryByMonitorFmtStr",
              "documentation": {
                "identifier": "triggerQueryByMonitorFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.triggerQueryByMonitorFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const triggerQueryByMonitorFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst triggerQueryByMonitorFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#updateActionEmailFmtStr",
              "documentation": {
                "identifier": "updateActionEmailFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.updateActionEmailFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const updateActionEmailFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst updateActionEmailFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#updateCodeMonitorFmtStr",
              "documentation": {
                "identifier": "updateCodeMonitorFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.updateCodeMonitorFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const updateCodeMonitorFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst updateCodeMonitorFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#updateTriggerQueryFmtStr",
              "documentation": {
                "identifier": "updateTriggerQueryFmtStr",
                "newPage": false,
                "searchKey": "codemonitors.updateTriggerQueryFmtStr",
                "tags": [
                  "constant",
                  "string",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const updateTriggerQueryFmtStr"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst updateTriggerQueryFmtStr = ...\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/enterprise/internal/codemonitors#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#ActionJobsColumns",
              "documentation": {
                "identifier": "ActionJobsColumns",
                "newPage": false,
                "searchKey": "codemonitors.ActionJobsColumns",
                "tags": [
                  "variable",
                  "array",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var ActionJobsColumns"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar ActionJobsColumns = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#EmailsColumns",
              "documentation": {
                "identifier": "EmailsColumns",
                "newPage": false,
                "searchKey": "codemonitors.EmailsColumns",
                "tags": [
                  "variable",
                  "array",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var EmailsColumns"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar EmailsColumns = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TriggerJobsColumns",
              "documentation": {
                "identifier": "TriggerJobsColumns",
                "newPage": false,
                "searchKey": "codemonitors.TriggerJobsColumns",
                "tags": [
                  "variable",
                  "array",
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var TriggerJobsColumns"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar TriggerJobsColumns = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#monitorColumns",
              "documentation": {
                "identifier": "monitorColumns",
                "newPage": false,
                "searchKey": "codemonitors.monitorColumns",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var monitorColumns"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar monitorColumns = ...\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#queryColumns",
              "documentation": {
                "identifier": "queryColumns",
                "newPage": false,
                "searchKey": "codemonitors.queryColumns",
                "tags": [
                  "variable",
                  "array",
                  "struct",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var queryColumns"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar queryColumns = ...\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/enterprise/internal/codemonitors#type",
        "documentation": {
          "identifier": "type",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Types"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#ActionJob",
              "documentation": {
                "identifier": "ActionJob",
                "newPage": false,
                "searchKey": "codemonitors.ActionJob",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ActionJob struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ActionJob struct {\n\tId           int\n\tEmail        int64\n\tTriggerEvent int\n\n\t// Fields demanded by any dbworker.\n\tState          string\n\tFailureMessage *string\n\tStartedAt      *time.Time\n\tFinishedAt     *time.Time\n\tProcessAfter   *time.Time\n\tNumResets      int32\n\tNumFailures    int32\n\tLogContents    *string\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#ActionJob.RecordID",
                    "documentation": {
                      "identifier": "ActionJob.RecordID",
                      "newPage": false,
                      "searchKey": "codemonitors.ActionJob.RecordID",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (a *ActionJob) RecordID() int"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (a *ActionJob) RecordID() int\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#ActionJobMetadata",
              "documentation": {
                "identifier": "ActionJobMetadata",
                "newPage": false,
                "searchKey": "codemonitors.ActionJobMetadata",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type ActionJobMetadata struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype ActionJobMetadata struct {\n\tDescription string\n\tMonitorID   int64\n\tNumResults  *int\n\n\t// The query with after: filter.\n\tQuery string\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#Monitor",
              "documentation": {
                "identifier": "Monitor",
                "newPage": false,
                "searchKey": "codemonitors.Monitor",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Monitor struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Monitor struct {\n\tID              int64\n\tCreatedBy       int32\n\tCreatedAt       time.Time\n\tChangedBy       int32\n\tChangedAt       time.Time\n\tDescription     string\n\tEnabled         bool\n\tNamespaceUserID *int32\n\tNamespaceOrgID  *int32\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#MonitorEmail",
              "documentation": {
                "identifier": "MonitorEmail",
                "newPage": false,
                "searchKey": "codemonitors.MonitorEmail",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type MonitorEmail struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype MonitorEmail struct {\n\tId        int64\n\tMonitor   int64\n\tEnabled   bool\n\tPriority  string\n\tHeader    string\n\tCreatedBy int32\n\tCreatedAt time.Time\n\tChangedBy int32\n\tChangedAt time.Time\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#MonitorQuery",
              "documentation": {
                "identifier": "MonitorQuery",
                "newPage": false,
                "searchKey": "codemonitors.MonitorQuery",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type MonitorQuery struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype MonitorQuery struct {\n\tId           int64\n\tMonitor      int64\n\tQueryString  string\n\tNextRun      time.Time\n\tLatestResult *time.Time\n\tCreatedBy    int32\n\tCreatedAt    time.Time\n\tChangedBy    int32\n\tChangedAt    time.Time\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#Recipient",
              "documentation": {
                "identifier": "Recipient",
                "newPage": false,
                "searchKey": "codemonitors.Recipient",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Recipient struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Recipient struct {\n\tID              int64\n\tEmail           int64\n\tNamespaceUserID *int32\n\tNamespaceOrgID  *int32\n}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#Store",
              "documentation": {
                "identifier": "Store",
                "newPage": false,
                "searchKey": "codemonitors.Store",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type Store struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype Store struct {\n\t*basestore.Store\n\tnow func() time.Time\n}\n```\n\nStore exposes methods to read and write codemonitors domain models from persistent storage. \n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#NewStore",
                    "documentation": {
                      "identifier": "NewStore",
                      "newPage": false,
                      "searchKey": "codemonitors.NewStore",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewStore(db dbutil.DB) *Store"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewStore(db dbutil.DB) *Store\n```\n\nNewStore returns a new Store backed by the given database. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#NewStoreWithClock",
                    "documentation": {
                      "identifier": "NewStoreWithClock",
                      "newPage": false,
                      "searchKey": "codemonitors.NewStoreWithClock",
                      "tags": [
                        "function"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func NewStoreWithClock(db dbutil.DB, clock func() time.Time) *Store"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc NewStoreWithClock(db dbutil.DB, clock func() time.Time) *Store\n```\n\nNewStoreWithClock returns a new Store backed by the given database and clock for timestamps. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#newTestStore",
                    "documentation": {
                      "identifier": "newTestStore",
                      "newPage": false,
                      "searchKey": "codemonitors.newTestStore",
                      "tags": [
                        "function",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func newTestStore(t *testing.T) (context.Context, *Store)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc newTestStore(t *testing.T) (context.Context, *Store)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.ActionEmailByIDInt64",
                    "documentation": {
                      "identifier": "Store.ActionEmailByIDInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.ActionEmailByIDInt64",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) ActionEmailByIDInt64(ctx context.Context, emailID int64) (m *MonitorEmail, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) ActionEmailByIDInt64(ctx context.Context, emailID int64) (m *MonitorEmail, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.ActionJobForIDInt",
                    "documentation": {
                      "identifier": "Store.ActionJobForIDInt",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.ActionJobForIDInt",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) ActionJobForIDInt(ctx context.Context, recordID int) (*ActionJob, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) ActionJobForIDInt(ctx context.Context, recordID int) (*ActionJob, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.AllRecipientsForEmailIDInt64",
                    "documentation": {
                      "identifier": "Store.AllRecipientsForEmailIDInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.AllRecipientsForEmailIDInt64",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) AllRecipientsForEmailIDInt64(ctx context.Context, emailID int64) (rs []*Recipient, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) AllRecipientsForEmailIDInt64(ctx context.Context, emailID int64) (rs []*Recipient, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.Clock",
                    "documentation": {
                      "identifier": "Store.Clock",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.Clock",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) Clock() func() time.Time"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) Clock() func() time.Time\n```\n\nClock returns the clock of the underlying store. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.CreateActionEmail",
                    "documentation": {
                      "identifier": "Store.CreateActionEmail",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.CreateActionEmail",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) CreateActionEmail(ctx context.Context, monitorID int64, action *graphqlbackend.CreateActionArgs) (e *MonitorEmail, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) CreateActionEmail(ctx context.Context, monitorID int64, action *graphqlbackend.CreateActionArgs) (e *MonitorEmail, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.CreateActions",
                    "documentation": {
                      "identifier": "Store.CreateActions",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.CreateActions",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) CreateActions(ctx context.Context, args []*graphqlbackend.CreateActionArgs, monitorID int64) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) CreateActions(ctx context.Context, args []*graphqlbackend.CreateActionArgs, monitorID int64) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.CreateCodeMonitor",
                    "documentation": {
                      "identifier": "Store.CreateCodeMonitor",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.CreateCodeMonitor",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) CreateCodeMonitor(ctx context.Context, args *graphqlbackend.CreateCodeMonitorArgs) (m *Monitor, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) CreateCodeMonitor(ctx context.Context, args *graphqlbackend.CreateCodeMonitorArgs) (m *Monitor, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.CreateMonitor",
                    "documentation": {
                      "identifier": "Store.CreateMonitor",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.CreateMonitor",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) CreateMonitor(ctx context.Context, args *graphqlbackend.CreateMonitorArgs) (m *Monitor, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) CreateMonitor(ctx context.Context, args *graphqlbackend.CreateMonitorArgs) (m *Monitor, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.CreateRecipients",
                    "documentation": {
                      "identifier": "Store.CreateRecipients",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.CreateRecipients",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) CreateRecipients(ctx context.Context, recipients []graphql.ID, emailID int64) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) CreateRecipients(ctx context.Context, recipients []graphql.ID, emailID int64) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.CreateTriggerQuery",
                    "documentation": {
                      "identifier": "Store.CreateTriggerQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.CreateTriggerQuery",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) CreateTriggerQuery(ctx context.Context, monitorID int64, args *graphqlbackend.CreateTriggerArgs) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) CreateTriggerQuery(ctx context.Context, monitorID int64, args *graphqlbackend.CreateTriggerArgs) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.DeleteActionsInt64",
                    "documentation": {
                      "identifier": "Store.DeleteActionsInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.DeleteActionsInt64",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) DeleteActionsInt64(ctx context.Context, actionIDs []int64, monitorID int64) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) DeleteActionsInt64(ctx context.Context, actionIDs []int64, monitorID int64) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.DeleteMonitor",
                    "documentation": {
                      "identifier": "Store.DeleteMonitor",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.DeleteMonitor",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) DeleteMonitor(ctx context.Context, args *graphqlbackend.DeleteCodeMonitorArgs) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) DeleteMonitor(ctx context.Context, args *graphqlbackend.DeleteCodeMonitorArgs) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.DeleteObsoleteJobLogs",
                    "documentation": {
                      "identifier": "Store.DeleteObsoleteJobLogs",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.DeleteObsoleteJobLogs",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) DeleteObsoleteJobLogs(ctx context.Context) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) DeleteObsoleteJobLogs(ctx context.Context) error\n```\n\nDeleteObsoleteJobLogs deletes all runs which are marked as completed and did not return results. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.DeleteOldJobLogs",
                    "documentation": {
                      "identifier": "Store.DeleteOldJobLogs",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.DeleteOldJobLogs",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) DeleteOldJobLogs(ctx context.Context, retentionInDays int) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) DeleteOldJobLogs(ctx context.Context, retentionInDays int) error\n```\n\nDeleteOldJobLogs deletes trigger jobs which have finished and are older than 'retention' days. Due to cascading, action jobs will be deleted as well. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.DeleteRecipients",
                    "documentation": {
                      "identifier": "Store.DeleteRecipients",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.DeleteRecipients",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) DeleteRecipients(ctx context.Context, emailID int64) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) DeleteRecipients(ctx context.Context, emailID int64) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.EnqueueActionEmailsForQueryIDInt64",
                    "documentation": {
                      "identifier": "Store.EnqueueActionEmailsForQueryIDInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.EnqueueActionEmailsForQueryIDInt64",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) EnqueueActionEmailsForQueryIDInt64(ctx context.Context, queryID int64, triggerEventID int) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) EnqueueActionEmailsForQueryIDInt64(ctx context.Context, queryID int64, triggerEventID int) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.EnqueueTriggerQueries",
                    "documentation": {
                      "identifier": "Store.EnqueueTriggerQueries",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.EnqueueTriggerQueries",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) EnqueueTriggerQueries(ctx context.Context) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) EnqueueTriggerQueries(ctx context.Context) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.GetActionJobMetadata",
                    "documentation": {
                      "identifier": "Store.GetActionJobMetadata",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.GetActionJobMetadata",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) GetActionJobMetadata(ctx context.Context, recordID int) (m *ActionJobMetadata, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) GetActionJobMetadata(ctx context.Context, recordID int) (m *ActionJobMetadata, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.GetEventsForQueryIDInt64",
                    "documentation": {
                      "identifier": "Store.GetEventsForQueryIDInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.GetEventsForQueryIDInt64",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) GetEventsForQueryIDInt64(ctx context.Context, queryID int64, args *graphqlbackend.ListEventsArgs) ([]*TriggerJobs, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) GetEventsForQueryIDInt64(ctx context.Context, queryID int64, args *graphqlbackend.ListEventsArgs) ([]*TriggerJobs, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.GetQueryByRecordID",
                    "documentation": {
                      "identifier": "Store.GetQueryByRecordID",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.GetQueryByRecordID",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) GetQueryByRecordID(ctx context.Context, recordID int) (query *MonitorQuery, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) GetQueryByRecordID(ctx context.Context, recordID int) (query *MonitorQuery, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.LogSearch",
                    "documentation": {
                      "identifier": "Store.LogSearch",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.LogSearch",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) LogSearch(ctx context.Context, queryString string, numResults int, recordID int) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) LogSearch(ctx context.Context, queryString string, numResults int, recordID int) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.MonitorByIDInt64",
                    "documentation": {
                      "identifier": "Store.MonitorByIDInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.MonitorByIDInt64",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) MonitorByIDInt64(ctx context.Context, monitorID int64) (m *Monitor, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) MonitorByIDInt64(ctx context.Context, monitorID int64) (m *Monitor, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.Monitors",
                    "documentation": {
                      "identifier": "Store.Monitors",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.Monitors",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) Monitors(ctx context.Context, userID int32, args *graphqlbackend.ListMonitorsArgs) ([]*Monitor, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) Monitors(ctx context.Context, userID int32, args *graphqlbackend.ListMonitorsArgs) ([]*Monitor, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.Now",
                    "documentation": {
                      "identifier": "Store.Now",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.Now",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) Now() time.Time"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) Now() time.Time\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.ReadActionEmailEvents",
                    "documentation": {
                      "identifier": "Store.ReadActionEmailEvents",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.ReadActionEmailEvents",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) ReadActionEmailEvents(ctx context.Context, emailID int64, triggerEventID *int, args *graphqlbackend.ListEventsArgs) (js []*ActionJob, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) ReadActionEmailEvents(ctx context.Context, emailID int64, triggerEventID *int, args *graphqlbackend.ListEventsArgs) (js []*ActionJob, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.ReadActionEmailQuery",
                    "documentation": {
                      "identifier": "Store.ReadActionEmailQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.ReadActionEmailQuery",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) ReadActionEmailQuery(ctx context.Context, monitorID int64, args *graphqlbackend.ListActionArgs) (*sqlf.Query, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) ReadActionEmailQuery(ctx context.Context, monitorID int64, args *graphqlbackend.ListActionArgs) (*sqlf.Query, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.RecipientsForEmailIDInt64",
                    "documentation": {
                      "identifier": "Store.RecipientsForEmailIDInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.RecipientsForEmailIDInt64",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) RecipientsForEmailIDInt64(ctx context.Context, emailID int64, args *graphqlbackend.ListRecipientsArgs) ([]*Recipient, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) RecipientsForEmailIDInt64(ctx context.Context, emailID int64, args *graphqlbackend.ListRecipientsArgs) ([]*Recipient, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.ResetTriggerQueryTimestamps",
                    "documentation": {
                      "identifier": "Store.ResetTriggerQueryTimestamps",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.ResetTriggerQueryTimestamps",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) ResetTriggerQueryTimestamps(ctx context.Context, queryID int64) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) ResetTriggerQueryTimestamps(ctx context.Context, queryID int64) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.SetTriggerQueryNextRun",
                    "documentation": {
                      "identifier": "Store.SetTriggerQueryNextRun",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.SetTriggerQueryNextRun",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) SetTriggerQueryNextRun(ctx context.Context, triggerQueryID int64, next time.Time, latestResults time.Time) error"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) SetTriggerQueryNextRun(ctx context.Context, triggerQueryID int64, next time.Time, latestResults time.Time) error\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.ToggleMonitor",
                    "documentation": {
                      "identifier": "Store.ToggleMonitor",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.ToggleMonitor",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) ToggleMonitor(ctx context.Context, args *graphqlbackend.ToggleCodeMonitorArgs) (m *Monitor, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) ToggleMonitor(ctx context.Context, args *graphqlbackend.ToggleCodeMonitorArgs) (m *Monitor, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.TotalActionEmailEvents",
                    "documentation": {
                      "identifier": "Store.TotalActionEmailEvents",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.TotalActionEmailEvents",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) TotalActionEmailEvents(ctx context.Context, emailID int64, triggerEventID *int) (totalCount int32, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) TotalActionEmailEvents(ctx context.Context, emailID int64, triggerEventID *int) (totalCount int32, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.TotalCountActionEmails",
                    "documentation": {
                      "identifier": "Store.TotalCountActionEmails",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.TotalCountActionEmails",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) TotalCountActionEmails(ctx context.Context, monitorID int64) (count int32, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) TotalCountActionEmails(ctx context.Context, monitorID int64) (count int32, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.TotalCountEventsForQueryIDInt64",
                    "documentation": {
                      "identifier": "Store.TotalCountEventsForQueryIDInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.TotalCountEventsForQueryIDInt64",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) TotalCountEventsForQueryIDInt64(ctx context.Context, queryID int64) (totalCount int32, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) TotalCountEventsForQueryIDInt64(ctx context.Context, queryID int64) (totalCount int32, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.TotalCountMonitors",
                    "documentation": {
                      "identifier": "Store.TotalCountMonitors",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.TotalCountMonitors",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) TotalCountMonitors(ctx context.Context, userID int32) (count int32, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) TotalCountMonitors(ctx context.Context, userID int32) (count int32, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.TotalCountRecipients",
                    "documentation": {
                      "identifier": "Store.TotalCountRecipients",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.TotalCountRecipients",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) TotalCountRecipients(ctx context.Context, emailID int64) (count int32, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) TotalCountRecipients(ctx context.Context, emailID int64) (count int32, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.Transact",
                    "documentation": {
                      "identifier": "Store.Transact",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.Transact",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) Transact(ctx context.Context) (*Store, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) Transact(ctx context.Context) (*Store, error)\n```\n\nTransact creates a new transaction. It's required to implement this method and wrap the Transact method of the underlying basestore.Store. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.TriggerQueryByMonitorIDInt64",
                    "documentation": {
                      "identifier": "Store.TriggerQueryByMonitorIDInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.TriggerQueryByMonitorIDInt64",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) TriggerQueryByMonitorIDInt64(ctx context.Context, monitorID int64) (*MonitorQuery, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) TriggerQueryByMonitorIDInt64(ctx context.Context, monitorID int64) (*MonitorQuery, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.UpdateActionEmail",
                    "documentation": {
                      "identifier": "Store.UpdateActionEmail",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.UpdateActionEmail",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) UpdateActionEmail(ctx context.Context, monitorID int64, action *graphqlbackend.EditActionArgs) (e *MonitorEmail, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) UpdateActionEmail(ctx context.Context, monitorID int64, action *graphqlbackend.EditActionArgs) (e *MonitorEmail, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.UpdateMonitor",
                    "documentation": {
                      "identifier": "Store.UpdateMonitor",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.UpdateMonitor",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) UpdateMonitor(ctx context.Context, args *graphqlbackend.UpdateCodeMonitorArgs) (m *Monitor, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) UpdateMonitor(ctx context.Context, args *graphqlbackend.UpdateCodeMonitorArgs) (m *Monitor, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.UpdateTriggerQuery",
                    "documentation": {
                      "identifier": "Store.UpdateTriggerQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.UpdateTriggerQuery",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) UpdateTriggerQuery(ctx context.Context, args *graphqlbackend.UpdateCodeMonitorArgs) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) UpdateTriggerQuery(ctx context.Context, args *graphqlbackend.UpdateCodeMonitorArgs) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.With",
                    "documentation": {
                      "identifier": "Store.With",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.With",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) With(other basestore.ShareableStore) *Store"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) With(other basestore.ShareableStore) *Store\n```\n\nWith creates a new store with the underlying database handle from the given store. \n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.createActionEmailQuery",
                    "documentation": {
                      "identifier": "Store.createActionEmailQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.createActionEmailQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) createActionEmailQuery(ctx context.Context, monitorID int64, args *graphqlbackend.CreateActionEmailArgs) (*sqlf.Query, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) createActionEmailQuery(ctx context.Context, monitorID int64, args *graphqlbackend.CreateActionEmailArgs) (*sqlf.Query, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.createCodeMonitorQuery",
                    "documentation": {
                      "identifier": "Store.createCodeMonitorQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.createCodeMonitorQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) createCodeMonitorQuery(ctx context.Context, args *graphqlbackend.CreateMonitorArgs) (*sqlf.Query, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) createCodeMonitorQuery(ctx context.Context, args *graphqlbackend.CreateMonitorArgs) (*sqlf.Query, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.createRecipient",
                    "documentation": {
                      "identifier": "Store.createRecipient",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.createRecipient",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) createRecipient(ctx context.Context, recipient graphql.ID, emailID int64) (err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) createRecipient(ctx context.Context, recipient graphql.ID, emailID int64) (err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.createTriggerQueryQuery",
                    "documentation": {
                      "identifier": "Store.createTriggerQueryQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.createTriggerQueryQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) createTriggerQueryQuery(ctx context.Context, monitorID int64, args *graphqlbackend.CreateTriggerArgs) (*sqlf.Query, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) createTriggerQueryQuery(ctx context.Context, monitorID int64, args *graphqlbackend.CreateTriggerArgs) (*sqlf.Query, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.deleteMonitorQuery",
                    "documentation": {
                      "identifier": "Store.deleteMonitorQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.deleteMonitorQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) deleteMonitorQuery(ctx context.Context, args *graphqlbackend.DeleteCodeMonitorArgs) (*sqlf.Query, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) deleteMonitorQuery(ctx context.Context, args *graphqlbackend.DeleteCodeMonitorArgs) (*sqlf.Query, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.insertTestMonitor",
                    "documentation": {
                      "identifier": "Store.insertTestMonitor",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.insertTestMonitor",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) insertTestMonitor(ctx context.Context, t *testing.T) (*Monitor, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) insertTestMonitor(ctx context.Context, t *testing.T) (*Monitor, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.runActionJobQuery",
                    "documentation": {
                      "identifier": "Store.runActionJobQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.runActionJobQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) runActionJobQuery(ctx context.Context, q *sqlf.Query) (ajs *ActionJob, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) runActionJobQuery(ctx context.Context, q *sqlf.Query) (ajs *ActionJob, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.runEmailQuery",
                    "documentation": {
                      "identifier": "Store.runEmailQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.runEmailQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) runEmailQuery(ctx context.Context, q *sqlf.Query) (*MonitorEmail, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) runEmailQuery(ctx context.Context, q *sqlf.Query) (*MonitorEmail, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.runMonitorQuery",
                    "documentation": {
                      "identifier": "Store.runMonitorQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.runMonitorQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) runMonitorQuery(ctx context.Context, q *sqlf.Query) (*Monitor, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) runMonitorQuery(ctx context.Context, q *sqlf.Query) (*Monitor, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.runTriggerQuery",
                    "documentation": {
                      "identifier": "Store.runTriggerQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.runTriggerQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) runTriggerQuery(ctx context.Context, q *sqlf.Query) (*MonitorQuery, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) runTriggerQuery(ctx context.Context, q *sqlf.Query) (*MonitorQuery, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.toggleCodeMonitorQuery",
                    "documentation": {
                      "identifier": "Store.toggleCodeMonitorQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.toggleCodeMonitorQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) toggleCodeMonitorQuery(ctx context.Context, args *graphqlbackend.ToggleCodeMonitorArgs) (*sqlf.Query, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) toggleCodeMonitorQuery(ctx context.Context, args *graphqlbackend.ToggleCodeMonitorArgs) (*sqlf.Query, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.triggerQueryByIDInt64",
                    "documentation": {
                      "identifier": "Store.triggerQueryByIDInt64",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.triggerQueryByIDInt64",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) triggerQueryByIDInt64(ctx context.Context, queryID int64) (*MonitorQuery, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) triggerQueryByIDInt64(ctx context.Context, queryID int64) (*MonitorQuery, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.updateActionEmailQuery",
                    "documentation": {
                      "identifier": "Store.updateActionEmailQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.updateActionEmailQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) updateActionEmailQuery(ctx context.Context, monitorID int64, args *graphqlbackend.EditActionEmailArgs) (q *sqlf.Query, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) updateActionEmailQuery(ctx context.Context, monitorID int64, args *graphqlbackend.EditActionEmailArgs) (q *sqlf.Query, err error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.updateCodeMonitorQuery",
                    "documentation": {
                      "identifier": "Store.updateCodeMonitorQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.updateCodeMonitorQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) updateCodeMonitorQuery(ctx context.Context, args *graphqlbackend.UpdateCodeMonitorArgs) (*sqlf.Query, error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) updateCodeMonitorQuery(ctx context.Context, args *graphqlbackend.UpdateCodeMonitorArgs) (*sqlf.Query, error)\n```\n\n"
                    },
                    "children": null
                  }
                },
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#Store.updateTriggerQueryQuery",
                    "documentation": {
                      "identifier": "Store.updateTriggerQueryQuery",
                      "newPage": false,
                      "searchKey": "codemonitors.Store.updateTriggerQueryQuery",
                      "tags": [
                        "method",
                        "private"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (s *Store) updateTriggerQueryQuery(ctx context.Context, args *graphqlbackend.UpdateCodeMonitorArgs) (q *sqlf.Query, err error)"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (s *Store) updateTriggerQueryQuery(ctx context.Context, args *graphqlbackend.UpdateCodeMonitorArgs) (q *sqlf.Query, err error)\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TriggerJobs",
              "documentation": {
                "identifier": "TriggerJobs",
                "newPage": false,
                "searchKey": "codemonitors.TriggerJobs",
                "tags": [
                  "struct"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "type TriggerJobs struct"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\ntype TriggerJobs struct {\n\tId    int\n\tQuery int64\n\n\t// The query we ran including after: filter.\n\tQueryString *string\n\n\t// Whether we got any results.\n\tResults    *bool\n\tNumResults *int\n\n\t// Fields demanded for any dbworker.\n\tState          string\n\tFailureMessage *string\n\tStartedAt      *time.Time\n\tFinishedAt     *time.Time\n\tProcessAfter   *time.Time\n\tNumResets      int32\n\tNumFailures    int32\n\tLogContents    *string\n}\n```\n\n"
              },
              "children": [
                {
                  "node": {
                    "pathID": "/enterprise/internal/codemonitors#TriggerJobs.RecordID",
                    "documentation": {
                      "identifier": "TriggerJobs.RecordID",
                      "newPage": false,
                      "searchKey": "codemonitors.TriggerJobs.RecordID",
                      "tags": [
                        "method"
                      ]
                    },
                    "label": {
                      "kind": "plaintext",
                      "value": "func (r *TriggerJobs) RecordID() int"
                    },
                    "detail": {
                      "kind": "markdown",
                      "value": "```Go\nfunc (r *TriggerJobs) RecordID() int\n```\n\n"
                    },
                    "children": null
                  }
                }
              ]
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/enterprise/internal/codemonitors#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#ScanActionJobs",
              "documentation": {
                "identifier": "ScanActionJobs",
                "newPage": false,
                "searchKey": "codemonitors.ScanActionJobs",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ScanActionJobs(rows *sql.Rows, err error) (workerutil.Record, bool, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ScanActionJobs(rows *sql.Rows, err error) (workerutil.Record, bool, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#ScanEmails",
              "documentation": {
                "identifier": "ScanEmails",
                "newPage": false,
                "searchKey": "codemonitors.ScanEmails",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ScanEmails(rows *sql.Rows) (ms []*MonitorEmail, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ScanEmails(rows *sql.Rows) (ms []*MonitorEmail, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#ScanTriggerJobs",
              "documentation": {
                "identifier": "ScanTriggerJobs",
                "newPage": false,
                "searchKey": "codemonitors.ScanTriggerJobs",
                "tags": [
                  "function"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func ScanTriggerJobs(rows *sql.Rows, err error) (workerutil.Record, bool, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ScanTriggerJobs(rows *sql.Rows, err error) (workerutil.Record, bool, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TestAllRecipientsForEmailIDInt64",
              "documentation": {
                "identifier": "TestAllRecipientsForEmailIDInt64",
                "newPage": false,
                "searchKey": "codemonitors.TestAllRecipientsForEmailIDInt64",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestAllRecipientsForEmailIDInt64(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestAllRecipientsForEmailIDInt64(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TestDeleteOldJobLogs",
              "documentation": {
                "identifier": "TestDeleteOldJobLogs",
                "newPage": false,
                "searchKey": "codemonitors.TestDeleteOldJobLogs",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestDeleteOldJobLogs(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestDeleteOldJobLogs(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TestEnqueueActionEmailsForQueryIDInt64QueryByRecordID",
              "documentation": {
                "identifier": "TestEnqueueActionEmailsForQueryIDInt64QueryByRecordID",
                "newPage": false,
                "searchKey": "codemonitors.TestEnqueueActionEmailsForQueryIDInt64QueryByRecordID",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestEnqueueActionEmailsForQueryIDInt64QueryByRecordID(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestEnqueueActionEmailsForQueryIDInt64QueryByRecordID(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TestGetActionJobMetadata",
              "documentation": {
                "identifier": "TestGetActionJobMetadata",
                "newPage": false,
                "searchKey": "codemonitors.TestGetActionJobMetadata",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestGetActionJobMetadata(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestGetActionJobMetadata(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TestQueryByRecordID",
              "documentation": {
                "identifier": "TestQueryByRecordID",
                "newPage": false,
                "searchKey": "codemonitors.TestQueryByRecordID",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestQueryByRecordID(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestQueryByRecordID(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TestResetTriggerQueryTimestamps",
              "documentation": {
                "identifier": "TestResetTriggerQueryTimestamps",
                "newPage": false,
                "searchKey": "codemonitors.TestResetTriggerQueryTimestamps",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestResetTriggerQueryTimestamps(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestResetTriggerQueryTimestamps(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TestScanActionJobs",
              "documentation": {
                "identifier": "TestScanActionJobs",
                "newPage": false,
                "searchKey": "codemonitors.TestScanActionJobs",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestScanActionJobs(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestScanActionJobs(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#TestTriggerQueryNextRun",
              "documentation": {
                "identifier": "TestTriggerQueryNextRun",
                "newPage": false,
                "searchKey": "codemonitors.TestTriggerQueryNextRun",
                "tags": [
                  "function",
                  "private",
                  "test"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTriggerQueryNextRun(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTriggerQueryNextRun(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#deleteActionsEmailQuery",
              "documentation": {
                "identifier": "deleteActionsEmailQuery",
                "newPage": false,
                "searchKey": "codemonitors.deleteActionsEmailQuery",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func deleteActionsEmailQuery(ctx context.Context, actionIDs []int64, monitorID int64) (*sqlf.Query, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc deleteActionsEmailQuery(ctx context.Context, actionIDs []int64, monitorID int64) (*sqlf.Query, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#deleteRecipientsQuery",
              "documentation": {
                "identifier": "deleteRecipientsQuery",
                "newPage": false,
                "searchKey": "codemonitors.deleteRecipientsQuery",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func deleteRecipientsQuery(ctx context.Context, emailId int64) (*sqlf.Query, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc deleteRecipientsQuery(ctx context.Context, emailId int64) (*sqlf.Query, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#init.main_test.go",
              "documentation": {
                "identifier": "init.main_test.go",
                "newPage": false,
                "searchKey": "codemonitors.init",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func init()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc init()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#insertTestUser",
              "documentation": {
                "identifier": "insertTestUser",
                "newPage": false,
                "searchKey": "codemonitors.insertTestUser",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func insertTestUser(t *testing.T, db *sql.DB, name string, isAdmin bool) (userID int32)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc insertTestUser(t *testing.T, db *sql.DB, name string, isAdmin bool) (userID int32)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#monitorsQuery",
              "documentation": {
                "identifier": "monitorsQuery",
                "newPage": false,
                "searchKey": "codemonitors.monitorsQuery",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func monitorsQuery(userID int32, args *graphqlbackend.ListMonitorsArgs) (*sqlf.Query, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc monitorsQuery(userID int32, args *graphqlbackend.ListMonitorsArgs) (*sqlf.Query, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#newTestUser",
              "documentation": {
                "identifier": "newTestUser",
                "newPage": false,
                "searchKey": "codemonitors.newTestUser",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func newTestUser(ctx context.Context, t *testing.T) (name string, id int32, namespace graphql.ID, userContext context.Context)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc newTestUser(ctx context.Context, t *testing.T) (name string, id int32, namespace graphql.ID, userContext context.Context)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#nilOrInt32",
              "documentation": {
                "identifier": "nilOrInt32",
                "newPage": false,
                "searchKey": "codemonitors.nilOrInt32",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func nilOrInt32(n int32) *int32"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc nilOrInt32(n int32) *int32\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#readRecipientQuery",
              "documentation": {
                "identifier": "readRecipientQuery",
                "newPage": false,
                "searchKey": "codemonitors.readRecipientQuery",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func readRecipientQuery(ctx context.Context, emailId int64, args *graphqlbackend.ListRecipientsArgs) (*sqlf.Query, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc readRecipientQuery(ctx context.Context, emailId int64, args *graphqlbackend.ListRecipientsArgs) (*sqlf.Query, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#scanActionJobs",
              "documentation": {
                "identifier": "scanActionJobs",
                "newPage": false,
                "searchKey": "codemonitors.scanActionJobs",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func scanActionJobs(rows *sql.Rows, err error) ([]*ActionJob, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc scanActionJobs(rows *sql.Rows, err error) ([]*ActionJob, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#scanMonitors",
              "documentation": {
                "identifier": "scanMonitors",
                "newPage": false,
                "searchKey": "codemonitors.scanMonitors",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func scanMonitors(rows *sql.Rows) ([]*Monitor, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc scanMonitors(rows *sql.Rows) ([]*Monitor, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#scanRecipients",
              "documentation": {
                "identifier": "scanRecipients",
                "newPage": false,
                "searchKey": "codemonitors.scanRecipients",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func scanRecipients(rows *sql.Rows) (ms []*Recipient, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc scanRecipients(rows *sql.Rows) (ms []*Recipient, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#scanTriggerJobs",
              "documentation": {
                "identifier": "scanTriggerJobs",
                "newPage": false,
                "searchKey": "codemonitors.scanTriggerJobs",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func scanTriggerJobs(rows *sql.Rows, err error) ([]*TriggerJobs, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc scanTriggerJobs(rows *sql.Rows, err error) ([]*TriggerJobs, error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#scanTriggerQueries",
              "documentation": {
                "identifier": "scanTriggerQueries",
                "newPage": false,
                "searchKey": "codemonitors.scanTriggerQueries",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func scanTriggerQueries(rows *sql.Rows) (ms []*MonitorQuery, err error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc scanTriggerQueries(rows *sql.Rows) (ms []*MonitorQuery, err error)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/enterprise/internal/codemonitors#unmarshalAfter",
              "documentation": {
                "identifier": "unmarshalAfter",
                "newPage": false,
                "searchKey": "codemonitors.unmarshalAfter",
                "tags": [
                  "function",
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func unmarshalAfter(after *string) (int64, error)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc unmarshalAfter(after *string) (int64, error)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "pathID": "/enterprise/internal/codemonitors/background"
    },
    {
      "pathID": "/enterprise/internal/codemonitors/email"
    },
    {
      "pathID": "/enterprise/internal/codemonitors/resolvers"
    },
    {
      "pathID": "/enterprise/internal/codemonitors/storetest"
    }
  ]
}
