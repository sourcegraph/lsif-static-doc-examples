{
  "pathID": "/cmd/frontend/internal/auth",
  "documentation": {
    "identifier": "auth",
    "newPage": true,
    "searchKey": "cmd/frontend/internal/auth",
    "tags": [
      "private"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package auth"
  },
  "detail": {
    "kind": "markdown",
    "value": ""
  },
  "children": [
    {
      "node": {
        "pathID": "/cmd/frontend/internal/auth#const",
        "documentation": {
          "identifier": "const",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Constants"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#overrideSecretHeader",
              "documentation": {
                "identifier": "overrideSecretHeader",
                "newPage": false,
                "searchKey": "auth.overrideSecretHeader",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const overrideSecretHeader"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst overrideSecretHeader = \"X-Override-Auth-Secret\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#overrideUsernameHeader",
              "documentation": {
                "identifier": "overrideUsernameHeader",
                "newPage": false,
                "searchKey": "auth.overrideUsernameHeader",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const overrideUsernameHeader"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst overrideUsernameHeader = \"X-Override-Auth-Username\"\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#defaultUsername",
              "documentation": {
                "identifier": "defaultUsername",
                "newPage": false,
                "searchKey": "auth.defaultUsername",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "const defaultUsername"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nconst defaultUsername = \"override-auth-user\"\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/cmd/frontend/internal/auth#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#envOverrideAuthSecret",
              "documentation": {
                "identifier": "envOverrideAuthSecret",
                "newPage": false,
                "searchKey": "auth.envOverrideAuthSecret",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var envOverrideAuthSecret"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar envOverrideAuthSecret = ...\n```\n\nenvOverrideAuthSecret (the env var OVERRIDE_AUTH_SECRET) is the preferred source of the secret for overriding auth. \n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/cmd/frontend/internal/auth#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#init.config.go",
              "documentation": {
                "identifier": "init.config.go",
                "newPage": false,
                "searchKey": "auth.init",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func init()"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc init()\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#validateConfig",
              "documentation": {
                "identifier": "validateConfig",
                "newPage": false,
                "searchKey": "auth.validateConfig",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func validateConfig(c conf.Unified) (problems conf.Problems)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc validateConfig(c conf.Unified) (problems conf.Problems)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#ForbidAllRequestsMiddleware",
              "documentation": {
                "identifier": "ForbidAllRequestsMiddleware",
                "newPage": false,
                "searchKey": "auth.ForbidAllRequestsMiddleware",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func ForbidAllRequestsMiddleware(next http.Handler) http.Handler"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc ForbidAllRequestsMiddleware(next http.Handler) http.Handler\n```\n\nForbidAllRequestsMiddleware forbids all requests. It is used when no auth provider is configured (as a safer default than \"server is 100% public, no auth required\"). \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#OverrideAuthMiddleware",
              "documentation": {
                "identifier": "OverrideAuthMiddleware",
                "newPage": false,
                "searchKey": "auth.OverrideAuthMiddleware",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func OverrideAuthMiddleware(next http.Handler) http.Handler"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc OverrideAuthMiddleware(next http.Handler) http.Handler\n```\n\nOverrideAuthMiddleware is middleware that causes a new authenticated session (associated with a new user named \"anon-user\") to be started if the client provides a secret header value specified in site config. \n\nIt is used to enable our e2e tests to authenticate to [https://sourcegraph.sgdev.org](https://sourcegraph.sgdev.org) without needing to give them Google Workspace access. \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#TestValidateCustom",
              "documentation": {
                "identifier": "TestValidateCustom",
                "newPage": false,
                "searchKey": "auth.TestValidateCustom",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestValidateCustom(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestValidateCustom(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#TestForbidAllMiddleware",
              "documentation": {
                "identifier": "TestForbidAllMiddleware",
                "newPage": false,
                "searchKey": "auth.TestForbidAllMiddleware",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestForbidAllMiddleware(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestForbidAllMiddleware(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/auth#TestOverrideAuthMiddleware",
              "documentation": {
                "identifier": "TestOverrideAuthMiddleware",
                "newPage": false,
                "searchKey": "auth.TestOverrideAuthMiddleware",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestOverrideAuthMiddleware(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestOverrideAuthMiddleware(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "pathID": "/cmd/frontend/internal/auth/userpasswd"
    }
  ]
}
