{
  "pathID": "/cmd/frontend/internal/cli/loghandlers",
  "documentation": {
    "identifier": "loghandlers",
    "newPage": true,
    "searchKey": "cmd/frontend/internal/cli/loghandlers",
    "tags": [
      "private"
    ]
  },
  "label": {
    "kind": "plaintext",
    "value": "Package loghandlers"
  },
  "detail": {
    "kind": "markdown",
    "value": "Package loghandlers contains log15 handlers/filters used by the sourcegraph cli \n\n"
  },
  "children": [
    {
      "node": {
        "pathID": "/cmd/frontend/internal/cli/loghandlers#var",
        "documentation": {
          "identifier": "var",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Variables"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#noiseyRPC",
              "documentation": {
                "identifier": "noiseyRPC",
                "newPage": false,
                "searchKey": "loghandlers.noiseyRPC",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var noiseyRPC"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar noiseyRPC = []string{\"MirrorRepos.RefreshVCS\"}\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#traces",
              "documentation": {
                "identifier": "traces",
                "newPage": false,
                "searchKey": "loghandlers.traces",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "var traces"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nvar traces = ...\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    },
    {
      "node": {
        "pathID": "/cmd/frontend/internal/cli/loghandlers#func",
        "documentation": {
          "identifier": "func",
          "newPage": false,
          "searchKey": "",
          "tags": [
            "private"
          ]
        },
        "label": {
          "kind": "plaintext",
          "value": "Functions"
        },
        "detail": {
          "kind": "plaintext",
          "value": ""
        },
        "children": [
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#Trace",
              "documentation": {
                "identifier": "Trace",
                "newPage": false,
                "searchKey": "loghandlers.Trace",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func Trace(types []string, threshold time.Duration) func(*log15.Record) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc Trace(types []string, threshold time.Duration) func(*log15.Record) bool\n```\n\nTrace returns a filter for the given traces that run longer than threshold \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#NotNoisey",
              "documentation": {
                "identifier": "NotNoisey",
                "newPage": false,
                "searchKey": "loghandlers.NotNoisey",
                "tags": null
              },
              "label": {
                "kind": "plaintext",
                "value": "func NotNoisey(r *log15.Record) bool"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc NotNoisey(r *log15.Record) bool\n```\n\nNotNoisey filters out high firing and low signal debug logs \n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#TestNotNoisey",
              "documentation": {
                "identifier": "TestNotNoisey",
                "newPage": false,
                "searchKey": "loghandlers.TestNotNoisey",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestNotNoisey(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestNotNoisey(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#TestTrace_All",
              "documentation": {
                "identifier": "TestTrace_All",
                "newPage": false,
                "searchKey": "loghandlers.TestTrace_All",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTrace_All(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTrace_All(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#TestTrace_None",
              "documentation": {
                "identifier": "TestTrace_None",
                "newPage": false,
                "searchKey": "loghandlers.TestTrace_None",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTrace_None(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTrace_None(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#TestTrace_Specific",
              "documentation": {
                "identifier": "TestTrace_Specific",
                "newPage": false,
                "searchKey": "loghandlers.TestTrace_Specific",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTrace_Specific(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTrace_Specific(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#TestTrace_Threshold",
              "documentation": {
                "identifier": "TestTrace_Threshold",
                "newPage": false,
                "searchKey": "loghandlers.TestTrace_Threshold",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func TestTrace_Threshold(t *testing.T)"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc TestTrace_Threshold(t *testing.T)\n```\n\n"
              },
              "children": null
            }
          },
          {
            "node": {
              "pathID": "/cmd/frontend/internal/cli/loghandlers#mkRecord",
              "documentation": {
                "identifier": "mkRecord",
                "newPage": false,
                "searchKey": "loghandlers.mkRecord",
                "tags": [
                  "private"
                ]
              },
              "label": {
                "kind": "plaintext",
                "value": "func mkRecord(lvl log15.Lvl, msg string, ctx ...interface{}) log15.Record"
              },
              "detail": {
                "kind": "markdown",
                "value": "```Go\nfunc mkRecord(lvl log15.Lvl, msg string, ctx ...interface{}) log15.Record\n```\n\n"
              },
              "children": null
            }
          }
        ]
      }
    }
  ]
}
